{"version":3,"sources":["../../src/index.ts","../../src/makeClickHandler.ts","demoSchema.ts","Reports/dataColours.ts","Reports/ResolvedPerCustomer.tsx","Reports/SourceOfErrors.tsx","Reports/TypesOfError.tsx","Reports/RecoverySummary.tsx","Reports/BugsOverTime.tsx","Reports/BugReporting.tsx","FilterPane.tsx","database.ts","localFetch.ts","App.tsx","serviceWorker.ts","index.tsx","../../src/FlowerBIChartBox.tsx","../../src/arrayHelpers.ts","../../src/queryModel.ts","../../src/QueryColumn.ts","../../src/DropDown.tsx","../../src/Layouts.tsx","../../src/FlowerBIValueBox.tsx","../../src/FlowerBITable.tsx","../../src/executeQuery.ts","../../src/QueryValues.ts","../../src/fillDates.ts","../../src/usePageFilters.ts","../../src/useQuery.ts"],"names":["__export","DateReported","Id","QueryColumn","CalendarYearNumber","FirstDayOfQuarter","FirstDayOfMonth","Workflow","Resolved","WorkflowState","SourceOfError","FixedByCustomer","Customer","CustomerName","CategoryCombination","Crashed","DataLoss","SecurityBreach","OffByOne","Slow","StackOverflow","Bug","WorkflowId","CustomerId","ReportedDate","ResolvedDate","AssignedDate","CategoryCombinationId","AssignedCoderId","ResolvedCoderId","dataColours","ResolvedPerCustomer","pageFilters","fetch","id","query","select","customer","bugCount","count","filters","equalTo","getFilters","ref","useRef","result","useQuery","clickHandler","makeClickHandler","title","state","options","data","labels","records","map","x","datasets","label","backgroundColor","SourceOfErrors","sourceOfError","categories","TypesOfError","categoryBits","workflowState","chart","keys","distinctWorkflowStates","distinct","r","bugCountByStateAndCategory","flatMap","keysOf","category","bit","filter","reduce","l","bugCountByCategory","sort","y","orderedCategories","c","scales","xAxes","stacked","yAxes","ticks","beginAtZero","colour","find","RecoverySummary","fixedByCustomer","resolvedBugCount","totals","columns","State","d","values","Count","percentage","dateGroupings","value","BugsOverTime","dateGrouping","useDropDown","period","selected","countAllCauses","countHackers","orderBy","ascending","datedRecords","smartDates","dateLabel","record","hackers","type","lineTension","borderColor","allCauses","className","BugReporting","props","sizes","toDateString","toISOString","substr","useDateInput","init","useState","editing","setEditing","applied","setApplied","dirty","onChange","event","target","apply","initCounter","useFilterPane","visible","setVisible","from","Date","setFullYear","getFullYear","lastYear","to","dates","forEach","setGlobal","greaterThanOrEqualTo","lessThanOrEqualTo","some","toggle","FilterPane","filterPane","onClick","db","a","publicUrl","window","sitePublicUrl","initSqlJs","locateFile","f","SQL","setupDb","Database","getDb","allocDb","makeRandomDate","setDate","getDate","Math","floor","random","formatDate","moment","format","pick","base","min","sourcesOfError","n","push","dateRows","m","getMonth","startOfQuarter","startOfMonth","join","workflows","resolved","length","workflowRows","categoryCombinations","b","e","categoryCombinationsRows","bugs","workflow","reported","assigned","catComb","coderAssigned","coderResolved","bugRows","initSql","run","sql","started","JSON","stringify","exec","finished","console","log","getTime","querySql","blazorReady","Promise","done","notifyBlazorReady","localFetch","queryJson","DotNet","invokeMethodAsync","json","parsed","parse","jsonDateParser","stackTrace","error","firstValueIndex","indexOf","endOfSelects","slice","aggregated","Chart","defaults","global","defaultFontFamily","legend","usePointStyle","maintainAspectRatio","reports","reportNames","Object","App","reportName","setReportName","usePageFilters","report","key","clearInteraction","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","def","clone"],"mappings":"2OAAA,SACA,SACA,SACA,SACA,SACAA,EAAS,EAAT,KACA,U,kFCHA,WAsBA,4BACI,EACA,EACA,EACA,GAGA,IAAM,EAAsD,oBAAlB,EAA+B,EACrE,YAAQ,wBAAe,GAAe,KAAI,SAAC,EAAG,GAAM,SAAE,QAAQ,EAAV,QAExD,MAAO,CACH,QAAO,SAAC,G,MACE,EA/BlB,SAAsB,EAA6B,GAC7C,GAAE,GAAS,EAAK,CACV,IAAE,EAAe,EAAM,kBAAkB,GAAK,GAC9C,KAAS,CACT,IAAM,EAAO,EAAQ,OAAO,KACtB,EAAa,EAAQ,OACrB,EAAe,EAAQ,cAC7B,MAAO,CACH,SAAU,EAAK,OAAO,GACtB,OAAQ,EAAK,SAAS,GAAc,SAsB3B,CAAa,EAAqB,QAAlB,EAAE,EAAS,eAAO,eAAE,eACjD,GAAI,GAAQ,EAAa,CACrB,IAAM,EAAU,EAAK,CAAC,EAAK,SAAU,EAAK,SACtC,IACA,EAAY,eAAe,EAAI,GAC5B,OAAH,QAAG,IAAH,KAAK,wB,wICtCZC,EAAe,CACxBC,GAAI,IAAIC,cAAkB,mBAC1BC,mBAAoB,IAAID,cAAoB,mCAC5CE,kBAAmB,IAAIF,cAAkB,kCACzCG,gBAAiB,IAAIH,cAAkB,iCAiB9BI,GAbL,IAAIJ,cAAkB,mBACN,IAAIA,cAAoB,mCACzB,IAAIA,cAAkB,kCACxB,IAAIA,cAAkB,gCAInC,IAAIA,cAAkB,mBACN,IAAIA,cAAoB,mCACzB,IAAIA,cAAkB,kCACxB,IAAIA,cAAkB,gCAGnB,CACpBD,GAAI,IAAIC,cAAoB,eAC5BK,SAAU,IAAIL,cAAqB,qBACnCM,cAAe,IAAIN,cAAoB,0BACvCO,cAAe,IAAIP,cAAoB,0BACvCQ,gBAAiB,IAAIR,cAAqB,8BAQjCS,GAJL,IAAIT,cAAoB,eACrB,IAAIA,cAAoB,kBAGX,CACpBD,GAAI,IAAIC,cAAoB,eAC5BU,aAAc,IAAIV,cAAoB,2BAa7BW,GATL,IAAIX,cAAoB,oBAClB,IAAIA,cAAoB,0BAI9B,IAAIA,cAAoB,oBAClB,IAAIA,cAAoB,0BAGH,CAC/BD,GAAI,IAAIC,cAAoB,0BAC5BY,QAAS,IAAIZ,cAAqB,+BAClCa,SAAU,IAAIb,cAAqB,gCACnCc,eAAgB,IAAId,cAAqB,sCACzCe,SAAU,IAAIf,cAAqB,gCACnCgB,KAAM,IAAIhB,cAAqB,4BAC/BiB,cAAe,IAAIjB,cAAqB,uCAG/BkB,EAAM,CACfnB,GAAI,IAAIC,cAAoB,UAC5BmB,WAAY,IAAInB,cAAoB,kBACpCoB,WAAY,IAAIpB,cAAoB,kBACpCqB,aAAc,IAAIrB,cAAkB,oBACpCsB,aAAc,IAAItB,cAAkB,oBACpCuB,aAAc,IAAIvB,cAAkB,oBACpCwB,sBAAuB,IAAIxB,cAAoB,6BAC/CyB,gBAAiB,IAAIzB,cAAoB,uBACzC0B,gBAAiB,IAAI1B,cAAoB,wBCxEhC2B,EAAc,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,W,cCSlG,SAASC,EAAT,GAAmE,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAEzCC,EAAK,sBAELC,EAAQ,CACVC,OAAQ,CACJC,SAAUzB,EAASC,aACnByB,SAAUjB,EAAInB,GAAGqC,SAErBC,QAAQ,CACJjC,EAASC,SAASiC,SAAQ,IADvB,mBAEAT,EAAYU,WAAWR,MAI5BS,EAAMC,iBAAY,MAClBC,EAASC,mBAASb,EAAOE,GACzBY,EAAeC,2BAAiBd,EAAIS,EAAKR,EAAMC,OAAQJ,GAE7D,OACI,kBAAC,mBAAD,CAAkBE,GAAIA,EAAIe,MAAM,wBAAwBC,MAAOL,EAAOK,OAClE,kBAAC,MAAD,CACIP,IAAKA,EACLQ,QAAO,eAAOJ,GACdK,KAAM,CACFC,OAAQR,EAAOS,QAAQC,KAAI,SAAAC,GAAC,OAAIA,EAAEnB,YAClCoB,SAAU,CAAC,CACPC,MAAO,QACPC,gBAAiB7B,EACjBsB,KAAMP,EAAOS,QAAQC,KAAI,SAAAC,GAAC,OAAIA,EAAElB,kBC3BjD,SAASsB,EAAT,GAA8D,IAApC5B,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAEpCE,EAAQ,CACVC,OAAQ,CACJyB,cAAetD,EAASG,cACxB4B,SAAUjB,EAAInB,GAAGqC,SAErBC,QAAQ,CACJjC,EAASC,SAASiC,SAAQ,IADvB,mBAEAT,EAAYU,WAXhB,qBAeDG,EAASC,mBAASb,EAAOE,GAEzBQ,EAAMC,iBAAY,MAClBG,EAAeC,2BAlBd,iBAkBmCL,EAAKR,EAAMC,OAAQJ,GAE7D,OACI,kBAAC,mBAAD,CAAkBE,GArBf,iBAqBuBe,MAAM,mBAAmBC,MAAOL,EAAOK,OAC7D,kBAAC,MAAD,CACIP,IAAKA,EACLQ,QAAO,eAAOJ,GACdK,KAAM,CACFC,OAAQR,EAAOS,QAAQC,KAAI,SAAAC,GAAC,OAAIA,EAAEK,iBAClCJ,SAAU,CAAC,CACPC,MAAO,QACPC,gBAAiB7B,EACjBsB,KAAMP,EAAOS,QAAQC,KAAI,SAAAC,GAAC,OAAIA,EAAElB,kBC7BxD,IAWMwB,EAXgB,CAClB,QAAWhD,EAAoBC,QAC/B,YAAaD,EAAoBE,SACjC,kBAAmBF,EAAoBG,eACvC,aAAcH,EAAoBI,SAClC,KAAQJ,EAAoBK,KAC5B,iBAAkBL,EAAoBM,eAOnC,SAAS2C,EAAT,GAA4D,IAApC/B,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAElCC,EAAK,eAGLC,EAAQ,CACVC,OAAQ,CACJ4B,aAAc3C,EAAIM,sBAClBsC,cAAe1D,EAASE,cACxB6B,SAAUjB,EAAInB,GAAGqC,SAErBC,QAAQ,CACJjC,EAASC,SAASiC,SAAQ,IADvB,mBAEAT,EAAYU,WAAWR,MAI5BkB,EAAON,mBAASb,EAAOE,GAEvB+B,EAAQtB,iBAAY,MAEpBG,EAAeC,2BAAiBd,EAAIgC,GACtC,SAAAC,GAAI,MAAI,CACJ5D,EAASE,cAAcgC,QAAQ0B,EAAK,IACpCL,EAAWK,EAAK,IAAqB1B,SAAQ,MAEjDT,GAGEoC,EAAyBC,mBAASjB,EAAKE,QAAQC,KAAI,SAAAe,GAAC,OAAIA,EAAEL,kBAG1DM,EAA6BH,EAAuBI,SAAQ,SAAAP,GAAa,OAC3EQ,iBAAOX,GAAYP,KAAI,SAACmB,EAAUC,GAAX,MAAoB,CACvCV,gBACAS,WACApC,SAAUc,EAAKE,QACVsB,QAAO,SAAAN,GAAC,OAAIA,EAAEL,gBAAkBA,GAAiBK,EAAEN,aAAgB,GAAKW,KACxEpB,KAAI,SAAAe,GAAC,OAAIA,EAAEhC,YACXuC,QAAO,SAACC,EAAGR,GAAJ,OAAUQ,EAAIR,IAAG,UAI/BS,EAAqBN,iBAAOX,GAAYP,KAAI,SAAAmB,GAAQ,MAAK,CAC3DA,WACApC,SAAUiC,EACLK,QAAO,SAAAN,GAAC,OAAIA,EAAEI,WAAaA,KAC3BnB,KAAI,SAAAe,GAAC,OAAIA,EAAEhC,YACXuC,QAAO,SAACC,EAAGR,GAAJ,OAAUQ,EAAIR,IAAG,OAIjCS,EAAmBC,MAAK,SAACxB,EAAGyB,GAAJ,OAAUA,EAAE3C,SAAWkB,EAAElB,YAGjD,IAAM4C,EAAoBH,EAAmBH,QAAO,SAAAO,GAAC,OAAIA,EAAE7C,SAAW,KAAGiB,KAAI,SAAA4B,GAAC,OAAIA,EAAET,YAEpF,OACI,kBAAC,mBAAD,CAAkBxC,GAAIA,EAAIe,MAAM,iBAAiBC,MAAOE,EAAKF,OACzD,kBAAC,MAAD,CACIP,IAAKuB,EACLf,QAAO,aACHiC,OAAQ,CACJC,MAAO,CAAE,CAAEC,SAAS,IACpBC,MAAO,CAAE,CAAED,SAAS,EAAME,MAAO,CAAEC,aAAa,OAEjD1C,GAEPK,KAAM,CACFC,OAAQ6B,EACRzB,SAAUW,EAAuBb,KAAI,SAACU,EAAeyB,GAAhB,MAA4B,CAC7DhC,MAAOO,EACPb,KAAM8B,EAAkB3B,KAAI,SAAAmB,GAAQ,mCAChCH,EAA2BoB,MAAK,SAAArB,GAAC,OAAIA,EAAEL,gBAAkBA,GACpBK,EAAEI,WAAaA,YAFpB,aAChC,EAC+DpC,gBAF/B,QAE2C,KAC/EqB,gBAAiB7B,EAAY4D,WCvF9C,SAASE,EAAT,GAAgG,IAArE5D,EAAoE,EAApEA,YAAa6D,EAAuD,EAAvDA,gBAAiB5C,EAAsC,EAAtCA,MAAOhB,EAA+B,EAA/BA,MAE7DmB,EAAON,mBAASb,EAAO,CACzBG,OAAQ,CACJc,MAAO3C,EAASE,cAChB6B,SAAUjB,EAAInB,GAAGqC,QACjBuD,iBAAkBzE,EAAInB,GAAGqC,MAAM,CAC3BhC,EAASC,SAASiC,SAAQ,MAGlCD,QAAQ,CACJjC,EAASI,gBAAgB8B,QAAQoD,IAD9B,mBAEA7D,EAAYU,WAAW,MAE9BqD,QAAQ,IAGZ,OACI,kBAAC,mBAAD,CAAkB9C,MAAOA,EAAOC,MAAOE,EAAKF,OACxC,kBAAC,gBAAD,CACIE,KAAMA,EACN4C,QAAS,CACLC,MAAO,SAACC,GAAD,uBAAOA,EAAEC,OAAOjD,aAAhB,QAAyB,SAChCkD,MAAO,SAACF,GAAD,MAAO,CAAC,GAAD,OAAIA,EAAEC,OAAO7D,UAAY,UACvC,aAAc,SAAC4D,GAAD,MAAO,CAAC,GAAD,OAAIA,EAAEG,WAAW,oBAAjB,KAAyC,cCxBlF,IAAMC,EAAgB,CAClB,CAAE5C,MAAO,QAAS6C,MAAOtG,EAAaK,iBACtC,CAAEoD,MAAO,UAAW6C,MAAOtG,EAAaI,mBACxC,CAAEqD,MAAO,OAAQ6C,MAAOtG,EAAaG,qBAGlC,SAASoG,EAAT,GAA4D,IAApCxE,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAElCC,EAAK,eAELuE,EAAeC,sBAAsCJ,GAErDnE,EAAQ,CACVC,OAAQ,CACJuE,OAAQF,EAAaG,SACrBC,eAAgBxF,EAAInB,GAAGqC,QACvBuE,aAAczF,EAAInB,GAAGqC,MAAM,CACvBhC,EAASG,cAAc+B,QAAQ,cAGvCD,QAAQ,CACJjC,EAASC,SAASiC,SAAQ,IADvB,mBAEAT,EAAYU,WAAWR,KAE9B6E,QAAS,CAACN,EAAaG,SAASI,cAG9BnE,EAASC,mBAASb,EAAOE,GAEzB8E,EAAeC,qBAAWrE,EAAOS,QAAS,KAAM,cAAc,SAAAgB,GAAC,OAAIA,EAAEqC,UAAQ,SAACQ,EAAWC,GAAZ,oBAC/ED,YACAN,eAAgB,EAChBC,aAAc,GACXM,MAGDzE,EAAMC,iBAAY,MAElBG,EAAeC,2BAAiBd,EAAIS,EAAKR,EAAMC,OAASJ,GAExDqF,EAAyB,CAC3BC,KAAM,OACNlE,KAAM6D,EAAa1D,KAAI,SAAAe,GAAC,uBAAIA,EAAEwC,oBAAN,QAAsB,KAC9CpD,MAAO,UACPC,gBAAiB,cACjB4D,YAAa,EACbC,YAAa1F,EAAY,IAGvB2F,EAA2B,CAC7BrE,KAAM6D,EAAa1D,KAAI,SAAAe,GAAC,OAAIA,EAAEuC,kBAC9BnD,MAAO,aACPC,gBAAiB7B,EAAY,IAG3BsB,EAAkB,CACpBC,OAAQ4D,EAAa1D,KAAI,SAAAC,GAAC,OAAIA,EAAE2D,aAChC1D,SAAU,CAAC4D,EAASI,IAGlBtE,EAAqB,2BACpBJ,GADoB,IAEvBqC,OAAQ,CACJG,MAAO,CAAC,CAAEC,MAAO,CAAEC,aAAa,QAIxC,OACI,kBAAC,mBAAD,CAAkBvD,GAAIA,EAAIe,MAAM,iBAAiBC,MAAOL,EAAOK,OAC3D,yBAAKwE,UAAU,uBACX,yBAAKA,UAAU,WACX,kBAAC,MAAD,CAAK/E,IAAKA,EAAKQ,QAASA,EAASC,KAAMA,KAE3C,yBAAKsE,UAAU,YACX,qCAAgB,kBAAC,WAAajB,MC5E3C,SAASkB,EAAaC,GACzB,OACI,kBAAC,SAAD,KACI,kBAAC,SAAD,KACI,kBAAC,MAAD,CAAKC,MAAO,CAAC,EAAG,EAAG,IACf,kBAAC9F,EAAwB6F,GACzB,kBAAChE,EAAmBgE,GACpB,kBAAC7D,EAAiB6D,IAEtB,kBAAC,MAAD,KACI,kBAACpB,EAAiBoB,GAClB,kBAAC,SAAD,KACI,kBAAChC,EAAD,iBAAqBgC,EAArB,CAA4B3E,MAAM,mBAAmB4C,iBAAiB,KACtE,kBAACD,EAAD,iBAAqBgC,EAArB,CAA4B3E,MAAM,qBAAqB4C,iBAAiB,SCZhG,SAASiC,EAAa5B,GAClB,OAAOA,EAAE6B,cAAcC,OAAO,EAAG,IAGrC,SAASC,EAAaC,GAAa,IAAD,EACAC,mBAASL,EAAaI,IADtB,mBACvBE,EADuB,KACdC,EADc,OAEAF,mBAASL,EAAaI,IAFtB,mBAEvBI,EAFuB,KAEdC,EAFc,KAY9B,MAAO,CACHH,UACAE,UACAE,MAAOJ,IAAYE,EACnBG,SARJ,SAAkBC,GACdL,EAAWK,EAAMC,OAAOpC,QAQxBqC,MAbJ,WACIL,EAAWH,KAgBnB,IAAIS,EAAc,EAEX,SAASC,EAAc9G,GAA2B,IAAD,EACtBmG,oBAAS,GADa,mBAC7CY,EAD6C,KACpCC,EADoC,KAE9CC,EAAOhB,EAnCjB,WACI,IAAM/B,EAAI,IAAIgD,KAEd,OADAhD,EAAEiD,YAAYjD,EAAEkD,cAAgB,GACzBlD,EAgCmBmD,IACpBC,EAAKrB,EAAa,IAAIiB,MACtBK,EAAQ,CAACN,EAAMK,GAMrB,SAASV,IACLW,EAAMC,SAAQ,SAAAtD,GAAC,OAAIA,EAAE0C,WACrB5G,EAAYyH,UAAU,CAClBxJ,EAAaC,GAAGwJ,qBAAqB,IAAIR,KAAKD,EAAKb,UACnDnI,EAAaC,GAAGyJ,kBAAkB,IAAIT,KAAKI,EAAGlB,YAdF,MAkBrCD,qBAAWU,GAlB0B,sBAmBvCA,GACTD,IAGJ,IAAM3F,EAAK,4BAAwBgG,EAAKX,QAA7B,eAA2CgB,EAAGhB,SAEnDE,EAAQe,EAAMK,MAAK,SAAA1D,GAAC,OAAIA,EAAEsC,SAEhC,MAAO,CAAEO,UAASc,OArBlB,WACIb,GAAYD,IAoBUE,OAAMK,KAAId,QAAOvF,QAAO2F,SAO/C,SAASkB,EAAT,GAA2F,IAAD,IAApEC,WAAchB,EAAsD,EAAtDA,QAASE,EAA6C,EAA7CA,KAAMK,EAAuC,EAAvCA,GAAIV,EAAmC,EAAnCA,MAAOJ,EAA4B,EAA5BA,MACjE,OACI,yBAAKd,UAAS,sBAAiBqB,GAAW,YACtC,qCACA,2BAAOzB,KAAK,OAAOf,MAAO0C,EAAKb,QAASK,SAAUQ,EAAKR,WACvD,mCACA,2BAAOnB,KAAK,OAAOf,MAAO+C,EAAGlB,QAASK,SAAUa,EAAGb,WACnD,yBAAKf,UAAS,iBAAYc,GAAS,WAAawB,QAASpB,GAAzD,W,IC9DRqB,E,uHAdJ,gCAAAC,EAAA,6DACUC,EAAaC,OAAeC,cADtC,SAGsBC,UAAU,CACxBC,WADwB,SACbC,GACP,MAAM,GAAN,OAAUL,EAAV,YAAuBK,MALnC,cAGUC,EAHV,OAUIC,EADMT,EAAK,IAAIQ,EAAIE,UATvB,kBAWWV,GAXX,4C,sBAsBO,SAASW,IAIZ,OAHKX,IACDA,E,0CAAKY,IAEFZ,EAGX,SAASa,IACL,IAAM5E,EAAI,IAAIgD,KAAK,KAAM,EAAG,GAE5B,OADAhD,EAAE6E,QAAQ7E,EAAE8E,UAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,WACjCjF,EAGX,SAASkF,EAAWlF,GAChB,OAAOmF,IAAOnF,GAAGoF,OAAO,cAY5B,SAASC,EAAKhJ,EAAeiJ,GACxB,OAAOP,KAAKQ,IAAIlJ,EAAQ,EAAG0I,KAAKC,MAAMD,KAAKE,SAAW5I,IAAUiJ,EAGrE,SAASd,EAAQT,GAiBb,IAfA,IAQMyB,EAAiB,CACnB,cACA,UACA,kBAGEnC,EAAgB,GACboC,EAAI,EAAGA,EAAI,GAAIA,IACpBpC,EAAMqC,KAAKd,KAQf,IALA,IAAMe,EAAWtC,EAAMhG,KAAI,SAAAC,GAAC,4BACpB4H,EAAW5H,GADS,cACDA,EAAE4F,cADD,cAlChC,SAAwBlD,GACpB,IAAM4F,EAAmC,EAA/Bb,KAAKC,MAAMhF,EAAE6F,WAAa,GACpC,OAAOX,EAAW,IAAIlC,KAAKhD,EAAEkD,cAAe0C,EAAG,IAiCCE,CAAexI,GADnC,eA7BhC,SAAsB0C,GAClB,OAAOkF,EAAW,IAAIlC,KAAKhD,EAAEkD,cAAelD,EAAE6F,WAAY,IA6BcE,CAAazI,GADzD,SACiE0I,KAAK,KAE5FC,EAAsB,GAE5B,MAxBuB,CACnB,UACA,cACA,WACA,QACA,cAmBJ,eAA4C,CAAvC,IAAuC,EAAjClI,EAAa,KAAoB,cACZyH,GADY,IACxC,2BACI,IADyC,IAAlC7H,EAAiC,QACxC,MAAuB,CAAC,EAAG,GAA3B,eACI,IADC,IAAMuI,EAAQ,KACf,MAA8B,CAAC,EAAG,GAAlC,eAAsC,CAAjC,IAAMvG,EAAe,KACtBsG,EAAUP,KAAV,qCACOO,EAAUE,OAAS,EAD1B,aACgCD,EADhC,cAC8CnI,EAD9C,eACkEJ,EADlE,cACqFgC,EADrF,OAJ4B,iCAe5C,IAJA,IAAMyG,EAAeH,EAAUD,KAAK,KAE9BK,EAAiC,GAEvC,MAAgB,CAAC,EAAG,GAApB,eACI,IADC,IAAMrC,EAAC,KACR,MAAgB,CAAC,EAAG,GAApB,eACI,IADC,IAAMsC,EAAC,KACR,MAAgB,CAAC,EAAG,GAApB,eACI,IADC,IAAMrH,EAAC,KACR,MAAgB,CAAC,EAAG,GAApB,eACI,IADC,IAAMe,EAAC,KACR,MAAgB,CAAC,EAAG,GAApB,eACI,IADC,IAAMuG,EAAC,KACR,MAAgB,CAAC,EAAG,GAApB,eAAwB,CAAnB,IAAMjC,EAAC,KACR+B,EAAqBX,KAArB,6CACOW,EAAqBF,OAD5B,aACuCnC,EADvC,aAC6CsC,EAD7C,aACmDrH,EADnD,aACyDe,EADzD,aAC+DuG,EAD/D,aACqEjC,EADrE,MAaxB,IAJA,IAAMkC,EAA2BH,EAAqBL,KAAK,KAErDS,EAAiB,GAEdhB,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAMiB,EAAWrB,EAAKY,EAAUE,OAAQ,GAClChK,EAAWkJ,EAAK,EAAG,GACnBsB,EAAWzB,EAAW7B,EAAMgC,EAAKhC,EAAM8C,OAAQ,KAC/CD,EAAWhB,EAAW7B,EAAMgC,EAAKhC,EAAM8C,OAAQ,KAC/CS,EAAW1B,EAAW7B,EAAMgC,EAAKhC,EAAM8C,OAAQ,KAC/CU,EAAUxB,EAAKgB,EAAqBF,OAAQ,GAC5CW,EAAgBzB,EAAK,EAAG,GACxB0B,EAAgB1B,EAAK,EAAG,GAE9BoB,EAAKf,KAAL,yBACOD,EAAI,EADX,aACiBiB,EADjB,aAC8BvK,EAD9B,cAC4CwK,EAD5C,eAC2DT,EAD3D,eAC0EU,EAD1E,cACwFC,EADxF,aACoGC,EADpG,aACsHC,EADtH,MAIJ,IAAMC,EAAUP,EAAKT,KAAK,KAEpBiB,GAAO,gPAQ8BtB,EAR9B,sRAkBkCS,EAlBlC,82CAqE6CI,EArE7C,qYAmF6BQ,EAnF7B,WAsFbjD,EAAGmD,IAAID,I,4CCpNX,WAAwBE,GAAxB,qBAAAnD,EAAA,sEAEqBU,IAFrB,cAEUX,EAFV,OAIUqD,EAAU,IAAIpE,KACdrG,EAAS0K,KAAKC,UAAUvD,EAAGwD,KAAKJ,IAChCK,EAAW,IAAIxE,KACrByE,QAAQC,IAAR,yBAA8BF,EAASG,UAAYP,EAAQO,UAA3D,QAPJ,kBAQWhL,GARX,4C,sBAWCuH,OAAe0D,S,4CAEhB,IAAMC,EAAc,IAAIC,SAAQ,SAAAC,GAAI,OAAK7D,OAAe8D,kBAAoBD,KAErE,SAAeE,EAAtB,kC,4CAAO,WAA0BC,GAA1B,+BAAAlE,EAAA,sEAEG6D,EAFH,cAIGT,EAAU,IAAIpE,KAJjB,SAKgBmF,OAAOC,kBACtB,oBAAqB,QAASf,KAAKC,UAAUY,IAN9C,UAKGG,EALH,OAQGb,EAAW,IAAIxE,KACrByE,QAAQC,IAAR,kCAAuCF,EAASG,UAAYP,EAAQO,UAApE,UAEMW,EAASjB,KAAKkB,MAAMF,EAAMG,mBAErBC,WAbR,wBAcChB,QAAQiB,MAAMJ,GAdf,kBAeQ,CAAElL,QAAS,KAfnB,WAkBEkL,EAAO,GAlBT,wBAmBCb,QAAQiB,MAAMJ,GAnBf,kBAoBQ,CAAElL,QAAS,KApBnB,eAuBG0C,EAAUwI,EAAO,GAAGxI,QACpBG,EAASqI,EAAO,GAAGrI,OACnB0I,EAAkB7I,EAAQ8I,QAAQ,UAClCC,GAAoC,IAArBF,EAAyB7I,EAAQqG,OAASwC,EAEzDhM,EAA0B,CAC5BS,QAAS6C,EAAO5C,KAAI,SAAAC,GAAC,MAAK,CACtBoD,SAAUpD,EAAEwL,MAAM,EAAGD,GACrBE,WAAYzL,EAAEwL,MAAMD,QAIxBP,EAAO,KACP3L,EAAOkD,OAAS,CACZa,SAAU,GACVqI,WAAYT,EAAO,GAAGrI,SAtC3B,kBA0CItD,GA1CJ,6C,sBCVPqM,IAAMC,SAASC,OAAOC,kBAAoB,6CACtCH,IAAMC,SAASC,OAAOE,QAAUJ,IAAMC,SAASC,OAAOE,OAAOjM,SAC7D6L,IAAMC,SAASC,OAAOE,OAAOjM,OAAOkM,eAAgB,GAGxDL,IAAMC,SAASC,OAAOI,qBAAsB,EAE5C,IAAMC,GAAU,CACZ,eAAgB,SAACjF,GAAD,OAAoB,kBAAC7C,EAAiB6C,KAKpDkF,GAAcC,OAAOxL,KAAKsL,IAsCjBG,OAlCf,WAAgB,IAAD,EACyBzH,mBAHN,gBAEnB,mBACJ0H,EADI,KACQC,EADR,KAEL9N,EAAc+N,2BACdhG,EAAajB,EAAc9G,GAE3BgO,EAASP,GAAQI,GAEvB,OACI,yBAAKnI,UAAU,gBACX,yBAAKA,UAAU,QAEPgI,GAAYnM,KAAI,SAAAoI,GAAC,OACb,yBAAKsE,IAAKtE,EACNjE,UAAS,eAAUiE,IAAMkE,GAAc,YACvC7F,QAAS,kBAAM8F,EAAcnE,KAAKA,OAIlD,yBAAKjE,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,SAASqC,EAAW9G,OACnC,yBAAKyE,UAAU,iBAAiBsC,QAASD,EAAWF,QAApD,YAEJ,yBAAKnC,UAAU,uBACX,yBAAKA,UAAU,gBAAgBsC,QAAShI,EAAYkO,kBAC/CF,EAAO,CAAE/N,MAAOkM,EAAYnM,iBAEjC,kBAAC8H,EAAD,CAAYC,WAAYA,QCzCxBoG,QACW,cAA7B/F,OAAOgG,SAASC,UAEe,UAA7BjG,OAAOgG,SAASC,UAEhBjG,OAAOgG,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAtC,GACLjB,QAAQiB,MAAMA,EAAMuC,a,8IdjJ5B,SACA,SACA,SACA,U,8IAHA,SACA,SACA,U,qKgBFA,cASA,4BAAiC,G,IAAC,OAAI,UAAO,aAAU,UACjD,OACE,+BAAK,UAAU,YAAY,GAAI,GAC3B,+BAAK,UAAU,SAAS,GACxB,+BAAK,UAAU,SACA,SAAV,EACG,+BAAK,UAAU,WAAS,cAExB,gDAAG,O,iFCXvB,oBAA4B,GAGxB,IAFA,IAAM,EAA4B,GAEf,uBAAK,CAAnB,IAAM,EAAI,KACX,EAAI,GAAG,GAAU,EAGrB,OAAO,OAAO,OAAO,IAazB,kBAA0B,GACtB,OAAO,OAAO,KAAK,K,iFC3BvB,YACA,QA+DA,iCAA6D,GAEzD,OADa,SAAO,GAAQ,QAAO,YAAK,QAAE,EAAO,aAAc,EAAvB,iBAuC5C,8BAA0D,GAEtD,OADa,SAAO,GAAQ,QAAO,YAAK,SAAO,aAAc,EAArB,gBAS5C,0BAA+B,GAC3B,OAAO,SAAO,GACT,KAAI,YAAK,eACT,QAAO,YAAK,oBAAa,EAAb,eACZ,KAAI,YAAK,c,iFCzGlB,iBAKM,SAAF,EAA4B,eAoGhC,OAlGY,wBAAR,SAAoB,EAAkC,GAClD,MAAO,CACH,OAAQ,KAAK,KACb,SAAU,EACV,QAAO,IAQb,EAAF,yBAAM,GACF,OAAO,KAAK,YAAY,QAAS,IAOrC,yBAAI,GACA,OAAO,KAAK,YAAY,MAAO,IAOnC,yBAAI,GACA,OAAO,KAAK,YAAY,MAAO,IAG3B,mBAAR,SAAe,EAA0B,GACrC,MAAO,CACH,OAAQ,KAAK,KACb,SAAQ,EACR,MAAK,IAObhR,EAAA,+BACI,MAAO,CAAE,OAAQ,KAAK,KAAM,YAAY,IAM1C,EAAF,gCACI,MAAO,CAAE,OAAQ,KAAK,KAAM,YAAY,IAM1C,EAAF,2BAAQ,GACJ,OAAO,KAAK,OAAO,IAAK,IAM5B,gCAAW,GACP,OAAO,KAAK,OAAO,KAAM,IAO7B,iCAAY,GACR,OAAO,KAAK,OAAO,IAAK,IAM5B,8BAAS,GACL,OAAO,KAAK,OAAO,IAAK,IAO5B,0CAAqB,GACjB,OAAO,KAAK,OAAO,KAAM,IAO7B,uCAAkB,GACd,OAAO,KAAK,OAAO,KAAM,IAEjC,EAzGA,GAAa,iB,oPCbb,WACI,EAAJ,QAOA,uBAA+B,GACrB,6BAAC,OAAe,OACpB,MAAK,CACH,QAAS,EAAQ,KAAI,YAAK,kBAC1B,MAAO,EACH,SAAJ,SAAS,GACL,EAAiB,EAAE,OAAO,QAE1B,e,QACA,OAA0D,QAA1D,EAAmD,QAAnD,EAAO,EAAQ,MAAK,YAAK,SAAE,QAAF,YAA0B,eAAE,aAAK,QAClD,EAAQ,GAAG,SAW/B,oBAAyB,G,IAAC,YAAS,UAAO,aACtC,OACI,kCAAQ,MAAO,EAAO,SAAU,GAE5B,EAAQ,KAAI,YAAK,yCAAQ,IAAK,GAAb,S,yuBCjC7B,cAYA,SAAS,EAAc,G,QAAE,aAAU,SAAM,cAAW,UAAO,+CACjD,EAAoB,OAAL,QAAK,IAAL,IAAS,GACxB,EAAqG,QAA5F,EAAiE,QAAjE,EAAG,UAAM,SAAS,IAAI,GAAW,SAAC,EAAG,GAAC,aAAoB,QAApB,EAAK,EAAa,UAAE,QAAI,YAAG,eAAE,QAAO,SAAC,EAAG,GAAM,aAAO,UAAC,QAAK,EAC1G,EAAO,EAAY,IAAM,EAAY,EAEzC,OACE,mCAAS,EAAU,CAAE,MAAO,CAAE,QAAS,OAAQ,cAAe,EAAM,MAAO,OAAQ,OAAQ,UACtF,UAAM,SAAS,IAAI,GAAW,SAAC,EAAO,G,QAAM,OACzC,+BAAK,UAAU,cAAc,OAAK,KAAI,EAAC,GAAe,GAAuB,QAAhB,EAAC,EAAa,UAAE,QAAI,GAAE,IAAG,IACjF,OAOR,MAAM,SAAC,GAAkC,+BAAC,EAAa,GAAC,KAAK,MAAM,UAAU,SAApC,KACzC,SAAS,SAAC,GAAkC,+BAAC,EAAa,GAAC,KAAK,SAAS,UAAU,UAAvC,KAMzD,kBAAuB,GAAE,iBAAU,oBAC7B,OAAK,mCAAS,EAAU,CAAE,UAAU,WAAU,K,qKCpCpD,cACI,EAAJ,MASA,4BAAiC,G,IAAE,OAAI,UAAO,UAAO,UAC/C,OACE,wBAAC,mBAAgB,CAAC,GAAI,EAAI,MAAO,GAC7B,+BAAK,UAAU,aACX,+BAAK,UAAU,SAAS,GACxB,+BAAK,UAAU,SAAS,O,qKCfxC,cACI,EAAJ,KAIA,SAAS,EAAW,EAAa,GAC7B,IAAM,EAAuB,kBAAR,EAAmB,EAAM,EAAI,GAC5C,EAAuB,kBAARiR,EAAmB,OAAS,EAAI,GAErD,OACI,8BAAI,IAAK,EAAK,UAAW,GACpB,GAYb,yBAAqD,G,IAAC,SAAM,YACxD,OACI,qCACI,qCACI,kCACK,OAAO,KAAK,GAAS,KAAI,SAAC,GAAW,OAClC,8BAAI,IAAK,GADyB,QAK9C,qCACK,EAAK,QAAQ,KAAI,SAAC,EAAQ,G,MAAM,OAC7B,8BAAI,IAAoC,QAAjC,EAAE,KAAK,UAAU,EAAO,iBAAS,QAAI,GAExC,OAAO,KAAK,GAAS,KAAI,SAAC,GAAW,SACjC,EAAQ,EAAQ,GAAQ,IAAI,iBAAe,EAAQ,EADlB,kBAMhD,EAAK,QACF,qCACI,kCAEI,OAAO,KAAK,GAAS,KAAI,SAAC,GAAW,SACjC,EAAQ,EAAQ,GAAQ,IAAI,mBAAiB,EADZ,kB,iFC/C7D,YA2EA,SAAgB,EACZ,EACA,GAMA,IAHA,IAAM,EAAc,GAEhB,EAAI,EACU,8BAAsB,GAAtB,eAA+B,CAC7C,EADU,MACI,EAAO,WAAW,KAGpC,EAAI,EACJ,IAAkB,+BAAmB,GAAnB,eAA4B,CAC1C,EADU,MACI,EAAO,SAAS,KAGlC,OAAO,EAWX,SAAgB,EACZ,EACA,GAMA,IAHA,IAAM,EAAc,GAEhB,EAAI,EACU,8BAAsB,GAAtB,eAA+B,CAC7C,EADU,MACI,EAAO,WAAW,KAGpC,OAAO,EA7DX,wBAAoD,GACxC,eAAQ,YAAS,YAAS,WAAQ,SAAM,SAEhD,MAAO,CACH,OAAQ,qBAAmB,GAAQ,KAAI,YAAO,OAAC,EAAO,GAAR,QAC9C,aAAc,wBAAsB,GAAQ,KAAI,YAAO,eACvD,QAAgB,OAAP,QAAO,IAAP,IAAW,GACpB,QAAgB,OAAP,QAAO,IAAP,IAAW,GACpB,OAAc,OAAN,QAAM,IAAN,KACR,KAAU,OAAJ,QAAI,IAAJ,IAAQ,EACd,KAAU,OAAJ,QAAI,IAAJ,IAAQ,MAWtB,sBA4BA,2BAuCA,6BACI,EACA,GAGA,MAAO,CACH,QAAS,EAAO,QAAQ,KAAI,YAAK,SAAkB,EAAlB,MACjC,OAAQ,EAAO,QAAU,EAAuB,EAAQ,EAAO,W,mKC/HvE,iBACI,WACoB,EACA,GADA,cACA,cAUxB,OARI,gCAA4C,G,MACxC,IAAK,KAAK,OAAQ,OAAO,EAEzB,IAAM,EAAW,KAAK,OAAO,GACvB,EAAwB,QAAnB,EAAG,KAAK,OAAO,UAAI,QAAI,EAC5B,EAAoB,IAAV,EAAc,EAAK,EAAW,EAAS,IACvD,OAAO,KAAK,MAAgB,IAAV,GAAiB,KAE3C,EAbA,GAAa,mBAeb,iBAGI,WAAY,GACR,KAAK,OAAS,EAMtB,OAHI,kCACI,OAAO,KAEf,EAVA,GAAa,sB,wXCrCb,eAIA,SAAS,EAAU,GAMf,MAJmB,kBAAR,IACP,EAAM,GAAK,GAGR,UAAO,GA6ElB,SAAgB,EAAe,GAC3B,OAAQ,EAAM,OAAM,YAAK,aAAE,UACtB,EAAM,OAAM,YAAK,SAAE,QAAU,IAAZ,KACjB,EAAM,OAAM,YAAK,aAAE,WACpB,YAAU,MAD2B,YAAU,SADN,YAAU,OADZ,YAAU,KA4EzD,SAAgB,EACZ,G,IAAE,YAAS,YAAS,SAAM,QAAK,QAAK,UAEpC,EAAO,EAAO,IACN,MAAK,SAAC,EAAG,GAAM,SAAU,EAAQ,IAAI,KAAK,EAAU,EAArC,QAEvB,EAAW,OAAJ,QAAI,IAAJ,IAAQ,EAAe,EAAQ,KAAI,YAAK,SAAU,EAAV,QAM/C,IAJA,IAAM,EAAe,GACjB,OAA6B,EAC3B,EAAQ,EAAM,EAAK,MAAM,EAAU,SAAQ,EAE5B,uBAAS,CAG1B,IAHC,IAAM,EAAM,KACP,EAAU,EAAU,EAAQ,KAG9B,EAAS,EAAS,EAAK,UAAU,GAAU,MAC5B,GAAU,IAIzB,EAAQ,KAAK,EAAK,EAAK,OAAO,QAAS,IAG3C,EAAQ,KAAK,EAAK,EAAK,OAAO,GAAU,IACxC,EAAS,EAGb,GAAI,GAAU,EAEV,IADA,IAAM,EAAQ,EAAK,MAAM,EAAU,OAE/B,EAAS,EAAK,UAAU,IACX,IAIb,EAAQ,KAAK,EAAK,EAAK,OAAO,QAAS,IAI/C,OAAO,EA7HE,YAAY,CACnB,KAvDqB,CACvB,MAAK,SAAC,GACF,OAAO,EAAE,QAAQ,QAAQ,QAE7B,OAAM,SAAC,GACH,OAAO,EAAE,OAAO,OAEpB,UAAS,SAAC,GACN,OAAOlL,EAAEmL,QAAQ,IAAI,EAAG,SA+CpB,OA3CiB,CACzB,MAAK,SAAC,GACF,OAAOnL,EAAEmL,QAAQ,QAAQ,UAE7B,OAAM,SAAC,GACH,OAAO,EAAE,OAAO,aAElB,UAAO,SAAC,GACN,OAAO,EAAE,QAAQ,IAAI,EAAG,WAmCd,SA/Ba,CACzB,MAAG,SAAC,GACF,OAAO,EAAE,QAAQ,QAAQ,YAE3B,OAAI,SAAC,GAIH,OAHmB,EAAE,OAAO,OAGR,IAFF,EAAE,QAAQ,IAAI,EAAG,UAAU,OAAO,OAEnB,IADpB,EAAE,OAAO,SAG1B,UAAS,SAAC,GACN,OAAO,EAAE,QAAQ,IAAI,EAAG,YAoBJ,MAhBA,CACxB,MAAK,SAAC,GACF,OAAO,EAAE,QAAQ,QAAQ,SAE7B,OAAM,SAAC,GACH,OAAO,EAAE,OAAO,SAEpB,UAAS,SAAC,GACN,OAAO,EAAE,QAAQ,IAAI,EAAG,WAehC,mBA6EA,cA4CA,sBACI,EACA,EACA,EACA,EACA,GAEA,OAAO,EAAU,CAAE,QAAO,EAAE,IAAG,EAAE,IAAG,EAAE,QAAO,EAAE,KAAI,M,yTCvNvD,WAkBM,EAAiC,CACnC,OAAQ,GACR,aAAc,GACd,eAAgB,IAGpB,4BACU,oBAAC,OAAO,OAoBd,cAAY,GAAK,CAAE,eAnBnB,SAAwB,EAAwB,GAC5C,EAAG,OAAM,GAAK,CAAE,eAAc,EAAE,aAAY,MAkBb,UAhBnC,SAAmB,GACf,EAAG,OAAM,GAAK,CAAE,OAAM,MAeoB,iBAb9C,WACI,EAAG,OAAM,GAAK,CAAE,eAAgB,GAAI,aAAc,OAYU,YAVhE,WACI,EAAG,OAAM,GAAK,CAAE,OAAQ,OASiD,SAP3E,WACE,EAAI,IAM+E,WAJvF,SAAoB,GAChB,IAAM,EAAS,EAAM,OACrB,OAAO,IAAQ,EAAM,eAAiB,EAAO,OAAO,EAAM,cAAgB,O,yYC3ClF,WACI,EAAJ,KACA,WA4BA,oBAAgD,EAAmB,GAE/D,IAAM,EAAY,eAAa,GAEzB,qBAAC,OAAO,OACR,2BAAC,OAAQ,OAcf,OAZE,EAAF,WAAU,WACQ,SAAV,GACA,EAAS,WAET,EAAE,GAAW,MAAK,YAClB,EAAS,SACT,EAAU,MACX,WACC,EAAS,cAEd,CAAC,UAAgB,KAEpB,OAAY,oBAAkB,EAAM,OAAQ,IAAO,CAAE,MAAK,M,4I5BjD9D,W","file":"static/js/main.9af60713.chunk.js","sourcesContent":["\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./makeClickHandler\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flowerbi_1 = require(\"flowerbi\");\nfunction getEventData(evt, chart) {\n    if (chart && evt) {\n        var element = chart.getElementAtEvent(evt)[0];\n        if (element) {\n            var data = element._chart.data;\n            var labelIndex = element._index;\n            var datasetIndex = element._datasetIndex;\n            return {\n                category: data.labels[labelIndex],\n                legend: data.datasets[datasetIndex].label,\n            };\n        }\n    }\n}\nfunction makeClickHandler(id, chartRef, funcOrColumns, pageFilters) {\n    var func = typeof funcOrColumns === \"function\" ? funcOrColumns :\n        function (keys) { return flowerbi_1.getColumnsOnly(funcOrColumns).map(function (c, i) { return c.equalTo(keys[i]); }); };\n    return {\n        onClick: function (evt) {\n            var _a;\n            var data = getEventData(evt, (_a = chartRef.current) === null || _a === void 0 ? void 0 : _a.chartInstance);\n            if (data && pageFilters) {\n                var filters = func([data.category, data.legend]);\n                if (filters) {\n                    pageFilters.setInteraction(id, filters);\n                    evt === null || evt === void 0 ? void 0 : evt.stopPropagation();\n                }\n            }\n        }\n    };\n}\nexports.makeClickHandler = makeClickHandler;\n//# sourceMappingURL=makeClickHandler.js.map","import { QueryColumn } from \"flowerbi\";\n\n// Important: this file is auto-generated by flowerbi.\n\nexport const DateReported = {\n    Id: new QueryColumn<Date>(\"DateReported.Id\"),\n    CalendarYearNumber: new QueryColumn<number>(\"DateReported.CalendarYearNumber\"),\n    FirstDayOfQuarter: new QueryColumn<Date>(\"DateReported.FirstDayOfQuarter\"),\n    FirstDayOfMonth: new QueryColumn<Date>(\"DateReported.FirstDayOfMonth\"),\n};\n\nexport const DateResolved = {\n    Id: new QueryColumn<Date>(\"DateResolved.Id\"),\n    CalendarYearNumber: new QueryColumn<number>(\"DateResolved.CalendarYearNumber\"),\n    FirstDayOfQuarter: new QueryColumn<Date>(\"DateResolved.FirstDayOfQuarter\"),\n    FirstDayOfMonth: new QueryColumn<Date>(\"DateResolved.FirstDayOfMonth\"),\n};\n\nexport const DateAssigned = {\n    Id: new QueryColumn<Date>(\"DateAssigned.Id\"),\n    CalendarYearNumber: new QueryColumn<number>(\"DateAssigned.CalendarYearNumber\"),\n    FirstDayOfQuarter: new QueryColumn<Date>(\"DateAssigned.FirstDayOfQuarter\"),\n    FirstDayOfMonth: new QueryColumn<Date>(\"DateAssigned.FirstDayOfMonth\"),\n};\n\nexport const Workflow = {\n    Id: new QueryColumn<number>(\"Workflow.Id\"),\n    Resolved: new QueryColumn<boolean>(\"Workflow.Resolved\"),\n    WorkflowState: new QueryColumn<string>(\"Workflow.WorkflowState\"),\n    SourceOfError: new QueryColumn<string>(\"Workflow.SourceOfError\"),\n    FixedByCustomer: new QueryColumn<boolean>(\"Workflow.FixedByCustomer\"),\n};\n\nexport const Category = {\n    Id: new QueryColumn<number>(\"Category.Id\"),\n    Label: new QueryColumn<string>(\"Category.Label\"),\n};\n\nexport const Customer = {\n    Id: new QueryColumn<number>(\"Customer.Id\"),\n    CustomerName: new QueryColumn<string>(\"Customer.CustomerName\"),\n};\n\nexport const CoderAssigned = {\n    Id: new QueryColumn<number>(\"CoderAssigned.Id\"),\n    FullName: new QueryColumn<string>(\"CoderAssigned.FullName\"),\n};\n\nexport const CoderResolved = {\n    Id: new QueryColumn<number>(\"CoderResolved.Id\"),\n    FullName: new QueryColumn<string>(\"CoderResolved.FullName\"),\n};\n\nexport const CategoryCombination = {\n    Id: new QueryColumn<number>(\"CategoryCombination.Id\"),\n    Crashed: new QueryColumn<boolean>(\"CategoryCombination.Crashed\"),\n    DataLoss: new QueryColumn<boolean>(\"CategoryCombination.DataLoss\"),\n    SecurityBreach: new QueryColumn<boolean>(\"CategoryCombination.SecurityBreach\"),\n    OffByOne: new QueryColumn<boolean>(\"CategoryCombination.OffByOne\"),\n    Slow: new QueryColumn<boolean>(\"CategoryCombination.Slow\"),\n    StackOverflow: new QueryColumn<boolean>(\"CategoryCombination.StackOverflow\"),\n};\n\nexport const Bug = {\n    Id: new QueryColumn<number>(\"Bug.Id\"),\n    WorkflowId: new QueryColumn<number>(\"Bug.WorkflowId\"),\n    CustomerId: new QueryColumn<number>(\"Bug.CustomerId\"),\n    ReportedDate: new QueryColumn<Date>(\"Bug.ReportedDate\"),\n    ResolvedDate: new QueryColumn<Date>(\"Bug.ResolvedDate\"),\n    AssignedDate: new QueryColumn<Date>(\"Bug.AssignedDate\"),\n    CategoryCombinationId: new QueryColumn<number>(\"Bug.CategoryCombinationId\"),\n    AssignedCoderId: new QueryColumn<number>(\"Bug.AssignedCoderId\"),\n    ResolvedCoderId: new QueryColumn<number>(\"Bug.ResolvedCoderId\"),\n};\n\n","export const dataColours = [\"#722E85\", \"#CD65D9\", \"#3ED4B0\", \"#F54E7B\", \"#FF7676\", \"#FAD57A\", \"#313345\", \"#b4b2bc\"];\n","import React, { useRef } from \"react\";\nimport { useQuery } from \"flowerbi-react\";\nimport { FlowerBIChartBox } from \"flowerbi-react-utils\";\nimport { Customer, Bug, Workflow } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { Pie } from \"react-chartjs-2\";\nimport { VisualProps } from \"./VisualProps\";\nimport { makeClickHandler } from \"flowerbi-react-chartjs\";\n\nexport function ResolvedPerCustomer({ pageFilters, fetch }: VisualProps) {\n\n    const id = \"ResolvedPerCustomer\";\n\n    const query = {\n        select: {\n            customer: Customer.CustomerName,\n            bugCount: Bug.Id.count()\n        },\n        filters: [\n            Workflow.Resolved.equalTo(true),\n            ...pageFilters.getFilters(id)\n        ],\n    };\n\n    const ref = useRef<Pie>(null);\n    const result = useQuery(fetch, query);\n    const clickHandler = makeClickHandler(id, ref, query.select, pageFilters);\n    \n    return (\n        <FlowerBIChartBox id={id} title=\"Resolved Per Customer\" state={result.state}>\n            <Pie\n                ref={ref}\n                options={{ ...clickHandler }}\n                data={{\n                    labels: result.records.map(x => x.customer),\n                    datasets: [{\n                        label: \"Count\",\n                        backgroundColor: dataColours,\n                        data: result.records.map(x => x.bugCount)\n                    }]\n                }}\n            />\n        </FlowerBIChartBox>        \n    );\n}\n","import React, { useRef } from \"react\";\nimport { useQuery } from \"flowerbi-react\";\nimport { FlowerBIChartBox } from \"flowerbi-react-utils\";\nimport { Bug, Workflow } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { Pie } from \"react-chartjs-2\";\nimport { VisualProps } from \"./VisualProps\";\nimport { makeClickHandler } from \"flowerbi-react-chartjs\";\n\nconst id = \"SourceOfErrors\";\n\nexport function SourceOfErrors({ pageFilters, fetch }: VisualProps) {\n\n    const query = {\n        select: {\n            sourceOfError: Workflow.SourceOfError,\n            bugCount: Bug.Id.count()\n        },\n        filters: [\n            Workflow.Resolved.equalTo(true),\n            ...pageFilters.getFilters(id)\n        ],\n    };\n\n    const result = useQuery(fetch, query);\n\n    const ref = useRef<Pie>(null);\n    const clickHandler = makeClickHandler(id, ref, query.select, pageFilters);\n    \n    return (\n        <FlowerBIChartBox id={id} title=\"Source Of Errors\" state={result.state}>\n            <Pie\n                ref={ref}\n                options={{ ...clickHandler }} \n                data={{\n                    labels: result.records.map(x => x.sourceOfError),\n                    datasets: [{\n                        label: \"Count\",\n                        backgroundColor: dataColours,\n                        data: result.records.map(x => x.bugCount)\n                    }]\n                }}\n            />\n        </FlowerBIChartBox>\n    );\n}\n","import React, { useRef } from \"react\";\nimport { QueryColumn, distinct, keysOf } from \"flowerbi\";\nimport { useQuery } from \"flowerbi-react\";\nimport { FlowerBIChartBox } from \"flowerbi-react-utils\";\nimport { makeClickHandler } from \"flowerbi-react-chartjs\";\nimport { Bug, Workflow, CategoryCombination } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { Bar } from \"react-chartjs-2\";\nimport { VisualProps } from \"./VisualProps\";\n\nconst categoriesRaw = {\n    \"Crashed\": CategoryCombination.Crashed,\n    \"Data loss\": CategoryCombination.DataLoss,\n    \"Security breach\": CategoryCombination.SecurityBreach,\n    \"Off by one\": CategoryCombination.OffByOne,\n    \"Slow\": CategoryCombination.Slow,\n    \"Stack overflow\": CategoryCombination.StackOverflow,\n};\n\ntype CategoryLabel = keyof typeof categoriesRaw;\n\nconst categories: Record<CategoryLabel, QueryColumn<boolean>> = categoriesRaw;\n\nexport function TypesOfError({ pageFilters, fetch }: VisualProps) {\n\n    const id = \"TypesOfError\";\n\n    // In the query we ask for the bits describing the categories applicable to each bug\n    const query = {\n        select: {\n            categoryBits: Bug.CategoryCombinationId, \n            workflowState: Workflow.WorkflowState,\n            bugCount: Bug.Id.count()\n        },\n        filters: [\n            Workflow.Resolved.equalTo(true),\n            ...pageFilters.getFilters(id)\n        ]\n    };\n\n    const data = useQuery(fetch, query);\n\n    const chart = useRef<Bar>(null);\n\n    const clickHandler = makeClickHandler(id, chart, \n        keys => [\n            Workflow.WorkflowState.equalTo(keys[1]), \n            categories[keys[0] as CategoryLabel].equalTo(true)\n        ],\n        pageFilters\n    );\n\n    const distinctWorkflowStates = distinct(data.records.map(r => r.workflowState));\n\n    // Convert the bit combinations into category labels\n    const bugCountByStateAndCategory = distinctWorkflowStates.flatMap(workflowState =>\n        keysOf(categories).map((category, bit) => ({\n            workflowState,\n            category,\n            bugCount: data.records\n                .filter(r => r.workflowState === workflowState && r.categoryBits & (1 << bit))\n                .map(r => r.bugCount)\n                .reduce((l, r) => l + r, 0)\n        })));\n\n    // Sum up the categories (full height of each bar)\n    const bugCountByCategory = keysOf(categories).map(category => ({\n        category,\n        bugCount: bugCountByStateAndCategory\n            .filter(r => r.category === category)\n            .map(r => r.bugCount)\n            .reduce((l, r) => l + r, 0)\n    }));\n\n    // Sort by bugCount descending so tallest bar is first\n    bugCountByCategory.sort((x, y) => y.bugCount - x.bugCount);\n\n    // Omit empty categories\n    const orderedCategories = bugCountByCategory.filter(c => c.bugCount > 0).map(c => c.category);\n\n    return (\n        <FlowerBIChartBox id={id} title=\"Types Of Error\" state={data.state}>\n            <Bar \n                ref={chart}\n                options={{ \n                    scales: {\n                        xAxes: [ { stacked: true } ],\n                        yAxes: [ { stacked: true, ticks: { beginAtZero: true } } ]\n                    },\n                    ...clickHandler\n                }}\n                data={{\n                    labels: orderedCategories,\n                    datasets: distinctWorkflowStates.map((workflowState, colour) => ({\n                        label: workflowState,\n                        data: orderedCategories.map(category =>\n                            bugCountByStateAndCategory.find(r => r.workflowState === workflowState && \n                                                                 r.category === category)?.bugCount ?? 0),\n                        backgroundColor: dataColours[colour]\n                    }))\n                }}\n            />\n        </FlowerBIChartBox>\n    )\n}\n","import React from \"react\";\nimport { FlowerBITable, useQuery } from \"flowerbi-react\";\nimport { FlowerBIChartBox } from \"flowerbi-react-utils\";\nimport { Bug, Workflow } from \"../demoSchema\";\nimport { VisualProps } from \"./VisualProps\";\n\nexport interface RecoverySummaryProps extends VisualProps {\n    fixedByCustomer: boolean;\n    title: string;\n}\n\nexport function RecoverySummary({ pageFilters, fixedByCustomer, title, fetch }: RecoverySummaryProps) {\n\n    const data = useQuery(fetch, {\n        select: {\n            state: Workflow.WorkflowState,\n            bugCount: Bug.Id.count(),\n            resolvedBugCount: Bug.Id.count([\n                Workflow.Resolved.equalTo(true)\n            ])\n        },\n        filters: [\n            Workflow.FixedByCustomer.equalTo(fixedByCustomer),\n            ...pageFilters.getFilters(\"\"),\n        ],\n        totals: true\n    });\n\n    return (\n        <FlowerBIChartBox title={title} state={data.state}>\n            <FlowerBITable\n                data={data}\n                columns={{\n                    State: (d) => d.values.state ?? \"Total\",\n                    Count: (d) => [`${d.values.bugCount}`, \"right\"],\n                    \"% of Count\": (d) => [`${d.percentage(\"resolvedBugCount\")}%`, \"right\"],\n                }} \n            />\n        </FlowerBIChartBox>\n    );\n}\n","import React, { useRef } from \"react\";\nimport { QueryColumn, smartDates } from \"flowerbi\";\nimport { useQuery } from \"flowerbi-react\";\nimport { useDropDown, DropDown, FlowerBIChartBox } from \"flowerbi-react-utils\";\nimport { Bug, Workflow, DateReported } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { ChartDataSets, ChartOptions, ChartData } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { VisualProps } from \"./VisualProps\";\nimport { makeClickHandler } from \"flowerbi-react-chartjs\";\n\nconst dateGroupings = [\n    { label: \"Month\", value: DateReported.FirstDayOfMonth },\n    { label: \"Quarter\", value: DateReported.FirstDayOfQuarter },\n    { label: \"Year\", value: DateReported.CalendarYearNumber }\n]\n\nexport function BugsOverTime({ pageFilters, fetch }: VisualProps) {\n\n    const id = \"BugsOverTime\";\n\n    const dateGrouping = useDropDown<QueryColumn<Date|number>>(dateGroupings);\n\n    const query = {\n        select: {\n            period: dateGrouping.selected,        \n            countAllCauses: Bug.Id.count(),\n            countHackers: Bug.Id.count([\n                Workflow.SourceOfError.equalTo(\"Hackers\")\n            ]),\n        },\n        filters: [\n            Workflow.Resolved.equalTo(true),\n            ...pageFilters.getFilters(id)\n        ],\n        orderBy: [dateGrouping.selected.ascending()],        \n    };\n\n    const result = useQuery(fetch, query);\n\n    const datedRecords = smartDates(result.records, 2017, \"2021-12-31\", r => r.period, (dateLabel, record) => ({\n        dateLabel,\n        countAllCauses: 0,\n        countHackers: 0,\n        ...record \n    }));\n\n    const ref = useRef<Bar>(null);\n\n    const clickHandler = makeClickHandler(id, ref, query.select!, pageFilters);\n    \n    const hackers: ChartDataSets = {\n        type: \"line\",\n        data: datedRecords.map(r => r.countHackers ?? 0),\n        label: \"Hackers\",\n        backgroundColor: \"transparent\",\n        lineTension: 0,\n        borderColor: dataColours[1],\n    };\n    \n    const allCauses: ChartDataSets = {\n        data: datedRecords.map(r => r.countAllCauses),\n        label: \"All Causes\",\n        backgroundColor: dataColours[0]\n    };\n    \n    const data: ChartData = {\n        labels: datedRecords.map(x => x.dateLabel),\n        datasets: [hackers, allCauses],\n    };\n\n    const options: ChartOptions = {\n        ...clickHandler,\n        scales: {\n            yAxes: [{ ticks: { beginAtZero: true } }]\n        }\n    };\n\n    return (\n        <FlowerBIChartBox id={id} title=\"Bugs Over Time\" state={result.state}>\n            <div className=\"chart-with-dropdown\">\n                <div className=\"content\">\n                    <Bar ref={ref} options={options} data={data} />\n                </div>            \n                <div className=\"dropdown\">\n                    <span>By </span><DropDown {...dateGrouping} />\n                </div>\n            </div>            \n        </FlowerBIChartBox>\n    );\n}\n","import React from \"react\";\nimport { Layout, Column, Row } from \"flowerbi-react-utils\";\nimport { VisualProps } from \"./VisualProps\";\nimport { ResolvedPerCustomer } from \"./ResolvedPerCustomer\";\nimport { SourceOfErrors } from \"./SourceOfErrors\";\nimport { TypesOfError } from \"./TypesOfError\";\nimport { RecoverySummary } from \"./RecoverySummary\";\nimport { BugsOverTime } from \"./BugsOverTime\";\n\nexport function BugReporting(props: VisualProps) {\n    return (\n        <Layout>\n            <Column>\n                <Row sizes={[1, 1, 2]}>\n                    <ResolvedPerCustomer {...props} />\n                    <SourceOfErrors {...props} />\n                    <TypesOfError {...props} />\n                </Row>\n                <Row>\n                    <BugsOverTime {...props} />\n                    <Column>\n                        <RecoverySummary {...props} title=\"Progress Summary\" fixedByCustomer={false} />\n                        <RecoverySummary {...props} title=\"Fixed By Customers\" fixedByCustomer={true} />\n                    </Column>\n                </Row>\n            </Column>\n        </Layout>\n    );\n}\n","import React, { useState } from \"react\";\nimport { DateReported } from \"./demoSchema\";\nimport { PageFilters } from \"flowerbi-react\";\n\nfunction lastYear() {\n    const d = new Date();\n    d.setFullYear(d.getFullYear() - 5);\n    return d;\n}\n\nfunction toDateString(d: Date) {\n    return d.toISOString().substr(0, 10);\n}\n\nfunction useDateInput(init: Date) {\n    const [editing, setEditing] = useState(toDateString(init));\n    const [applied, setApplied] = useState(toDateString(init));\n\n    function apply() {\n        setApplied(editing);\n    }\n\n    function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        setEditing(event.target.value);\n    }\n\n    return {\n        editing,\n        applied,\n        dirty: editing !== applied,\n        onChange,\n        apply        \n    };\n}\n\nlet initCounter = 0;\n\nexport function useFilterPane(pageFilters: PageFilters) {\n    const [visible, setVisible] = useState(false);\n    const from = useDateInput(lastYear());\n    const to = useDateInput(new Date());    \n    const dates = [from, to];\n\n    function toggle() {\n        setVisible(!visible);\n    }\n\n    function apply() {\n        dates.forEach(d => d.apply());\n        pageFilters.setGlobal([\n            DateReported.Id.greaterThanOrEqualTo(new Date(from.editing)),\n            DateReported.Id.lessThanOrEqualTo(new Date(to.editing))\n        ]);\n    }\n\n    const [init] = useState(++initCounter);\n    if (init === initCounter) {\n        apply();\n    }\n\n    const title = `Entered date from ${from.applied} to ${to.applied}`;\n\n    const dirty = dates.some(d => d.dirty);\n\n    return { visible, toggle, from, to, dirty, title, apply };\n}\n\nexport interface FilterPaneProps {\n    filterPane: ReturnType<typeof useFilterPane>; \n}\n\nexport function FilterPane({ filterPane: { visible, from, to, apply, dirty } }: FilterPaneProps) {\n    return (\n        <div className={`filter-pane ${visible && \"visible\"}`}>\n            <div>From</div>\n            <input type=\"date\" value={from.editing} onChange={from.onChange}/>\n            <div>To</div>\n            <input type=\"date\" value={to.editing} onChange={to.onChange}/>\n            <div className={`button ${dirty && \"enabled\"}`} onClick={apply}>Update</div>                 \n        </div>\n    )\n}\n","import moment from \"moment\";\n\nasync function allocDb() {\n    const publicUrl = (window as any).sitePublicUrl;\n\n    const SQL = await initSqlJs({\n        locateFile(f) {\n            return `${publicUrl}/${f}`;\n        }\n    });\n\n    const db = new SQL.Database();\n    setupDb(db);\n    return db;\n}\n\nlet db: ReturnType<typeof allocDb> | undefined;\n\ntype Await<T> = T extends {\n    then(onfulfilled?: (value: infer U) => unknown): unknown;\n} ? U : T;\n\nexport type Database = NonNullable<Await<typeof db>>;\n\nexport function getDb(): Promise<Database> {\n    if (!db) {\n        db = allocDb();\n    }\n    return db;\n}\n\nfunction makeRandomDate() {\n    const d = new Date(2018, 0, 1);\n    d.setDate(d.getDate() + Math.floor(Math.random() * 800));\n    return d;\n}\n\nfunction formatDate(d: Date) {\n    return moment(d).format(\"YYYY-MM-DD\");\n}\n\nfunction startOfQuarter(d: Date) {\n    const m = Math.floor(d.getMonth() / 3) * 3;\n    return formatDate(new Date(d.getFullYear(), m, 1));\n}\n\nfunction startOfMonth(d: Date) {    \n    return formatDate(new Date(d.getFullYear(), d.getMonth(), 1));\n}\n\nfunction pick(count: number, base: number) {\n     return Math.min(count - 1, Math.floor(Math.random() * count)) + base;     \n}\n\nfunction setupDb(db: Database) {\n\n    const workflowStates = [\n        \"Ignored\",\n        \"Prioritised\",\n        \"Assigned\",\n        \"Fixed\",\n        \"AsDesigned\"\n    ];\n\n    const sourcesOfError = [\n        \"Design flaw\",\n        \"Hackers\",\n        \"Honest mistake\"\n    ];\n\n    const dates: Date[] = [];\n    for (let n = 0; n < 50; n++) {\n        dates.push(makeRandomDate());\n    }\n\n    const dateRows = dates.map(x => `\n        ('${formatDate(x)}', ${x.getFullYear()}, '${startOfQuarter(x)}', '${startOfMonth(x)}')`).join(\",\");\n\n    const workflows: string[] = [];\n\n    for (const workflowState of workflowStates) {\n        for (const sourceOfError of sourcesOfError) {\n            for (const resolved of [0, 1]) {\n                for (const fixedByCustomer of [0, 1]) {\n                    workflows.push(`\n                        (${workflows.length + 1}, ${resolved}, '${workflowState}', '${sourceOfError}', ${fixedByCustomer})`);\n                }\n            }\n        }\n    }\n\n    const workflowRows = workflows.join(\",\");\n\n    const categoryCombinations: string[] = [];\n\n    for (const a of [0, 1]) {\n        for (const b of [0, 1]) {\n            for (const c of [0, 1]) {\n                for (const d of [0, 1]) {\n                    for (const e of [0, 1]) {\n                        for (const f of [0, 1]) {\n                            categoryCombinations.push(`\n                                (${categoryCombinations.length}, ${a}, ${b}, ${c}, ${d}, ${e}, ${f})`);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    const categoryCombinationsRows = categoryCombinations.join(\",\");\n\n    const bugs: string[] = [];\n\n    for (var n = 0; n < 100; n++) {\n        const workflow = pick(workflows.length, 1);\n        const customer = pick(6, 1);\n        const reported = formatDate(dates[pick(dates.length, 0)]);\n        const resolved = formatDate(dates[pick(dates.length, 0)]);\n        const assigned = formatDate(dates[pick(dates.length, 0)]);\n        const catComb = pick(categoryCombinations.length, 1);\n        const coderAssigned = pick(6, 1);\n        const coderResolved = pick(6, 1);\n\n        bugs.push(`\n            (${n + 1}, ${workflow}, ${customer}, '${reported}', '${resolved}', '${assigned}', ${catComb}, ${coderAssigned}, ${coderResolved})`);\n    }\n\n    const bugRows = bugs.join(\",\");\n\n    const initSql = `\n        create table \\`main\\`.\\`Date\\` (\n            Id date,\n            CalendarYearNumber smallint,\n            FirstDayOfQuarter date,\n            FirstDayOfMonth date\n        );\n\n        insert into \\`main\\`.\\`Date\\` values ${dateRows};\n\n        create table \\`main\\`.\\`Workflow\\` (\n            Id int,\n            Resolved bit,\n            WorkflowState varchar(30),\n            SourceOfError varchar(30),\n            FixedByCustomer bit\n        );\n\n        insert into \\`main\\`.\\`Workflow\\` values ${workflowRows};\n\n        create table \\`main\\`.\\`Category\\` (\n            Id int,\n            Label varchar(30)\n        );\n\n        insert into \\`main\\`.\\`Category\\` values\n            (1, 'Crashed'),\n            (2, 'Data Loss'),\n            (3, 'Security Breach'),\n            (4, 'Off By One'),\n            (5, 'Slow'),\n            (6, 'StackOverflow');\n\n        create table \\`main\\`.\\`Coder\\` (\n            Id int,\n            FullName varchar(30)\n        );\n    \n        insert into \\`main\\`.\\`Coder\\` values\n                (1, 'Sam'),\n                (2, 'Alex'),\n                (3, 'Drew'),\n                (4, 'Taylor'),\n                (5, 'Parker'),\n                (6, 'Austin');\n\n        create table \\`main\\`.\\`Customer\\` (\n            Id int,\n            CustomerName varchar(30)\n        );\n    \n        insert into \\`main\\`.\\`Customer\\` values\n                (1, 'Pies LLC'),\n                (2, 'Buns, Inc.'),\n                (3, 'Hats-R-Us'),\n                (4, 'Silence'),\n                (5, 'Egypt'),\n                (6, 'Affordability');\n\n        create table \\`main\\`.\\`CategoryCombination\\` (\n            Id int,\n            StackOverflow bit,\n            Slow bit,\n            OffByOne bit,\n            SecurityBreach bit,\n            DataLoss bit,\n            Crashed bit\n        );\n\n        insert into \\`main\\`.\\`CategoryCombination\\` values ${categoryCombinationsRows};\n\n        create table \\`main\\`.\\`Bug\\` (\n            Id int,\n            WorkflowId int,\n            CustomerId int,\n            ReportedDate date,\n            ResolvedDate date,\n            AssignedDate date,\n            CategoryCombinationId int,\n            AssignedCoderId int,\n            ResolvedCoderId int\n        );\n\n        insert into \\`main\\`.\\`Bug\\` values ${bugRows};\n    `;\n\n    db.run(initSql);\n}\n","import { jsonDateParser } from \"json-date-parser\";\nimport { getDb } from \"./database\";\nimport { QueryResultJson, QuerySelectValue, QueryJson } from \"flowerbi\";\n\nasync function querySql(sql: string) {\n    \n    const db = await getDb();\n\n    const started = new Date();\n    const result = JSON.stringify(db.exec(sql));\n    const finished = new Date();\n    console.log(`SQL query took ${finished.getTime() - started.getTime()} ms`);\n    return result;\n}\n\n(window as any).querySql = querySql;\n\nconst blazorReady = new Promise(done => (window as any).notifyBlazorReady = done);\n\nexport async function localFetch(queryJson: QueryJson): Promise<QueryResultJson> {\n\n    await blazorReady;\n\n    const started = new Date();    \n    const json = await DotNet.invokeMethodAsync(\n        \"FlowerBI.WasmHost\", \"Query\", JSON.stringify(queryJson)\n    ) as string;    \n    const finished = new Date();\n    console.log(`Blazor + SQL query took ${finished.getTime() - started.getTime()} ms`);\n\n    const parsed = JSON.parse(json, jsonDateParser);\n\n    if (parsed.stackTrace) {\n        console.error(parsed);\n        return { records: [] };\n    }\n\n    if (!parsed[0]) {\n        console.error(parsed);\n        return { records: [] };\n    }\n\n    const columns = parsed[0].columns;\n    const values = parsed[0].values as QuerySelectValue[][];\n    const firstValueIndex = columns.indexOf(\"Value0\");\n    const endOfSelects = firstValueIndex === -1 ? columns.length : firstValueIndex;\n\n    const result: QueryResultJson = {\n        records: values.map(x => ({\n            selected: x.slice(0, endOfSelects),\n            aggregated: x.slice(endOfSelects) as number[]\n        }))\n    };\n    \n    if (parsed[1]) {\n        result.totals = {\n            selected: [],\n            aggregated: parsed[1].values\n        };\n    }\n\n    return result;\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BugReporting } from \"./Reports/BugReporting\";\nimport { VisualProps } from \"./Reports/VisualProps\";\nimport { usePageFilters } from \"flowerbi-react\";\nimport { useFilterPane, FilterPane } from \"./FilterPane\";\nimport Chart from \"chart.js\";\nimport { localFetch } from \"./localFetch\";\n\nChart.defaults.global.defaultFontFamily = \"Segoe UI, 'Helvetica', 'Arial', sans-serif\";\nif (Chart.defaults.global.legend && Chart.defaults.global.legend.labels) {\n    Chart.defaults.global.legend.labels.usePointStyle = true;\n}\n\nChart.defaults.global.maintainAspectRatio = false;\n\nconst reports = {\n    \"Bug Tracking\": (f: VisualProps) => <BugReporting {...f} />,    \n}\n\ntype ReportName = keyof typeof reports;\n\nconst reportNames = Object.keys(reports) as ReportName[];\n\nconst defaultReport: ReportName = \"Bug Tracking\";\n\nfunction App() {\n    const [reportName, setReportName] = useState(defaultReport);\n    const pageFilters = usePageFilters();\n    const filterPane = useFilterPane(pageFilters);\n\n    const report = reports[reportName];\n\n    return (\n        <div className=\"reports-site\">\n            <div className=\"list\">\n                {\n                    reportNames.map(n => (\n                        <div key={n}\n                            className={`item ${n === reportName && \"selected\"}`}\n                            onClick={() => setReportName(n)}>{n}</div>\n                    ))\n                }\n            </div>\n            <div className=\"content\">\n                <div className=\"title-bar\">\n                    <div className=\"title\">{filterPane.title}</div>\n                    <div className=\"filters-button\" onClick={filterPane.toggle}>Filters</div>\n                </div>\n                <div className=\"report-with-filters\">\n                    <div className=\"report-itself\" onClick={pageFilters.clearInteraction}>\n                        {report({ fetch: localFetch, pageFilters })}\n                    </div>\n                    <FilterPane filterPane={filterPane} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nfunction FlowerBIChartBox(_a) {\n    var id = _a.id, title = _a.title, children = _a.children, state = _a.state;\n    return (react_1.default.createElement(\"div\", { className: \"chart-box\", id: id },\n        react_1.default.createElement(\"div\", { className: \"title\" }, title),\n        react_1.default.createElement(\"div\", { className: \"chart\" }, state === \"init\" ? (react_1.default.createElement(\"div\", { className: \"loading\" }, \"Loading...\")) : (react_1.default.createElement(react_1.default.Fragment, null, children)))));\n}\nexports.FlowerBIChartBox = FlowerBIChartBox;\n//# sourceMappingURL=FlowerBIChartBox.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns the distinct (unique) values from an array. The comparison\n * method is very simplistic: all values are converted to strings\n * before comparison.\n * @param arr\n */\nfunction distinct(arr) {\n    var map = {};\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n        var item = arr_1[_i];\n        map[\"\" + item] = item;\n    }\n    return Object.values(map);\n}\nexports.distinct = distinct;\n/**\n * Returns the names of properties (i.e. the keys) in an object, statically\n * typed so each has the string literal type of one of the properties. This\n * is not always correct, because the type will include properties inherited\n * from the prototype, where as the values returned at runtime will never\n * include inherited properties. But it's a useful approximation in situations\n * where prototype inheritance can be ignored.\n *\n * @param obj The object to obtain keys from.\n */\nfunction keysOf(obj) {\n    return Object.keys(obj);\n}\nexports.keysOf = keysOf;\n//# sourceMappingURL=arrayHelpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar arrayHelpers_1 = require(\"./arrayHelpers\");\nvar QueryColumn_1 = require(\"./QueryColumn\");\n/**\n * Returns the names of properties in a query that refer to aggregated columns.\n * The result is an array of strings, but type-constrained to string literal types:\n *\n * ```ts\n * getAggregatePropsOnly({\n *    customer: Customer.Name,\n *    spend: Invoice.Amount.sum()\n * }) // [\"spend\"]\n * ```\n *\n * @param select the `select` object from a query\n */\nfunction getAggregatePropsOnly(select) {\n    var keys = arrayHelpers_1.keysOf(select).filter(function (x) { return !(select[x] instanceof QueryColumn_1.QueryColumn); });\n    return keys;\n}\nexports.getAggregatePropsOnly = getAggregatePropsOnly;\n/**\n * Returns the names of properties in a query that refer to plain columns. The\n * result is an array of strings, but type-constrained to string literal types:\n *\n * ```ts\n * getColumnPropsOnly({\n *    customer: Customer.Name,\n *    spend: Invoice.Amount.sum()\n * }) // [\"customer\"]\n * ```\n *\n * @param select the `select` object from a query\n */\nfunction getColumnPropsOnly(select) {\n    var keys = arrayHelpers_1.keysOf(select).filter(function (x) { return select[x] instanceof QueryColumn_1.QueryColumn; });\n    return keys;\n}\nexports.getColumnPropsOnly = getColumnPropsOnly;\n/**\n * Returns the plain column objects referred to in a query, ignoring\n * aggregated columns.\n * @param select the `select` object from a query\n */\nfunction getColumnsOnly(select) {\n    return arrayHelpers_1.keysOf(select)\n        .map(function (k) { return select[k]; })\n        .filter(function (x) { return x instanceof QueryColumn_1.QueryColumn; })\n        .map(function (x) { return x; });\n}\nexports.getColumnsOnly = getColumnsOnly;\n//# sourceMappingURL=queryModel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A column from the schema, with a name and a data type. A whole schema of\n * such declared columns can be auto-generated using the CLI.\n */\nvar QueryColumn = /** @class */ (function () {\n    /**\n     * @param name The name, of the form `table.column`.\n     */\n    function QueryColumn(name) {\n        this.name = name;\n    }\n    QueryColumn.prototype.aggregation = function (aggregationType, filters) {\n        return {\n            column: this.name,\n            function: aggregationType,\n            filters: filters,\n        };\n    };\n    /**\n     * Aggregates the column by counting values.\n     * @param filters Optional filters to apply.\n     */\n    QueryColumn.prototype.count = function (filters) {\n        return this.aggregation(\"Count\", filters);\n    };\n    /**\n     * Aggregates the column by summing values.\n     * @param filters Optional filters to apply.\n     */\n    QueryColumn.prototype.sum = function (filters) {\n        return this.aggregation(\"Sum\", filters);\n    };\n    /**\n     * Aggregates the column by averaging values.\n     * @param filters Optional filters to apply.\n     */\n    QueryColumn.prototype.avg = function (filters) {\n        return this.aggregation(\"Avg\", filters);\n    };\n    QueryColumn.prototype.filter = function (operator, value) {\n        return {\n            column: this.name,\n            operator: operator,\n            value: value,\n        };\n    };\n    /**\n     * Sorts by the column in ascending order.\n     */\n    QueryColumn.prototype.ascending = function () {\n        return { column: this.name, descending: false };\n    };\n    /**\n     * Sorts by the column in descending order.\n     */\n    QueryColumn.prototype.descending = function () {\n        return { column: this.name, descending: true };\n    };\n    /**\n     * Produces a filter that requires this column to be equal to some value.\n     */\n    QueryColumn.prototype.equalTo = function (value) {\n        return this.filter(\"=\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be not equal to some value.\n     */\n    QueryColumn.prototype.notEqualTo = function (value) {\n        return this.filter(\"<>\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be greater than to some\n     * value.\n     */\n    QueryColumn.prototype.greaterThan = function (value) {\n        return this.filter(\">\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be less than to some value.\n     */\n    QueryColumn.prototype.lessThan = function (value) {\n        return this.filter(\"<\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be greater than or equal to\n     * some value.\n     */\n    QueryColumn.prototype.greaterThanOrEqualTo = function (value) {\n        return this.filter(\">=\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be less than or equal to\n     * some value.\n     */\n    QueryColumn.prototype.lessThanOrEqualTo = function (value) {\n        return this.filter(\"<=\", value);\n    };\n    return QueryColumn;\n}());\nexports.QueryColumn = QueryColumn;\n//# sourceMappingURL=QueryColumn.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar react_2 = __importDefault(require(\"react\"));\nfunction useDropDown(options) {\n    var _a = react_1.useState(options[0].label), selectedLabel = _a[0], setSelectedLabel = _a[1];\n    return {\n        options: options.map(function (x) { return x.label; }),\n        value: selectedLabel,\n        onChange: function (e) {\n            setSelectedLabel(e.target.value);\n        },\n        get selected() {\n            var _a, _b;\n            return (_b = (_a = options.find(function (x) { return x.label === selectedLabel; })) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : options[0].value;\n        }\n    };\n}\nexports.useDropDown = useDropDown;\nfunction DropDown(_a) {\n    var options = _a.options, value = _a.value, onChange = _a.onChange;\n    return (react_2.default.createElement(\"select\", { value: value, onChange: onChange }, options.map(function (x) { return react_2.default.createElement(\"option\", { key: x }, x); })));\n}\nexports.DropDown = DropDown;\n//# sourceMappingURL=DropDown.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nfunction LayoutElement(_a) {\n    var _b, _c;\n    var children = _a.children, type = _a.type, dimension = _a.dimension, sizes = _a.sizes, otherProps = __rest(_a, [\"children\", \"type\", \"dimension\", \"sizes\"]);\n    var nonNullSizes = sizes !== null && sizes !== void 0 ? sizes : [];\n    var totalSize = (_c = (_b = react_1.default.Children.map(children, (function (_, i) { var _a; return (_a = nonNullSizes[i]) !== null && _a !== void 0 ? _a : 1; }))) === null || _b === void 0 ? void 0 : _b.reduce(function (l, r) { return l + r; }, 0)) !== null && _c !== void 0 ? _c : 0;\n    var unit = totalSize ? 100 / totalSize : 0;\n    return (react_1.default.createElement(\"div\", __assign({}, otherProps, { style: { display: \"flex\", flexDirection: type, width: \"100%\", height: \"100%\" } }), react_1.default.Children.map(children, (function (child, i) {\n        var _a;\n        var _b;\n        return (react_1.default.createElement(\"div\", { className: \"layout-item\", style: (_a = {}, _a[dimension] = unit * ((_b = nonNullSizes[i]) !== null && _b !== void 0 ? _b : 1) + \"%\", _a) }, child));\n    }))));\n}\nexports.Row = function (props) { return react_1.default.createElement(LayoutElement, __assign({ type: \"row\", dimension: \"width\" }, props)); };\nexports.Column = function (props) { return react_1.default.createElement(LayoutElement, __assign({ type: \"column\", dimension: \"height\" }, props)); };\nfunction Layout(_a) {\n    var children = _a.children, otherProps = __rest(_a, [\"children\"]);\n    return react_1.default.createElement(\"div\", __assign({}, otherProps, { className: \"layout\" }), children);\n}\nexports.Layout = Layout;\n//# sourceMappingURL=Layouts.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar FlowerBIChartBox_1 = require(\"./FlowerBIChartBox\");\nfunction FlowerBIValueBox(_a) {\n    var id = _a.id, value = _a.value, title = _a.title, label = _a.label;\n    return (react_1.default.createElement(FlowerBIChartBox_1.FlowerBIChartBox, { id: id, title: title },\n        react_1.default.createElement(\"div\", { className: \"value-box\" },\n            react_1.default.createElement(\"div\", { className: \"value\" }, value),\n            react_1.default.createElement(\"div\", { className: \"title\" }, label))));\n}\nexports.FlowerBIValueBox = FlowerBIValueBox;\n//# sourceMappingURL=FlowerBIValueBox.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar flowerbi_1 = require(\"flowerbi\");\nfunction renderCell(key, def) {\n    var value = typeof def === \"string\" ? def : def[0];\n    var align = typeof def === \"string\" ? \"left\" : def[1];\n    return (react_1.default.createElement(\"td\", { key: key, className: align }, value));\n}\nfunction FlowerBITable(_a) {\n    var data = _a.data, columns = _a.columns;\n    return (react_1.default.createElement(\"table\", null,\n        react_1.default.createElement(\"thead\", null,\n            react_1.default.createElement(\"tr\", null, Object.keys(columns).map(function (column) { return (react_1.default.createElement(\"th\", { key: column }, column)); }))),\n        react_1.default.createElement(\"tbody\", null, data.records.map(function (record, i) {\n            var _a;\n            return (react_1.default.createElement(\"tr\", { key: (_a = JSON.stringify(record.selected)) !== null && _a !== void 0 ? _a : i }, Object.keys(columns).map(function (column) { return renderCell(column, columns[column](new flowerbi_1.QueryValuesRow(record, data.totals))); })));\n        })),\n        data.totals && (react_1.default.createElement(\"tfoot\", null,\n            react_1.default.createElement(\"tr\", null, Object.keys(columns).map(function (column) { return renderCell(column, columns[column](new flowerbi_1.QueryValuesTotal(data.totals))); }))))));\n}\nexports.FlowerBITable = FlowerBITable;\n//# sourceMappingURL=FlowerBITable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryModel_1 = require(\"./queryModel\");\n/**\n * Converts a statically-typed {@link Query} into the {@link QueryJson}\n * format, ready to be sent to your API.\n * @param query\n */\nfunction jsonifyQuery(query) {\n    var select = query.select, filters = query.filters, orderBy = query.orderBy, totals = query.totals, take = query.take, skip = query.skip;\n    return {\n        select: queryModel_1.getColumnPropsOnly(select).map(function (key) { return select[key].name; }),\n        aggregations: queryModel_1.getAggregatePropsOnly(select).map(function (key) { return select[key]; }),\n        filters: filters !== null && filters !== void 0 ? filters : [],\n        orderBy: orderBy !== null && orderBy !== void 0 ? orderBy : [],\n        totals: totals !== null && totals !== void 0 ? totals : false,\n        skip: skip !== null && skip !== void 0 ? skip : 0,\n        take: take !== null && take !== void 0 ? take : 100\n    };\n}\nexports.jsonifyQuery = jsonifyQuery;\n/**\n * Converts the `QueryRecordJson` for a single record into a strongly-typed record\n * with named properties, using the {@link Query.select} from the query to perform\n * the necessary mapping.\n * @param select The {@link Query.select} property from the query.\n * @param record The record returned from your API.\n */\nfunction expandQueryRecord(select, record) {\n    var result = {};\n    var n = 0;\n    for (var _i = 0, _a = queryModel_1.getAggregatePropsOnly(select); _i < _a.length; _i++) {\n        var key = _a[_i];\n        result[key] = record.aggregated[n++];\n    }\n    n = 0;\n    for (var _b = 0, _c = queryModel_1.getColumnPropsOnly(select); _b < _c.length; _b++) {\n        var key = _c[_b];\n        result[key] = record.selected[n++];\n    }\n    return result;\n}\nexports.expandQueryRecord = expandQueryRecord;\n/**\n * Converts the `QueryRecordJson` from the `totals` record into a strongly-typed\n * record named properties for the aggregated values only, using the\n * {@link Query.select} from the query to perform the necessary mapping.\n *\n * @param select The {@link Query.select} property from the query.\n * @param record The {@link QueryResultJson.totals} record returned from your API.\n */\nfunction getAggregateValuesOnly(select, record) {\n    var result = {};\n    var n = 0;\n    for (var _i = 0, _a = queryModel_1.getAggregatePropsOnly(select); _i < _a.length; _i++) {\n        var key = _a[_i];\n        result[key] = record.aggregated[n++];\n    }\n    return result;\n}\nexports.getAggregateValuesOnly = getAggregateValuesOnly;\n/**\n * Converts the payload returned from the API into the statically-typed\n * form appropriate for the query.\n * @param select The {@link Query.select} property from the query.\n * @param result The response payload from the API call.\n */\nfunction expandQueryResult(select, result) {\n    return {\n        records: result.records.map(function (r) { return expandQueryRecord(select, r); }),\n        totals: result.totals && getAggregateValuesOnly(select, result.totals)\n    };\n}\nexports.expandQueryResult = expandQueryResult;\n//# sourceMappingURL=executeQuery.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryValuesRow = /** @class */ (function () {\n    function QueryValuesRow(values, totals) {\n        this.values = values;\n        this.totals = totals;\n    }\n    QueryValuesRow.prototype.percentage = function (key) {\n        var _a;\n        if (!this.totals)\n            return 0;\n        var rawValue = this.values[key];\n        var total = (_a = this.totals[key]) !== null && _a !== void 0 ? _a : 0;\n        var percent = total === 0 ? 0 : (rawValue / total) * 100;\n        return Math.round(percent * 100) / 100;\n    };\n    return QueryValuesRow;\n}());\nexports.QueryValuesRow = QueryValuesRow;\nvar QueryValuesTotal = /** @class */ (function () {\n    function QueryValuesTotal(totals) {\n        this.values = totals;\n    }\n    QueryValuesTotal.prototype.percentage = function () {\n        return 100;\n    };\n    return QueryValuesTotal;\n}());\nexports.QueryValuesTotal = QueryValuesTotal;\n//# sourceMappingURL=QueryValues.js.map","\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar moment_1 = __importDefault(require(\"moment\"));\nfunction parseDate(val) {\n    // Ensure a numeric year is not interpreted as offset from 1970!\n    if (typeof val === \"number\") {\n        val = \"\" + val;\n    }\n    return moment_1.default(val);\n}\nvar days = {\n    round: function (d) {\n        return d.clone().startOf(\"day\");\n    },\n    format: function (d) {\n        return d.format(\"ll\");\n    },\n    increment: function (d) {\n        return d.clone().add(1, \"day\");\n    }\n};\nvar months = {\n    round: function (d) {\n        return d.clone().startOf(\"month\");\n    },\n    format: function (d) {\n        return d.format(\"MMM YYYY\");\n    },\n    increment: function (d) {\n        return d.clone().add(1, \"month\");\n    }\n};\nvar quarters = {\n    round: function (d) {\n        return d.clone().startOf(\"quarter\");\n    },\n    format: function (d) {\n        var monthFirst = d.format(\"MMM\");\n        var monthLast = d.clone().add(2, \"months\").format(\"MMM\");\n        var year = d.format(\"YYYY\");\n        return monthFirst + \"-\" + monthLast + \" \" + year;\n    },\n    increment: function (d) {\n        return d.clone().add(3, \"months\");\n    }\n};\nvar years = {\n    round: function (d) {\n        return d.clone().startOf(\"year\");\n    },\n    format: function (d) {\n        return d.format(\"YYYY\");\n    },\n    increment: function (d) {\n        return d.clone().add(1, \"year\");\n    }\n};\n/**\n * Standard built-in date types. To customise, implement the {@link FillDateType} interface.\n */\nexports.dateTypes = {\n    days: days, months: months, quarters: quarters, years: years\n};\n/**\n * Examines a set of dates and chooses the most specific type that includes them all. If\n * all fall on Jan, 1 then `years` is chosen, and so on.\n */\nfunction detectDateType(dates) {\n    return !dates.every(function (x) { return x.date() === 1; }) ? exports.dateTypes.days :\n        !dates.every(function (x) { return x.month() % 3 === 0; }) ? exports.dateTypes.months :\n            !dates.every(function (x) { return x.month() === 0; }) ? exports.dateTypes.quarters :\n                exports.dateTypes.years;\n}\nexports.detectDateType = detectDateType;\n/**\n * When querying for a time series chart, e.g. x-axis is _Month_ and y-axis is\n * _Total Sales_, there may be months where nothing was sold so they are\n * missing from the list of records.\n *\n * To render a proper time-series, we need these gaps to be filled in with\n * runs of fake records that give zero amounts for those months. e.g.\n *\n * ```ts\n * const filled = fillDates({\n *     records: [\n *         { date: '2020-04-01', totalSales: 10 },\n *         { date: '2020-06-01', totalSales: 4 },\n *         { date: '2020-07-01', totalSales: 9 },\n *     ],\n *     type: dateTypes.months,\n *     getDate: rec => rec.date,\n *     fill: (label, rec) => ({\n *         label,\n *         totalSales: 0,\n *         ...rec\n *     })\n * });\n * ```\n *\n * In the above example we add a `label` property to all the records, and\n * for the records that fill the gaps we set the `totalSales` property to 0.\n * For the real records, `...rec` will copy the real value of `totalSales`.\n *\n * To do this, we need to know:\n *\n * - how to round a date to the start of a unit (year, month, quarter),\n * - how to increment a date by that unit,\n * - how to format a date to a string for display.\n *\n * These operations are encapsulated by the {@link FillDateType} interface.\n * Several built-in types are provided in {@link dateTypes}, but you can\n * implement your own.\n *\n * Optionally you can also pass `min` and `max` dates, which will cause\n * extra records to be added at the start and end of the range if necessary.\n *\n * If you don't pass a `type`, a suitable type will be detected based on\n * how the input record dates fall on unit boundaries.\n */\nfunction fillDates(_a) {\n    var records = _a.records, getDate = _a.getDate, fill = _a.fill, min = _a.min, max = _a.max, type = _a.type;\n    records = __spreadArrays(records);\n    records.sort(function (x, y) { return parseDate(getDate(x)).diff(parseDate(getDate(y))); });\n    type = type !== null && type !== void 0 ? type : detectDateType(records.map(function (d) { return parseDate(getDate(d)); }));\n    var results = [];\n    var latest = undefined;\n    var lower = min ? type.round(parseDate(min)) : undefined;\n    for (var _i = 0, records_1 = records; _i < records_1.length; _i++) {\n        var record = records_1[_i];\n        var current = parseDate(getDate(record));\n        for (;;) {\n            latest = latest ? type.increment(latest) : lower;\n            if (!latest || latest >= current) {\n                break;\n            }\n            results.push(fill(type.format(latest), undefined));\n        }\n        results.push(fill(type.format(current), record));\n        latest = current;\n    }\n    if (latest && max) {\n        var upper = type.round(parseDate(max));\n        for (;;) {\n            latest = type.increment(latest);\n            if (latest > upper) {\n                break;\n            }\n            results.push(fill(type.format(latest), undefined));\n        }\n    }\n    return results;\n}\nexports.fillDates = fillDates;\n/** @deprecated */\nfunction smartDates(records, min, max, getDate, fill) {\n    return fillDates({ records: records, min: min, max: max, getDate: getDate, fill: fill });\n}\nexports.smartDates = smartDates;\n//# sourceMappingURL=fillDates.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar clearedState = {\n    global: [],\n    interactions: [],\n    interactionKey: \"\",\n};\nfunction usePageFilters() {\n    var _a = react_1.useState(clearedState), state = _a[0], set = _a[1];\n    function setInteraction(interactionKey, interactions) {\n        set(__assign(__assign({}, state), { interactionKey: interactionKey, interactions: interactions }));\n    }\n    function setGlobal(global) {\n        set(__assign(__assign({}, state), { global: global }));\n    }\n    function clearInteraction() {\n        set(__assign(__assign({}, state), { interactionKey: \"\", interactions: [] }));\n    }\n    function clearGlobal() {\n        set(__assign(__assign({}, state), { global: [] }));\n    }\n    function clearAll() {\n        set(clearedState);\n    }\n    function getFilters(key) {\n        var result = state.global;\n        return key !== state.interactionKey ? result.concat(state.interactions) : result;\n    }\n    return __assign(__assign({}, state), { setInteraction: setInteraction, setGlobal: setGlobal, clearInteraction: clearInteraction, clearGlobal: clearGlobal, clearAll: clearAll, getFilters: getFilters });\n}\nexports.usePageFilters = usePageFilters;\n//# sourceMappingURL=usePageFilters.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar flowerbi_1 = require(\"flowerbi\");\nvar json_stable_stringify_1 = __importDefault(require(\"json-stable-stringify\"));\n/**\n * A custom React hook that evaluates to the result of a\n * [Query](../flowerbi/interfaces/query.html), making it easy to perform a\n * query from within a component.\n *\n * The returned object has a strongly-typed `records` array, and optionally\n * a `totals` object. It has a `state` of type {@link UseQueryState} that\n * can be used to show a loading indicator.\n *\n * @param fetch The fetch function to use.\n * @param query The [Query](../flowerbi/interfaces/query.html) specification.\n */\nfunction useQuery(fetch, query) {\n    var queryJson = flowerbi_1.jsonifyQuery(query);\n    var _a = react_1.useState(\"init\"), state = _a[0], setState = _a[1];\n    var _b = react_1.useState({ records: [] }), result = _b[0], setResult = _b[1];\n    react_1.useEffect(function () {\n        if (state !== \"init\") {\n            setState(\"refresh\");\n        }\n        fetch(queryJson).then(function (x) {\n            setState(\"ready\");\n            setResult(x);\n        }, function () {\n            setState(\"error\");\n        });\n    }, [json_stable_stringify_1.default(queryJson)]);\n    return __assign(__assign({}, flowerbi_1.expandQueryResult(query.select, result)), { state: state });\n}\nexports.useQuery = useQuery;\n//# sourceMappingURL=useQuery.js.map"],"sourceRoot":""}