{"version":3,"sources":["../../tinybi/dist/index.js","../../tinybi/dist/arrayHelpers.js","../../tinybi/dist/QueryColumn.js","../../tinybi-react-utils/dist/DropDown.js","../../tinybi-react-utils/dist/Layouts.js","../../tinybi-react-utils/dist/TinyBIChartBox.js","../../tinybi-react/dist/TinyBITable.js","../../tinybi-react/dist/usePageFilters.js","../../tinybi-react/dist/useQuery.js","demoSchema.ts","Reports/dataColours.ts","../../tinybi-react-chartjs/dist/makeClickHandler.js","Reports/ResolvedPerCustomer.tsx","Reports/SourceOfErrors.tsx","Reports/TypesOfError.tsx","Reports/RecoverySummary.tsx","Reports/BugsOverTime.tsx","Reports/BugReporting.tsx","FilterPane.tsx","database.ts","localFetch.ts","App.tsx","serviceWorker.ts","index.tsx","../../tinybi/dist/executeQuery.js","../../tinybi/dist/QueryValues.js","../../tinybi/dist/smartDates.js","../../tinybi/dist/queryModel.js"],"names":["distinct","arr","map","_i","arr_1","length","item","Object","values","keysOf","obj","keys","QueryColumn","name","this","prototype","aggregation","aggregationType","filters","column","function","count","sum","filter","operator","value","ascending","descending","equalTo","notEqualTo","greaterThan","lessThan","greaterThanOrEqualTo","lessThanOrEqualTo","DropDown","_a","options","onChange","React","createElement","x","key","__assign","assign","t","s","i","n","arguments","p","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","LayoutElement","_b","_c","children","type","dimension","sizes","otherProps","nonNullSizes","totalSize","Children","_","reduce","l","r","unit","style","display","flexDirection","width","height","child","className","Row","props","Column","Layout","TinyBIChartBox","id","title","renderCell","def","align","TinyBITable","data","columns","records","record","JSON","stringify","selected","QueryValuesRow","totals","QueryValuesTotal","clearedState","global","interactions","interactionKey","useQuery","fetch","query","queryJson","jsonifyQuery","useState","result","setResult","useEffect","then","stableStringify","expandQueryResult","select","DateReported","Id","CalendarYearNumber","FirstDayOfQuarter","FirstDayOfMonth","Workflow","Resolved","WorkflowState","SourceOfError","FixedByCustomer","Customer","CustomerName","CategoryCombination","Crashed","DataLoss","SecurityBreach","OffByOne","Slow","StackOverflow","Bug","WorkflowId","CustomerId","ReportedDate","ResolvedDate","AssignedDate","CategoryCombinationId","AssignedCoderId","ResolvedCoderId","dataColours","makeClickHandler","chartRef","funcOrColumns","pageFilters","func","getColumnsOnly","c","onClick","evt","chart","element","getElementAtEvent","_chart","labelIndex","_index","datasetIndex","_datasetIndex","category","labels","legend","datasets","label","getEventData","current","chartInstance","setInteraction","stopPropagation","ResolvedPerCustomer","customer","bugCount","getFilters","ref","useRef","clickHandler","backgroundColor","SourceOfErrors","sourceOfError","categories","TypesOfError","categoryBits","workflowState","distinctWorkflowStates","bugCountByStateAndCategory","flatMap","bit","bugCountByCategory","sort","y","orderedCategories","scales","xAxes","stacked","yAxes","ticks","beginAtZero","colour","find","RecoverySummary","fixedByCustomer","state","resolvedBugCount","State","d","Count","percentage","dateGroupings","BugsOverTime","dateGrouping","selectedLabel","setSelectedLabel","target","useDropDown","period","countAllCauses","countHackers","orderBy","datedRecords","smartDates","dateLabel","hackers","lineTension","borderColor","allCauses","BugReporting","toDateString","toISOString","substr","useDateInput","init","editing","setEditing","applied","setApplied","dirty","event","initCounter","useFilterPane","visible","setVisible","from","Date","setFullYear","getFullYear","lastYear","to","dates","forEach","setGlobal","some","toggle","FilterPane","filterPane","db","a","publicUrl","window","sitePublicUrl","initSqlJs","locateFile","f","SQL","setupDb","Database","getDb","allocDb","makeRandomDate","setDate","getDate","Math","floor","random","formatDate","moment","format","pick","base","min","sourcesOfError","push","dateRows","m","getMonth","startOfQuarter","startOfMonth","join","workflows","resolved","workflowRows","categoryCombinations","b","categoryCombinationsRows","bugs","workflow","reported","assigned","catComb","coderAssigned","coderResolved","bugRows","initSql","run","sql","replace","started","exec","finished","console","log","getTime","querySql","blazorReady","Promise","done","notifyBlazorReady","localFetch","DotNet","invokeMethodAsync","json","parsed","parse","jsonDateParser","stackTrace","error","firstValueIndex","endOfSelects","slice","aggregated","Chart","defaults","defaultFontFamily","usePointStyle","maintainAspectRatio","reports","reportNames","App","reportName","setReportName","set","clearInteraction","clearGlobal","clearAll","concat","usePageFilters","report","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","others","getColumnPropsOnly","aggregations","getAggregatePropsOnly","getAggregateValuesOnly","expandQueryRecord","rawValue","total","percent","round","__spreadArrays","il","Array","k","j","jl","mapTo","diff","every","date","month","incr","results","latest","undefined","records_1","add"],"mappings":"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","file":"static/js/main.5e752838.chunk.js","sourcesContent":["export * from \"./arrayHelpers\";\nexport * from \"./executeQuery\";\nexport * from \"./QueryColumn\";\nexport * from \"./QueryJson\";\nexport * from \"./queryModel\";\nexport * from \"./QueryValues\";\nexport * from \"./smartDates\";\n","/**\n * Returns the distinct (unique) values from an array. The comparison\n * method is very simplistic: all values are converted to strings\n * before comparison.\n * @param arr\n */\nexport function distinct(arr) {\n    var map = {};\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n        var item = arr_1[_i];\n        map[\"\" + item] = item;\n    }\n    return Object.values(map);\n}\n/**\n * Returns the names of properties (i.e. the keys) in an object, statically\n * typed so each has the string literal type of one of the properties. This\n * is not always correct, because the type will include properties inherited\n * from the prototype, where as the values returned at runtime will never\n * include inherited properties. But it's a useful approximation in situations\n * where prototype inheritance can be ignored.\n *\n * @param obj The object to obtain keys from.\n */\nexport function keysOf(obj) {\n    return Object.keys(obj);\n}\n","/**\n * A column from the schema, with a name and a data type. A whole schema of\n * such declared columns can be auto-generated using the CLI.\n */\nvar QueryColumn = /** @class */ (function () {\n    /**\n     * @param name The name, of the form `table.column`.\n     */\n    function QueryColumn(name) {\n        this.name = name;\n    }\n    QueryColumn.prototype.aggregation = function (aggregationType, filters) {\n        return {\n            column: this.name,\n            function: aggregationType,\n            filters: filters,\n        };\n    };\n    /**\n     * Aggregates the column by counting values.\n     * @param filters Optional filters to apply.\n     */\n    QueryColumn.prototype.count = function (filters) {\n        return this.aggregation(\"count\", filters);\n    };\n    /**\n     * Aggregates the column by summing values.\n     * @param filters Optional filters to apply.\n     */\n    QueryColumn.prototype.sum = function (filters) {\n        return this.aggregation(\"sum\", filters);\n    };\n    QueryColumn.prototype.filter = function (operator, value) {\n        return {\n            column: this.name,\n            operator: operator,\n            value: value,\n        };\n    };\n    /**\n     * Sorts by the column in ascending order.\n     */\n    QueryColumn.prototype.ascending = function () {\n        return { column: this.name, descending: false };\n    };\n    /**\n     * Sorts by the column in descending order.\n     */\n    QueryColumn.prototype.descending = function () {\n        return { column: this.name, descending: true };\n    };\n    /**\n     * Produces a filter that requires this column to be equal to some value.\n     */\n    QueryColumn.prototype.equalTo = function (value) {\n        return this.filter(\"=\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be not equal to some value.\n     */\n    QueryColumn.prototype.notEqualTo = function (value) {\n        return this.filter(\"<>\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be greater than to some\n     * value.\n     */\n    QueryColumn.prototype.greaterThan = function (value) {\n        return this.filter(\">\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be less than to some value.\n     */\n    QueryColumn.prototype.lessThan = function (value) {\n        return this.filter(\"<\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be greater than or equal to\n     * some value.\n     */\n    QueryColumn.prototype.greaterThanOrEqualTo = function (value) {\n        return this.filter(\">=\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be less than or equal to\n     * some value.\n     */\n    QueryColumn.prototype.lessThanOrEqualTo = function (value) {\n        return this.filter(\"<=\", value);\n    };\n    return QueryColumn;\n}());\nexport { QueryColumn };\n","import { useState } from \"react\";\nimport React from \"react\";\nexport function useDropDown(options) {\n    var _a = useState(options[0].label), selectedLabel = _a[0], setSelectedLabel = _a[1];\n    return {\n        options: options.map(function (x) { return x.label; }),\n        value: selectedLabel,\n        onChange: function (e) {\n            setSelectedLabel(e.target.value);\n        },\n        get selected() {\n            var _a, _b;\n            return (_b = (_a = options.find(function (x) { return x.label === selectedLabel; })) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : options[0].value;\n        }\n    };\n}\nexport function DropDown(_a) {\n    var options = _a.options, value = _a.value, onChange = _a.onChange;\n    return (React.createElement(\"select\", { value: value, onChange: onChange }, options.map(function (x) { return React.createElement(\"option\", { key: x }, x); })));\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from \"react\";\nfunction LayoutElement(_a) {\n    var _b, _c;\n    var children = _a.children, type = _a.type, dimension = _a.dimension, sizes = _a.sizes, otherProps = __rest(_a, [\"children\", \"type\", \"dimension\", \"sizes\"]);\n    var nonNullSizes = sizes !== null && sizes !== void 0 ? sizes : [];\n    var totalSize = (_c = (_b = React.Children.map(children, (function (_, i) { var _a; return (_a = nonNullSizes[i]) !== null && _a !== void 0 ? _a : 1; }))) === null || _b === void 0 ? void 0 : _b.reduce(function (l, r) { return l + r; }, 0)) !== null && _c !== void 0 ? _c : 0;\n    var unit = totalSize ? 100 / totalSize : 0;\n    return (React.createElement(\"div\", __assign({}, otherProps, { style: { display: \"flex\", flexDirection: type, width: \"100%\", height: \"100%\" } }), React.Children.map(children, (function (child, i) {\n        var _a;\n        var _b;\n        return (React.createElement(\"div\", { className: \"layout-item\", style: (_a = {}, _a[dimension] = unit * ((_b = nonNullSizes[i]) !== null && _b !== void 0 ? _b : 1) + \"%\", _a) }, child));\n    }))));\n}\nexport var Row = function (props) { return React.createElement(LayoutElement, __assign({ type: \"row\", dimension: \"width\" }, props)); };\nexport var Column = function (props) { return React.createElement(LayoutElement, __assign({ type: \"column\", dimension: \"height\" }, props)); };\nexport function Layout(_a) {\n    var children = _a.children, otherProps = __rest(_a, [\"children\"]);\n    return React.createElement(\"div\", __assign({}, otherProps, { className: \"layout\" }), children);\n}\n","import React from \"react\";\nexport function TinyBIChartBox(_a) {\n    var id = _a.id, title = _a.title, children = _a.children;\n    return (React.createElement(\"div\", { className: \"chart-box\", id: id },\n        React.createElement(\"div\", { className: \"title\" }, title),\n        React.createElement(\"div\", { className: \"chart\" }, children)));\n}\n","import React from \"react\";\nimport { QueryValuesRow, QueryValuesTotal } from \"tinybi\";\nfunction renderCell(key, def) {\n    var value = typeof def === \"string\" ? def : def[0];\n    var align = typeof def === \"string\" ? \"left\" : def[1];\n    return (React.createElement(\"td\", { key: key, className: align }, value));\n}\nexport function TinyBITable(_a) {\n    var data = _a.data, columns = _a.columns;\n    return (React.createElement(\"table\", null,\n        React.createElement(\"thead\", null,\n            React.createElement(\"tr\", null, Object.keys(columns).map(function (column) { return (React.createElement(\"th\", { key: column }, column)); }))),\n        React.createElement(\"tbody\", null, data.records.map(function (record, i) {\n            var _a;\n            return (React.createElement(\"tr\", { key: (_a = JSON.stringify(record.selected)) !== null && _a !== void 0 ? _a : i }, Object.keys(columns).map(function (column) { return renderCell(column, columns[column](new QueryValuesRow(record, data.totals))); })));\n        })),\n        data.totals && (React.createElement(\"tfoot\", null,\n            React.createElement(\"tr\", null, Object.keys(columns).map(function (column) { return renderCell(column, columns[column](new QueryValuesTotal(data.totals))); }))))));\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useState } from \"react\";\nvar clearedState = {\n    global: [],\n    interactions: [],\n    interactionKey: \"\",\n};\nexport function usePageFilters() {\n    var _a = useState(clearedState), state = _a[0], set = _a[1];\n    function setInteraction(interactionKey, interactions) {\n        set(__assign(__assign({}, state), { interactionKey: interactionKey, interactions: interactions }));\n    }\n    function setGlobal(global) {\n        set(__assign(__assign({}, state), { global: global }));\n    }\n    function clearInteraction() {\n        set(__assign(__assign({}, state), { interactionKey: \"\", interactions: [] }));\n    }\n    function clearGlobal() {\n        set(__assign(__assign({}, state), { global: [] }));\n    }\n    function clearAll() {\n        set(clearedState);\n    }\n    function getFilters(key) {\n        var result = state.global;\n        return key !== state.interactionKey ? result.concat(state.interactions) : result;\n    }\n    return __assign(__assign({}, state), { setInteraction: setInteraction, setGlobal: setGlobal, clearInteraction: clearInteraction, clearGlobal: clearGlobal, clearAll: clearAll, getFilters: getFilters });\n}\n","import { useState, useEffect } from \"react\";\nimport { jsonifyQuery, expandQueryResult } from \"tinybi\";\nimport stableStringify from \"json-stable-stringify\";\n/**\n * A custom React hook that evaluates to the result of a\n * [Query](../tinybi/interfaces/query.html), making it easy to perform a\n * query from within a component.\n *\n * The returned object has a strongly-typed `records` array, and optionally\n * a `totals` object.\n *\n * @param fetch The fetch function to use.\n * @param query The [Query](../tinybi/interfaces/query.html) specification.\n */\nexport function useQuery(fetch, query) {\n    var queryJson = jsonifyQuery(query);\n    var _a = useState({ records: [] }), result = _a[0], setResult = _a[1];\n    useEffect(function () {\n        fetch(queryJson).then(setResult);\n    }, [stableStringify(queryJson)]);\n    return expandQueryResult(query.select, result);\n}\n","import { QueryColumn } from \"tinybi\";\n\nexport const DateReported = {\n    Id: new QueryColumn<Date>(\"DateReported.Id\"),\n    CalendarYearNumber: new QueryColumn<number>(\"DateReported.CalendarYearNumber\"),\n    FirstDayOfQuarter: new QueryColumn<Date>(\"DateReported.FirstDayOfQuarter\"),\n    FirstDayOfMonth: new QueryColumn<Date>(\"DateReported.FirstDayOfMonth\"),\n};\n\nexport const DateResolved = {\n    Id: new QueryColumn<Date>(\"DateResolved.Id\"),\n    CalendarYearNumber: new QueryColumn<number>(\"DateResolved.CalendarYearNumber\"),\n    FirstDayOfQuarter: new QueryColumn<Date>(\"DateResolved.FirstDayOfQuarter\"),\n    FirstDayOfMonth: new QueryColumn<Date>(\"DateResolved.FirstDayOfMonth\"),\n};\n\nexport const DateAssigned = {\n    Id: new QueryColumn<Date>(\"DateAssigned.Id\"),\n    CalendarYearNumber: new QueryColumn<number>(\"DateAssigned.CalendarYearNumber\"),\n    FirstDayOfQuarter: new QueryColumn<Date>(\"DateAssigned.FirstDayOfQuarter\"),\n    FirstDayOfMonth: new QueryColumn<Date>(\"DateAssigned.FirstDayOfMonth\"),\n};\n\nexport const Workflow = {\n    Id: new QueryColumn<number>(\"Workflow.Id\"),\n    Resolved: new QueryColumn<boolean>(\"Workflow.Resolved\"),\n    WorkflowState: new QueryColumn<string>(\"Workflow.WorkflowState\"),\n    SourceOfError: new QueryColumn<string>(\"Workflow.SourceOfError\"),\n    FixedByCustomer: new QueryColumn<boolean>(\"Workflow.FixedByCustomer\"),\n};\n\nexport const Category = {\n    Id: new QueryColumn<number>(\"Category.Id\"),\n    Label: new QueryColumn<string>(\"Category.Label\"),\n};\n\nexport const Customer = {\n    Id: new QueryColumn<number>(\"Customer.Id\"),\n    CustomerName: new QueryColumn<string>(\"Customer.CustomerName\"),\n};\n\nexport const CoderAssigned = {\n    Id: new QueryColumn<number>(\"CoderAssigned.Id\"),\n    FullName: new QueryColumn<string>(\"CoderAssigned.FullName\"),\n};\n\nexport const CoderResolved = {\n    Id: new QueryColumn<number>(\"CoderResolved.Id\"),\n    FullName: new QueryColumn<string>(\"CoderResolved.FullName\"),\n};\n\nexport const CategoryCombination = {\n    Id: new QueryColumn<number>(\"CategoryCombination.Id\"),\n    Crashed: new QueryColumn<boolean>(\"CategoryCombination.Crashed\"),\n    DataLoss: new QueryColumn<boolean>(\"CategoryCombination.DataLoss\"),\n    SecurityBreach: new QueryColumn<boolean>(\"CategoryCombination.SecurityBreach\"),\n    OffByOne: new QueryColumn<boolean>(\"CategoryCombination.OffByOne\"),\n    Slow: new QueryColumn<boolean>(\"CategoryCombination.Slow\"),\n    StackOverflow: new QueryColumn<boolean>(\"CategoryCombination.StackOverflow\"),\n};\n\nexport const Bug = {\n    Id: new QueryColumn<number>(\"Bug.Id\"),\n    WorkflowId: new QueryColumn<number>(\"Bug.WorkflowId\"),\n    CustomerId: new QueryColumn<number>(\"Bug.CustomerId\"),\n    ReportedDate: new QueryColumn<Date>(\"Bug.ReportedDate\"),\n    ResolvedDate: new QueryColumn<Date>(\"Bug.ResolvedDate\"),\n    AssignedDate: new QueryColumn<Date>(\"Bug.AssignedDate\"),\n    CategoryCombinationId: new QueryColumn<number>(\"Bug.CategoryCombinationId\"),\n    AssignedCoderId: new QueryColumn<number>(\"Bug.AssignedCoderId\"),\n    ResolvedCoderId: new QueryColumn<number>(\"Bug.ResolvedCoderId\"),\n};\n\n","export const dataColours = [\"#722E85\", \"#CD65D9\", \"#3ED4B0\", \"#F54E7B\", \"#FF7676\", \"#FAD57A\", \"#313345\", \"#b4b2bc\"];\n","import { getColumnsOnly } from \"tinybi\";\nfunction getEventData(evt, chart) {\n    if (chart && evt) {\n        var element = chart.getElementAtEvent(evt)[0];\n        if (element) {\n            var data = element._chart.data;\n            var labelIndex = element._index;\n            var datasetIndex = element._datasetIndex;\n            return {\n                category: data.labels[labelIndex],\n                legend: data.datasets[datasetIndex].label,\n            };\n        }\n    }\n}\nexport function makeClickHandler(id, chartRef, funcOrColumns, pageFilters) {\n    var func = typeof funcOrColumns === \"function\" ? funcOrColumns :\n        function (keys) { return getColumnsOnly(funcOrColumns).map(function (c, i) { return c.equalTo(keys[i]); }); };\n    return {\n        onClick: function (evt) {\n            var _a;\n            var data = getEventData(evt, (_a = chartRef.current) === null || _a === void 0 ? void 0 : _a.chartInstance);\n            if (data && pageFilters) {\n                var filters = func([data.category, data.legend]);\n                if (filters) {\n                    pageFilters.setInteraction(id, filters);\n                    evt === null || evt === void 0 ? void 0 : evt.stopPropagation();\n                }\n            }\n        }\n    };\n}\n","import React, { useRef } from \"react\";\nimport { useQuery } from \"tinybi-react\";\nimport { TinyBIChartBox } from \"tinybi-react-utils\";\nimport { Customer, Bug, Workflow } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { Pie } from \"react-chartjs-2\";\nimport { VisualProps } from \"./VisualProps\";\nimport { makeClickHandler } from \"tinybi-react-chartjs\";\n\nexport function ResolvedPerCustomer({ pageFilters, fetch }: VisualProps) {\n\n    const id = \"ResolvedPerCustomer\";\n\n    const query = {\n        select: {\n            customer: Customer.CustomerName,\n            bugCount: Bug.Id.count()\n        },\n        filters: [\n            Workflow.Resolved.equalTo(true),\n            ...pageFilters.getFilters(id)\n        ],\n    };\n\n    const ref = useRef<Pie>(null);\n    const result = useQuery(fetch, query);\n    const clickHandler = makeClickHandler(id, ref, query.select, pageFilters);\n    \n    return (\n        <TinyBIChartBox id={id} title=\"Resolved Per Customer\">\n            <Pie\n                ref={ref}\n                options={{ ...clickHandler }}\n                data={{\n                    labels: result.records.map(x => x.customer),\n                    datasets: [{\n                        label: \"Count\",\n                        backgroundColor: dataColours,\n                        data: result.records.map(x => x.bugCount)\n                    }]\n                }}\n            />\n        </TinyBIChartBox>        \n    );\n}\n","import React, { useRef } from \"react\";\nimport { useQuery } from \"tinybi-react\";\nimport { TinyBIChartBox } from \"tinybi-react-utils\";\nimport { Bug, Workflow } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { Pie } from \"react-chartjs-2\";\nimport { VisualProps } from \"./VisualProps\";\nimport { makeClickHandler } from \"tinybi-react-chartjs\";\n\nconst id = \"SourceOfErrors\";\n\nexport function SourceOfErrors({ pageFilters, fetch }: VisualProps) {\n\n    const query = {\n        select: {\n            sourceOfError: Workflow.SourceOfError,\n            bugCount: Bug.Id.count()\n        },\n        filters: [\n            Workflow.Resolved.equalTo(true),\n            ...pageFilters.getFilters(id)\n        ],\n    };\n\n    const result = useQuery(fetch, query);\n\n    const ref = useRef<Pie>(null);\n    const clickHandler = makeClickHandler(id, ref, query.select, pageFilters);\n    \n    return (\n        <TinyBIChartBox id={id} title=\"Source Of Errors\">\n            <Pie\n                ref={ref}\n                options={{ ...clickHandler }} \n                data={{\n                    labels: result.records.map(x => x.sourceOfError),\n                    datasets: [{\n                        label: \"Count\",\n                        backgroundColor: dataColours,\n                        data: result.records.map(x => x.bugCount)\n                    }]\n                }}\n            />\n        </TinyBIChartBox>\n    );\n}\n","import React, { useRef } from \"react\";\nimport { QueryColumn, distinct, keysOf } from \"tinybi\";\nimport { useQuery } from \"tinybi-react\";\nimport { TinyBIChartBox } from \"tinybi-react-utils\";\nimport { makeClickHandler } from \"tinybi-react-chartjs\";\nimport { Bug, Workflow, CategoryCombination } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { Bar } from \"react-chartjs-2\";\nimport { VisualProps } from \"./VisualProps\";\n\nconst categoriesRaw = {\n    \"Crashed\": CategoryCombination.Crashed,\n    \"Data loss\": CategoryCombination.DataLoss,\n    \"Security breach\": CategoryCombination.SecurityBreach,\n    \"Off by one\": CategoryCombination.OffByOne,\n    \"Slow\": CategoryCombination.Slow,\n    \"Stack overflow\": CategoryCombination.StackOverflow,\n};\n\ntype CategoryLabel = keyof typeof categoriesRaw;\n\nconst categories: Record<CategoryLabel, QueryColumn<boolean>> = categoriesRaw;\n\nexport function TypesOfError({ pageFilters, fetch }: VisualProps) {\n\n    const id = \"TypesOfError\";\n\n    // In the query we ask for the bits describing the categories applicable to each bug\n    const query = {\n        select: {\n            categoryBits: Bug.CategoryCombinationId, \n            workflowState: Workflow.WorkflowState,\n            bugCount: Bug.Id.count()\n        },\n        filters: [\n            Workflow.Resolved.equalTo(true),\n            ...pageFilters.getFilters(id)\n        ]\n    };\n\n    const data = useQuery(fetch, query);\n\n    const chart = useRef<Bar>(null);\n\n    const clickHandler = makeClickHandler(id, chart, \n        keys => [\n            Workflow.WorkflowState.equalTo(keys[1]), \n            categories[keys[0] as CategoryLabel].equalTo(true)\n        ],\n        pageFilters\n    );\n\n    const distinctWorkflowStates = distinct(data.records.map(r => r.workflowState));\n\n    // Convert the bit combinations into category labels\n    const bugCountByStateAndCategory = distinctWorkflowStates.flatMap(workflowState =>\n        keysOf(categories).map((category, bit) => ({\n            workflowState,\n            category,\n            bugCount: data.records\n                .filter(r => r.workflowState === workflowState && r.categoryBits & (1 << bit))\n                .map(r => r.bugCount)\n                .reduce((l, r) => l + r, 0)\n        })));\n\n    // Sum up the categories (full height of each bar)\n    const bugCountByCategory = keysOf(categories).map(category => ({\n        category,\n        bugCount: bugCountByStateAndCategory\n            .filter(r => r.category === category)\n            .map(r => r.bugCount)\n            .reduce((l, r) => l + r, 0)\n    }));\n\n    // Sort by bugCount descending so tallest bar is first\n    bugCountByCategory.sort((x, y) => y.bugCount - x.bugCount);\n\n    // Omit empty categories\n    const orderedCategories = bugCountByCategory.filter(c => c.bugCount > 0).map(c => c.category);\n\n    return (\n        <TinyBIChartBox id={id} title=\"Types Of Error\">\n            <Bar \n                ref={chart}\n                options={{ \n                    scales: {\n                        xAxes: [ { stacked: true } ],\n                        yAxes: [ { stacked: true, ticks: { beginAtZero: true } } ]\n                    },\n                    ...clickHandler\n                }}\n                data={{\n                    labels: orderedCategories,\n                    datasets: distinctWorkflowStates.map((workflowState, colour) => ({\n                        label: workflowState,\n                        data: orderedCategories.map(category =>\n                            bugCountByStateAndCategory.find(r => r.workflowState === workflowState && \n                                                                 r.category === category)?.bugCount ?? 0),\n                        backgroundColor: dataColours[colour]\n                    }))\n                }}\n            />\n        </TinyBIChartBox>\n    )\n}\n","import React from \"react\";\nimport { TinyBITable, useQuery } from \"tinybi-react\";\nimport { TinyBIChartBox } from \"tinybi-react-utils\";\nimport { Bug, Workflow } from \"../demoSchema\";\nimport { VisualProps } from \"./VisualProps\";\n\nexport interface RecoverySummaryProps extends VisualProps {\n    fixedByCustomer: boolean;\n    title: string;\n}\n\nexport function RecoverySummary({ pageFilters, fixedByCustomer, title, fetch }: RecoverySummaryProps) {\n\n    const data = useQuery(fetch, {\n        select: {\n            state: Workflow.WorkflowState,\n            bugCount: Bug.Id.count(),\n            resolvedBugCount: Bug.Id.count([\n                Workflow.Resolved.equalTo(true)\n            ])\n        },\n        filters: [\n            Workflow.FixedByCustomer.equalTo(fixedByCustomer),\n            ...pageFilters.getFilters(\"\"),\n        ],\n        totals: true\n    });\n\n    return (\n        <TinyBIChartBox title={title}>\n            <TinyBITable\n                data={data}\n                columns={{\n                    State: (d) => d.values.state ?? \"Total\",\n                    Count: (d) => [`${d.values.bugCount}`, \"right\"],\n                    \"% of Count\": (d) => [`${d.percentage(\"resolvedBugCount\")}%`, \"right\"],\n                }} \n            />\n        </TinyBIChartBox>\n    );\n}\n","import React, { useRef } from \"react\";\nimport { QueryColumn, smartDates } from \"tinybi\";\nimport { useQuery } from \"tinybi-react\";\nimport { useDropDown, DropDown, TinyBIChartBox } from \"tinybi-react-utils\";\nimport { Bug, Workflow, DateReported } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { ChartDataSets, ChartOptions, ChartData } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { VisualProps } from \"./VisualProps\";\nimport { makeClickHandler } from \"tinybi-react-chartjs\";\n\nconst dateGroupings = [\n    { label: \"Month\", value: DateReported.FirstDayOfMonth },\n    { label: \"Quarter\", value: DateReported.FirstDayOfQuarter },\n    { label: \"Year\", value: DateReported.CalendarYearNumber }\n]\n\nexport function BugsOverTime({ pageFilters, fetch }: VisualProps) {\n\n    const id = \"BugsOverTime\";\n\n    const dateGrouping = useDropDown<QueryColumn<Date|number>>(dateGroupings);\n\n    const query = {\n        select: {\n            period: dateGrouping.selected,        \n            countAllCauses: Bug.Id.count(),\n            countHackers: Bug.Id.count([\n                Workflow.SourceOfError.equalTo(\"Hackers\")\n            ]),\n        },\n        filters: [\n            Workflow.Resolved.equalTo(true),\n            ...pageFilters.getFilters(id)\n        ],\n        orderBy: [dateGrouping.selected.ascending()],        \n    };\n\n    const result = useQuery(fetch, query);\n\n    const datedRecords = smartDates(result.records, r => r.period, (dateLabel, record) => ({\n        dateLabel,\n        countAllCauses: 0,\n        countHackers: 0,\n        ...record \n    }));\n\n    const ref = useRef<Bar>(null);\n\n    const clickHandler = makeClickHandler(id, ref, query.select!, pageFilters);\n    \n    const hackers: ChartDataSets = {\n        type: \"line\",\n        data: datedRecords.map(r => r.countHackers ?? 0),\n        label: \"Hackers\",\n        backgroundColor: \"transparent\",\n        lineTension: 0,\n        borderColor: dataColours[1],\n    };\n    \n    const allCauses: ChartDataSets = {\n        data: datedRecords.map(r => r.countAllCauses),\n        label: \"All Causes\",\n        backgroundColor: dataColours[0]\n    };\n    \n    const data: ChartData = {\n        labels: datedRecords.map(x => x.dateLabel),\n        datasets: [hackers, allCauses],\n    };\n\n    const options: ChartOptions = {\n        ...clickHandler,\n        scales: {\n            yAxes: [{ ticks: { beginAtZero: true } }]\n        }\n    };\n\n    return (\n        <TinyBIChartBox id={id} title=\"Bugs Over Time\">\n            <div className=\"chart-with-dropdown\">\n                <div className=\"content\">\n                    <Bar ref={ref} options={options} data={data} />\n                </div>            \n                <div className=\"dropdown\">\n                    <span>By </span><DropDown {...dateGrouping} />\n                </div>\n            </div>            \n        </TinyBIChartBox>\n    );\n}\n","import React from \"react\";\nimport { Layout, Column, Row } from \"tinybi-react-utils\";\nimport { VisualProps } from \"./VisualProps\";\nimport { ResolvedPerCustomer } from \"./ResolvedPerCustomer\";\nimport { SourceOfErrors } from \"./SourceOfErrors\";\nimport { TypesOfError } from \"./TypesOfError\";\nimport { RecoverySummary } from \"./RecoverySummary\";\nimport { BugsOverTime } from \"./BugsOverTime\";\n\nexport function BugReporting(props: VisualProps) {\n    return (\n        <Layout>\n            <Column>\n                <Row sizes={[1, 1, 2]}>\n                    <ResolvedPerCustomer {...props} />\n                    <SourceOfErrors {...props} />\n                    <TypesOfError {...props} />\n                </Row>\n                <Row>\n                    <BugsOverTime {...props} />\n                    <Column>\n                        <RecoverySummary {...props} title=\"Progress Summary\" fixedByCustomer={false} />\n                        <RecoverySummary {...props} title=\"Fixed By Customers\" fixedByCustomer={true} />\n                    </Column>\n                </Row>\n            </Column>\n        </Layout>\n    );\n}\n","import React, { useState } from \"react\";\nimport { DateReported } from \"./demoSchema\";\nimport { PageFilters } from \"tinybi-react\";\n\nfunction lastYear() {\n    const d = new Date();\n    d.setFullYear(d.getFullYear() - 5);\n    return d;\n}\n\nfunction toDateString(d: Date) {\n    return d.toISOString().substr(0, 10);\n}\n\nfunction useDateInput(init: Date) {\n    const [editing, setEditing] = useState(toDateString(init));\n    const [applied, setApplied] = useState(toDateString(init));\n\n    function apply() {\n        setApplied(editing);\n    }\n\n    function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        setEditing(event.target.value);\n    }\n\n    return {\n        editing,\n        applied,\n        dirty: editing !== applied,\n        onChange,\n        apply        \n    };\n}\n\nlet initCounter = 0;\n\nexport function useFilterPane(pageFilters: PageFilters) {\n    const [visible, setVisible] = useState(false);\n    const from = useDateInput(lastYear());\n    const to = useDateInput(new Date());    \n    const dates = [from, to];\n\n    function toggle() {\n        setVisible(!visible);\n    }\n\n    function apply() {\n        dates.forEach(d => d.apply());\n        pageFilters.setGlobal([\n            DateReported.Id.greaterThanOrEqualTo(new Date(from.editing)),\n            DateReported.Id.lessThanOrEqualTo(new Date(to.editing))\n        ]);\n    }\n\n    const [init] = useState(++initCounter);\n    if (init === initCounter) {\n        apply();\n    }\n\n    const title = `Entered date from ${from.applied} to ${to.applied}`;\n\n    const dirty = dates.some(d => d.dirty);\n\n    return { visible, toggle, from, to, dirty, title, apply };\n}\n\nexport interface FilterPaneProps {\n    filterPane: ReturnType<typeof useFilterPane>; \n}\n\nexport function FilterPane({ filterPane: { visible, from, to, apply, dirty } }: FilterPaneProps) {\n    return (\n        <div className={`filter-pane ${visible && \"visible\"}`}>\n            <div>From</div>\n            <input type=\"date\" value={from.editing} onChange={from.onChange}/>\n            <div>To</div>\n            <input type=\"date\" value={to.editing} onChange={to.onChange}/>\n            <div className={`button ${dirty && \"enabled\"}`} onClick={apply}>Update</div>                 \n        </div>\n    )\n}\n","import moment from \"moment\";\n\nasync function allocDb() {\n    const publicUrl = (window as any).sitePublicUrl;\n\n    const SQL = await initSqlJs({\n        locateFile(f) {\n            return `${publicUrl}/${f}`;\n        }\n    });\n\n    const db = new SQL.Database();\n    setupDb(db);\n    return db;\n}\n\nlet db: ReturnType<typeof allocDb> | undefined;\n\ntype Await<T> = T extends {\n    then(onfulfilled?: (value: infer U) => unknown): unknown;\n} ? U : T;\n\nexport type Database = NonNullable<Await<typeof db>>;\n\nexport function getDb(): Promise<Database> {\n    if (!db) {\n        db = allocDb();\n    }\n    return db;\n}\n\nfunction makeRandomDate() {\n    const d = new Date(2018, 0, 1);\n    d.setDate(d.getDate() + Math.floor(Math.random() * 800));\n    return d;\n}\n\nfunction formatDate(d: Date) {\n    return moment(d).format(\"YYYY-MM-DD\");\n}\n\nfunction startOfQuarter(d: Date) {\n    const m = Math.floor(d.getMonth() / 3) * 3;\n    return formatDate(new Date(d.getFullYear(), m, 1));\n}\n\nfunction startOfMonth(d: Date) {    \n    return formatDate(new Date(d.getFullYear(), d.getMonth(), 1));\n}\n\nfunction pick(count: number, base: number) {\n     return Math.min(count - 1, Math.floor(Math.random() * count)) + base;     \n}\n\nfunction setupDb(db: Database) {\n\n    const workflowStates = [\n        \"Ignored\",\n        \"Prioritised\",\n        \"Assigned\",\n        \"Fixed\",\n        \"AsDesigned\"\n    ];\n\n    const sourcesOfError = [\n        \"Design flaw\",\n        \"Hackers\",\n        \"Honest mistake\"\n    ];\n\n    const dates: Date[] = [];\n    for (let n = 0; n < 50; n++) {\n        dates.push(makeRandomDate());\n    }\n\n    const dateRows = dates.map(x => `\n        ('${formatDate(x)}', ${x.getFullYear()}, '${startOfQuarter(x)}', '${startOfMonth(x)}')`).join(\",\");\n\n    const workflows: string[] = [];\n\n    for (const workflowState of workflowStates) {\n        for (const sourceOfError of sourcesOfError) {\n            for (const resolved of [0, 1]) {\n                for (const fixedByCustomer of [0, 1]) {\n                    workflows.push(`\n                        (${workflows.length + 1}, ${resolved}, '${workflowState}', '${sourceOfError}', ${fixedByCustomer})`);\n                }\n            }\n        }\n    }\n\n    const workflowRows = workflows.join(\",\");\n\n    const categoryCombinations: string[] = [];\n\n    for (const a of [0, 1]) {\n        for (const b of [0, 1]) {\n            for (const c of [0, 1]) {\n                for (const d of [0, 1]) {\n                    for (const e of [0, 1]) {\n                        for (const f of [0, 1]) {\n                            categoryCombinations.push(`\n                                (${categoryCombinations.length}, ${a}, ${b}, ${c}, ${d}, ${e}, ${f})`);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    const categoryCombinationsRows = categoryCombinations.join(\",\");\n\n    const bugs: string[] = [];\n\n    for (var n = 0; n < 100; n++) {\n        const workflow = pick(workflows.length, 1);\n        const customer = pick(6, 1);\n        const reported = formatDate(dates[pick(dates.length, 0)]);\n        const resolved = formatDate(dates[pick(dates.length, 0)]);\n        const assigned = formatDate(dates[pick(dates.length, 0)]);\n        const catComb = pick(categoryCombinations.length, 1);\n        const coderAssigned = pick(6, 1);\n        const coderResolved = pick(6, 1);\n\n        bugs.push(`\n            (${n + 1}, ${workflow}, ${customer}, '${reported}', '${resolved}', '${assigned}', ${catComb}, ${coderAssigned}, ${coderResolved})`);\n    }\n\n    const bugRows = bugs.join(\",\");\n\n    const initSql = `\n        create table \\`Date\\` (\n            Id date,\n            CalendarYearNumber smallint,\n            FirstDayOfQuarter date,\n            FirstDayOfMonth date\n        );\n\n        insert into \\`Date\\` values ${dateRows};\n\n        create table \\`Workflow\\` (\n            Id int,\n            Resolved bit,\n            WorkflowState varchar(30),\n            SourceOfError varchar(30),\n            FixedByCustomer bit\n        );\n\n        insert into \\`Workflow\\` values ${workflowRows};\n\n        create table \\`Category\\` (\n            Id int,\n            Label varchar(30)\n        );\n\n        insert into \\`Category\\` values\n            (1, 'Crashed'),\n            (2, 'Data Loss'),\n            (3, 'Security Breach'),\n            (4, 'Off By One'),\n            (5, 'Slow'),\n            (6, 'StackOverflow');\n\n        create table \\`Coder\\` (\n            Id int,\n            FullName varchar(30)\n        );\n    \n        insert into \\`Coder\\` values\n                (1, 'Sam'),\n                (2, 'Alex'),\n                (3, 'Drew'),\n                (4, 'Taylor'),\n                (5, 'Parker'),\n                (6, 'Austin');\n\n        create table \\`Customer\\` (\n            Id int,\n            CustomerName varchar(30)\n        );\n    \n        insert into \\`Customer\\` values\n                (1, 'Pies LLC'),\n                (2, 'Buns, Inc.'),\n                (3, 'Hats-R-Us'),\n                (4, 'Silence'),\n                (5, 'Egypt'),\n                (6, 'Affordability');\n\n        create table \\`CategoryCombination\\` (\n            Id int,\n            StackOverflow bit,\n            Slow bit,\n            OffByOne bit,\n            SecurityBreach bit,\n            DataLoss bit,\n            Crashed bit\n        );\n\n        insert into \\`CategoryCombination\\` values ${categoryCombinationsRows};\n\n        create table \\`Bug\\` (\n            Id int,\n            WorkflowId int,\n            CustomerId int,\n            ReportedDate date,\n            ResolvedDate date,\n            AssignedDate date,\n            CategoryCombinationId int,\n            AssignedCoderId int,\n            ResolvedCoderId int\n        );\n\n        insert into \\`Bug\\` values ${bugRows};\n    `;\n\n    db.run(initSql);\n}\n","import { jsonDateParser } from \"json-date-parser\";\nimport { getDb } from \"./database\";\nimport { QueryResultJson, QuerySelectValue, QueryJson } from \"tinybi\";\n\nasync function querySql(sql: string) {\n    \n    const db = await getDb();\n\n    sql = sql.replace(/[[\\]]/g, \"\")\n             .replace(/top\\s+[\\d]+/g, \" \")\n             .replace(/BugTracking\\./g, \"\");\n\n    const started = new Date();\n    const result = JSON.stringify(db.exec(sql));\n    const finished = new Date();\n    console.log(`SQL query took ${finished.getTime() - started.getTime()} ms`);\n    return result;\n}\n\n(window as any).querySql = querySql;\n\nconst blazorReady = new Promise(done => (window as any).notifyBlazorReady = done);\n\nexport async function localFetch(queryJson: QueryJson): Promise<QueryResultJson> {\n\n    await blazorReady;\n\n    const started = new Date();    \n    const json = await DotNet.invokeMethodAsync(\n        \"TinyBI.WasmHost\", \"Query\", JSON.stringify(queryJson)\n    ) as string;    \n    const finished = new Date();\n    console.log(`Blazor + SQL query took ${finished.getTime() - started.getTime()} ms`);\n\n    const parsed = JSON.parse(json, jsonDateParser);\n\n    if (parsed.stackTrace) {\n        console.error(parsed);\n        return { records: [] };\n    }\n\n    if (!parsed[0]) {\n        console.error(parsed);\n        return { records: [] };\n    }\n\n    const columns = parsed[0].columns;\n    const values = parsed[0].values as QuerySelectValue[][];\n    const firstValueIndex = columns.indexOf(\"Value0\");\n    const endOfSelects = firstValueIndex === -1 ? columns.length : firstValueIndex;\n\n    const result: QueryResultJson = {\n        records: values.map(x => ({\n            selected: x.slice(0, endOfSelects),\n            aggregated: x.slice(endOfSelects) as number[]\n        }))\n    };\n    \n    if (parsed[1]) {\n        result.totals = {\n            selected: [],\n            aggregated: parsed[1].values\n        };\n    }\n\n    return result;\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BugReporting } from \"./Reports/BugReporting\";\nimport { VisualProps } from \"./Reports/VisualProps\";\nimport { usePageFilters } from \"tinybi-react\";\nimport { useFilterPane, FilterPane } from \"./FilterPane\";\nimport Chart from \"chart.js\";\nimport { localFetch } from \"./localFetch\";\n\nChart.defaults.global.defaultFontFamily = \"Segoe UI, 'Helvetica', 'Arial', sans-serif\";\nif (Chart.defaults.global.legend && Chart.defaults.global.legend.labels) {\n    Chart.defaults.global.legend.labels.usePointStyle = true;\n}\n\nChart.defaults.global.maintainAspectRatio = false;\n\nconst reports = {\n    \"Bug Tracking\": (f: VisualProps) => <BugReporting {...f} />,    \n}\n\ntype ReportName = keyof typeof reports;\n\nconst reportNames = Object.keys(reports) as ReportName[];\n\nconst defaultReport: ReportName = \"Bug Tracking\";\n\nfunction App() {\n    const [reportName, setReportName] = useState(defaultReport);\n    const pageFilters = usePageFilters();\n    const filterPane = useFilterPane(pageFilters);\n\n    const report = reports[reportName];\n\n    return (\n        <div className=\"reports-site\">\n            <div className=\"list\">\n                {\n                    reportNames.map(n => (\n                        <div key={n}\n                            className={`item ${n === reportName && \"selected\"}`}\n                            onClick={() => setReportName(n)}>{n}</div>\n                    ))\n                }\n            </div>\n            <div className=\"content\">\n                <div className=\"title-bar\">\n                    <div className=\"title\">{filterPane.title}</div>\n                    <div className=\"filters-button\" onClick={filterPane.toggle}>Filters</div>\n                </div>\n                <div className=\"report-with-filters\">\n                    <div className=\"report-itself\" onClick={pageFilters.clearInteraction}>\n                        {report({ fetch: localFetch, pageFilters })}\n                    </div>\n                    <FilterPane filterPane={filterPane} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { getAggregatePropsOnly, getColumnPropsOnly } from \"./queryModel\";\n/**\n * Converts a statically-typed {@link Query} into the {@link QueryJson}\n * format, ready to be sent to your API.\n * @param query\n */\nexport function jsonifyQuery(query) {\n    var select = query.select, others = __rest(query, [\"select\"]);\n    return __assign(__assign({}, others), { select: getColumnPropsOnly(select).map(function (key) { return select[key].name; }), aggregations: getAggregatePropsOnly(select).map(function (key) { return select[key]; }) });\n}\n/**\n * Converts the `QueryRecordJson` for a single record into a strongly-typed record\n * with named properties, using the {@link Query.select} from the query to perform\n * the necessary mapping.\n * @param select The {@link Query.select} property from the query.\n * @param record The record returned from your API.\n */\nexport function expandQueryRecord(select, record) {\n    var result = {};\n    var n = 0;\n    for (var _i = 0, _a = getAggregatePropsOnly(select); _i < _a.length; _i++) {\n        var key = _a[_i];\n        result[key] = record.aggregated[n++];\n    }\n    n = 0;\n    for (var _b = 0, _c = getColumnPropsOnly(select); _b < _c.length; _b++) {\n        var key = _c[_b];\n        result[key] = record.selected[n++];\n    }\n    return result;\n}\n/**\n * Converts the `QueryRecordJson` from the `totals` record into a strongly-typed\n * record named properties for the aggregated values only, using the\n * {@link Query.select} from the query to perform the necessary mapping.\n *\n * @param select The {@link Query.select} property from the query.\n * @param record The {@link QueryResultJson.totals} record returned from your API.\n */\nexport function getAggregateValuesOnly(select, record) {\n    var result = {};\n    var n = 0;\n    for (var _i = 0, _a = getAggregatePropsOnly(select); _i < _a.length; _i++) {\n        var key = _a[_i];\n        result[key] = record.aggregated[n++];\n    }\n    return result;\n}\n/**\n * Converts the payload returned from the API into the statically-typed\n * form appropriate for the query.\n * @param select The {@link Query.select} property from the query.\n * @param result The response payload from the API call.\n */\nexport function expandQueryResult(select, result) {\n    return {\n        records: result.records.map(function (r) { return expandQueryRecord(select, r); }),\n        totals: result.totals && getAggregateValuesOnly(select, result.totals)\n    };\n}\n","var QueryValuesRow = /** @class */ (function () {\n    function QueryValuesRow(values, totals) {\n        this.values = values;\n        this.totals = totals;\n    }\n    QueryValuesRow.prototype.percentage = function (key) {\n        var _a;\n        if (!this.totals)\n            return 0;\n        var rawValue = this.values[key];\n        var total = (_a = this.totals[key]) !== null && _a !== void 0 ? _a : 0;\n        var percent = total === 0 ? 0 : (rawValue / total) * 100;\n        return Math.round(percent * 100) / 100;\n    };\n    return QueryValuesRow;\n}());\nexport { QueryValuesRow };\nvar QueryValuesTotal = /** @class */ (function () {\n    function QueryValuesTotal(totals) {\n        this.values = totals;\n    }\n    QueryValuesTotal.prototype.percentage = function () {\n        return 100;\n    };\n    return QueryValuesTotal;\n}());\nexport { QueryValuesTotal };\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport moment from \"moment\";\nfunction detectDateType(dates) {\n    if (!dates.every(function (x) { return x.date() === 1; })) {\n        return { format: \"ll\", unit: \"days\", incr: 1 };\n    }\n    if (!dates.every(function (x) { return x.month() % 3 === 0; })) {\n        return { format: \"MMM YYYY\", unit: \"months\", incr: 1 };\n    }\n    if (!dates.every(function (x) { return x.month() === 0; })) {\n        return { format: \"[Q]Q YYYY\", unit: \"months\", incr: 3 };\n    }\n    return { format: \"YYYY\", unit: \"years\", incr: 1 };\n}\nexport function smartDates(records, getDate, mapTo) {\n    records = __spreadArrays(records);\n    records.sort(function (x, y) { return moment(getDate(x)).diff(moment(getDate(y))); });\n    var _a = detectDateType(records.map(function (d) { return moment(getDate(d)); })), format = _a.format, unit = _a.unit, incr = _a.incr;\n    var results = [];\n    var latest = undefined;\n    for (var _i = 0, records_1 = records; _i < records_1.length; _i++) {\n        var record = records_1[_i];\n        var current = moment(getDate(record));\n        if (latest) {\n            for (;;) {\n                latest = latest.add(incr, unit);\n                if (latest >= current) {\n                    break;\n                }\n                results.push(mapTo(latest.format(format), undefined));\n            }\n        }\n        results.push(mapTo(current.format(format), record));\n        latest = current;\n    }\n    return results;\n}\n","import { keysOf } from \"./arrayHelpers\";\nimport { QueryColumn } from \"./QueryColumn\";\n/**\n * Returns the names of properties in a query that refer to aggregated columns.\n * The result is an array of strings, but type-constrained to string literal types:\n *\n * ```ts\n * getAggregatePropsOnly({\n *    customer: Customer.Name,\n *    spend: Invoice.Amount.sum()\n * }) // [\"spend\"]\n * ```\n *\n * @param select the `select` object from a query\n */\nexport function getAggregatePropsOnly(select) {\n    var keys = keysOf(select).filter(function (x) { return !(select[x] instanceof QueryColumn); });\n    return keys;\n}\n/**\n * Returns the names of properties in a query that refer to plain columns. The\n * result is an array of strings, but type-constrained to string literal types:\n *\n * ```ts\n * getColumnPropsOnly({\n *    customer: Customer.Name,\n *    spend: Invoice.Amount.sum()\n * }) // [\"customer\"]\n * ```\n *\n * @param select the `select` object from a query\n */\nexport function getColumnPropsOnly(select) {\n    var keys = keysOf(select).filter(function (x) { return select[x] instanceof QueryColumn; });\n    return keys;\n}\n/**\n * Returns the plain column objects referred to in a query, ignoring\n * aggregated columns.\n * @param select the `select` object from a query\n */\nexport function getColumnsOnly(select) {\n    return keysOf(select)\n        .map(function (k) { return select[k]; })\n        .filter(function (x) { return x instanceof QueryColumn; })\n        .map(function (x) { return x; });\n}\n"],"sourceRoot":""}