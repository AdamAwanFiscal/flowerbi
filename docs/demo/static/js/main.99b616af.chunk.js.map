{"version":3,"sources":["../../tinybi/dist/index.js","../../tinybi-react-chartjs/dist/index.js","../../tinybi-react-chartjs/dist/makeClickHandler.js","demoSchema.ts","Reports/dataColours.ts","Reports/ResolvedPerCustomer.tsx","Reports/SourceOfErrors.tsx","Reports/TypesOfError.tsx","Reports/RecoverySummary.tsx","Reports/BugsOverTime.tsx","Reports/BugReporting.tsx","FilterPane.tsx","database.ts","localFetch.ts","App.tsx","serviceWorker.ts","index.tsx","../../tinybi-react-utils/dist/index.js","../../tinybi-react-utils/dist/TinyBIChartBox.js","../../tinybi/dist/arrayHelpers.js","../../tinybi-react/dist/index.js","../../tinybi/dist/queryModel.js","../../tinybi/dist/QueryColumn.js","../../tinybi-react-utils/dist/DropDown.js","../../tinybi-react-utils/dist/Layouts.js","../../tinybi-react-utils/dist/TinyBIValueBox.js","../../tinybi-react/dist/TinyBITable.js","../../tinybi/dist/executeQuery.js","../../tinybi/dist/QueryJson.js","../../tinybi/dist/QueryValues.js","../../tinybi/dist/smartDates.js","../../tinybi-react/dist/usePageFilters.js","../../tinybi-react/dist/useQuery.js"],"names":["__export","m","p","exports","hasOwnProperty","Object","defineProperty","value","require","tinybi_1","makeClickHandler","id","chartRef","funcOrColumns","pageFilters","func","keys","getColumnsOnly","map","c","i","equalTo","onClick","evt","_a","data","chart","element","getElementAtEvent","_chart","labelIndex","_index","datasetIndex","_datasetIndex","category","labels","legend","datasets","label","getEventData","current","chartInstance","filters","setInteraction","stopPropagation","DateReported","Id","QueryColumn","CalendarYearNumber","FirstDayOfQuarter","FirstDayOfMonth","Workflow","Resolved","WorkflowState","SourceOfError","FixedByCustomer","Customer","CustomerName","CategoryCombination","Crashed","DataLoss","SecurityBreach","OffByOne","Slow","StackOverflow","Bug","WorkflowId","CustomerId","ReportedDate","ResolvedDate","AssignedDate","CategoryCombinationId","AssignedCoderId","ResolvedCoderId","dataColours","ResolvedPerCustomer","fetch","query","select","customer","bugCount","count","getFilters","ref","useRef","result","useQuery","clickHandler","title","options","records","x","backgroundColor","SourceOfErrors","sourceOfError","categories","TypesOfError","categoryBits","workflowState","distinctWorkflowStates","distinct","r","bugCountByStateAndCategory","flatMap","keysOf","bit","filter","reduce","l","bugCountByCategory","sort","y","orderedCategories","scales","xAxes","stacked","yAxes","ticks","beginAtZero","colour","find","RecoverySummary","fixedByCustomer","state","resolvedBugCount","totals","columns","State","d","values","Count","percentage","dateGroupings","BugsOverTime","dateGrouping","useDropDown","period","selected","countAllCauses","countHackers","orderBy","ascending","datedRecords","smartDates","dateLabel","record","hackers","type","lineTension","borderColor","allCauses","className","BugReporting","props","sizes","toDateString","toISOString","substr","useDateInput","init","useState","editing","setEditing","applied","setApplied","dirty","onChange","event","target","apply","initCounter","useFilterPane","visible","setVisible","from","Date","setFullYear","getFullYear","lastYear","to","dates","forEach","setGlobal","greaterThanOrEqualTo","lessThanOrEqualTo","some","toggle","FilterPane","filterPane","db","a","publicUrl","window","sitePublicUrl","initSqlJs","locateFile","f","SQL","setupDb","Database","getDb","allocDb","makeRandomDate","setDate","getDate","Math","floor","random","formatDate","moment","format","pick","base","min","sourcesOfError","n","push","dateRows","getMonth","startOfQuarter","startOfMonth","join","workflows","resolved","length","workflowRows","categoryCombinations","b","e","categoryCombinationsRows","bugs","workflow","reported","assigned","catComb","coderAssigned","coderResolved","bugRows","initSql","run","sql","replace","started","JSON","stringify","exec","finished","console","log","getTime","querySql","blazorReady","Promise","done","notifyBlazorReady","localFetch","queryJson","DotNet","invokeMethodAsync","json","parsed","parse","jsonDateParser","stackTrace","error","firstValueIndex","indexOf","endOfSelects","slice","aggregated","Chart","defaults","global","defaultFontFamily","usePointStyle","maintainAspectRatio","reports","reportNames","App","reportName","setReportName","usePageFilters","report","key","clearInteraction","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","__importDefault","this","mod","__esModule","react_1","TinyBIChartBox","children","default","createElement","arr","_i","arr_1","item","obj","arrayHelpers_1","QueryColumn_1","getAggregatePropsOnly","getColumnPropsOnly","k","name","prototype","aggregation","aggregationType","column","function","sum","operator","descending","notEqualTo","greaterThan","lessThan","react_2","selectedLabel","setSelectedLabel","_b","DropDown","__assign","assign","t","s","arguments","call","__rest","getOwnPropertySymbols","propertyIsEnumerable","LayoutElement","_c","dimension","otherProps","nonNullSizes","totalSize","Children","_","unit","style","display","flexDirection","width","height","child","Row","Column","Layout","TinyBIChartBox_1","TinyBIValueBox","renderCell","def","align","TinyBITable","QueryValuesRow","QueryValuesTotal","queryModel_1","expandQueryRecord","getAggregateValuesOnly","jsonifyQuery","others","aggregations","expandQueryResult","rawValue","total","percent","round","__spreadArrays","il","Array","j","jl","moment_1","mapTo","diff","every","date","month","incr","results","latest","undefined","records_1","add","clearedState","interactions","interactionKey","set","clearGlobal","clearAll","concat","json_stable_stringify_1","setResult","useEffect"],"mappings":"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","file":"static/js/main.99b616af.chunk.js","sourcesContent":["\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./arrayHelpers\"));\n__export(require(\"./executeQuery\"));\n__export(require(\"./QueryColumn\"));\n__export(require(\"./QueryJson\"));\n__export(require(\"./queryModel\"));\n__export(require(\"./QueryValues\"));\n__export(require(\"./smartDates\"));\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./makeClickHandler\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tinybi_1 = require(\"tinybi\");\nfunction getEventData(evt, chart) {\n    if (chart && evt) {\n        var element = chart.getElementAtEvent(evt)[0];\n        if (element) {\n            var data = element._chart.data;\n            var labelIndex = element._index;\n            var datasetIndex = element._datasetIndex;\n            return {\n                category: data.labels[labelIndex],\n                legend: data.datasets[datasetIndex].label,\n            };\n        }\n    }\n}\nfunction makeClickHandler(id, chartRef, funcOrColumns, pageFilters) {\n    var func = typeof funcOrColumns === \"function\" ? funcOrColumns :\n        function (keys) { return tinybi_1.getColumnsOnly(funcOrColumns).map(function (c, i) { return c.equalTo(keys[i]); }); };\n    return {\n        onClick: function (evt) {\n            var _a;\n            var data = getEventData(evt, (_a = chartRef.current) === null || _a === void 0 ? void 0 : _a.chartInstance);\n            if (data && pageFilters) {\n                var filters = func([data.category, data.legend]);\n                if (filters) {\n                    pageFilters.setInteraction(id, filters);\n                    evt === null || evt === void 0 ? void 0 : evt.stopPropagation();\n                }\n            }\n        }\n    };\n}\nexports.makeClickHandler = makeClickHandler;\n","import { QueryColumn } from \"tinybi\";\n\nexport const DateReported = {\n    Id: new QueryColumn<Date>(\"DateReported.Id\"),\n    CalendarYearNumber: new QueryColumn<number>(\"DateReported.CalendarYearNumber\"),\n    FirstDayOfQuarter: new QueryColumn<Date>(\"DateReported.FirstDayOfQuarter\"),\n    FirstDayOfMonth: new QueryColumn<Date>(\"DateReported.FirstDayOfMonth\"),\n};\n\nexport const DateResolved = {\n    Id: new QueryColumn<Date>(\"DateResolved.Id\"),\n    CalendarYearNumber: new QueryColumn<number>(\"DateResolved.CalendarYearNumber\"),\n    FirstDayOfQuarter: new QueryColumn<Date>(\"DateResolved.FirstDayOfQuarter\"),\n    FirstDayOfMonth: new QueryColumn<Date>(\"DateResolved.FirstDayOfMonth\"),\n};\n\nexport const DateAssigned = {\n    Id: new QueryColumn<Date>(\"DateAssigned.Id\"),\n    CalendarYearNumber: new QueryColumn<number>(\"DateAssigned.CalendarYearNumber\"),\n    FirstDayOfQuarter: new QueryColumn<Date>(\"DateAssigned.FirstDayOfQuarter\"),\n    FirstDayOfMonth: new QueryColumn<Date>(\"DateAssigned.FirstDayOfMonth\"),\n};\n\nexport const Workflow = {\n    Id: new QueryColumn<number>(\"Workflow.Id\"),\n    Resolved: new QueryColumn<boolean>(\"Workflow.Resolved\"),\n    WorkflowState: new QueryColumn<string>(\"Workflow.WorkflowState\"),\n    SourceOfError: new QueryColumn<string>(\"Workflow.SourceOfError\"),\n    FixedByCustomer: new QueryColumn<boolean>(\"Workflow.FixedByCustomer\"),\n};\n\nexport const Category = {\n    Id: new QueryColumn<number>(\"Category.Id\"),\n    Label: new QueryColumn<string>(\"Category.Label\"),\n};\n\nexport const Customer = {\n    Id: new QueryColumn<number>(\"Customer.Id\"),\n    CustomerName: new QueryColumn<string>(\"Customer.CustomerName\"),\n};\n\nexport const CoderAssigned = {\n    Id: new QueryColumn<number>(\"CoderAssigned.Id\"),\n    FullName: new QueryColumn<string>(\"CoderAssigned.FullName\"),\n};\n\nexport const CoderResolved = {\n    Id: new QueryColumn<number>(\"CoderResolved.Id\"),\n    FullName: new QueryColumn<string>(\"CoderResolved.FullName\"),\n};\n\nexport const CategoryCombination = {\n    Id: new QueryColumn<number>(\"CategoryCombination.Id\"),\n    Crashed: new QueryColumn<boolean>(\"CategoryCombination.Crashed\"),\n    DataLoss: new QueryColumn<boolean>(\"CategoryCombination.DataLoss\"),\n    SecurityBreach: new QueryColumn<boolean>(\"CategoryCombination.SecurityBreach\"),\n    OffByOne: new QueryColumn<boolean>(\"CategoryCombination.OffByOne\"),\n    Slow: new QueryColumn<boolean>(\"CategoryCombination.Slow\"),\n    StackOverflow: new QueryColumn<boolean>(\"CategoryCombination.StackOverflow\"),\n};\n\nexport const Bug = {\n    Id: new QueryColumn<number>(\"Bug.Id\"),\n    WorkflowId: new QueryColumn<number>(\"Bug.WorkflowId\"),\n    CustomerId: new QueryColumn<number>(\"Bug.CustomerId\"),\n    ReportedDate: new QueryColumn<Date>(\"Bug.ReportedDate\"),\n    ResolvedDate: new QueryColumn<Date>(\"Bug.ResolvedDate\"),\n    AssignedDate: new QueryColumn<Date>(\"Bug.AssignedDate\"),\n    CategoryCombinationId: new QueryColumn<number>(\"Bug.CategoryCombinationId\"),\n    AssignedCoderId: new QueryColumn<number>(\"Bug.AssignedCoderId\"),\n    ResolvedCoderId: new QueryColumn<number>(\"Bug.ResolvedCoderId\"),\n};\n\n","export const dataColours = [\"#722E85\", \"#CD65D9\", \"#3ED4B0\", \"#F54E7B\", \"#FF7676\", \"#FAD57A\", \"#313345\", \"#b4b2bc\"];\n","import React, { useRef } from \"react\";\nimport { useQuery } from \"tinybi-react\";\nimport { TinyBIChartBox } from \"tinybi-react-utils\";\nimport { Customer, Bug, Workflow } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { Pie } from \"react-chartjs-2\";\nimport { VisualProps } from \"./VisualProps\";\nimport { makeClickHandler } from \"tinybi-react-chartjs\";\n\nexport function ResolvedPerCustomer({ pageFilters, fetch }: VisualProps) {\n\n    const id = \"ResolvedPerCustomer\";\n\n    const query = {\n        select: {\n            customer: Customer.CustomerName,\n            bugCount: Bug.Id.count()\n        },\n        filters: [\n            Workflow.Resolved.equalTo(true),\n            ...pageFilters.getFilters(id)\n        ],\n    };\n\n    const ref = useRef<Pie>(null);\n    const result = useQuery(fetch, query);\n    const clickHandler = makeClickHandler(id, ref, query.select, pageFilters);\n    \n    return (\n        <TinyBIChartBox id={id} title=\"Resolved Per Customer\">\n            <Pie\n                ref={ref}\n                options={{ ...clickHandler }}\n                data={{\n                    labels: result.records.map(x => x.customer),\n                    datasets: [{\n                        label: \"Count\",\n                        backgroundColor: dataColours,\n                        data: result.records.map(x => x.bugCount)\n                    }]\n                }}\n            />\n        </TinyBIChartBox>        \n    );\n}\n","import React, { useRef } from \"react\";\nimport { useQuery } from \"tinybi-react\";\nimport { TinyBIChartBox } from \"tinybi-react-utils\";\nimport { Bug, Workflow } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { Pie } from \"react-chartjs-2\";\nimport { VisualProps } from \"./VisualProps\";\nimport { makeClickHandler } from \"tinybi-react-chartjs\";\n\nconst id = \"SourceOfErrors\";\n\nexport function SourceOfErrors({ pageFilters, fetch }: VisualProps) {\n\n    const query = {\n        select: {\n            sourceOfError: Workflow.SourceOfError,\n            bugCount: Bug.Id.count()\n        },\n        filters: [\n            Workflow.Resolved.equalTo(true),\n            ...pageFilters.getFilters(id)\n        ],\n    };\n\n    const result = useQuery(fetch, query);\n\n    const ref = useRef<Pie>(null);\n    const clickHandler = makeClickHandler(id, ref, query.select, pageFilters);\n    \n    return (\n        <TinyBIChartBox id={id} title=\"Source Of Errors\">\n            <Pie\n                ref={ref}\n                options={{ ...clickHandler }} \n                data={{\n                    labels: result.records.map(x => x.sourceOfError),\n                    datasets: [{\n                        label: \"Count\",\n                        backgroundColor: dataColours,\n                        data: result.records.map(x => x.bugCount)\n                    }]\n                }}\n            />\n        </TinyBIChartBox>\n    );\n}\n","import React, { useRef } from \"react\";\nimport { QueryColumn, distinct, keysOf } from \"tinybi\";\nimport { useQuery } from \"tinybi-react\";\nimport { TinyBIChartBox } from \"tinybi-react-utils\";\nimport { makeClickHandler } from \"tinybi-react-chartjs\";\nimport { Bug, Workflow, CategoryCombination } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { Bar } from \"react-chartjs-2\";\nimport { VisualProps } from \"./VisualProps\";\n\nconst categoriesRaw = {\n    \"Crashed\": CategoryCombination.Crashed,\n    \"Data loss\": CategoryCombination.DataLoss,\n    \"Security breach\": CategoryCombination.SecurityBreach,\n    \"Off by one\": CategoryCombination.OffByOne,\n    \"Slow\": CategoryCombination.Slow,\n    \"Stack overflow\": CategoryCombination.StackOverflow,\n};\n\ntype CategoryLabel = keyof typeof categoriesRaw;\n\nconst categories: Record<CategoryLabel, QueryColumn<boolean>> = categoriesRaw;\n\nexport function TypesOfError({ pageFilters, fetch }: VisualProps) {\n\n    const id = \"TypesOfError\";\n\n    // In the query we ask for the bits describing the categories applicable to each bug\n    const query = {\n        select: {\n            categoryBits: Bug.CategoryCombinationId, \n            workflowState: Workflow.WorkflowState,\n            bugCount: Bug.Id.count()\n        },\n        filters: [\n            Workflow.Resolved.equalTo(true),\n            ...pageFilters.getFilters(id)\n        ]\n    };\n\n    const data = useQuery(fetch, query);\n\n    const chart = useRef<Bar>(null);\n\n    const clickHandler = makeClickHandler(id, chart, \n        keys => [\n            Workflow.WorkflowState.equalTo(keys[1]), \n            categories[keys[0] as CategoryLabel].equalTo(true)\n        ],\n        pageFilters\n    );\n\n    const distinctWorkflowStates = distinct(data.records.map(r => r.workflowState));\n\n    // Convert the bit combinations into category labels\n    const bugCountByStateAndCategory = distinctWorkflowStates.flatMap(workflowState =>\n        keysOf(categories).map((category, bit) => ({\n            workflowState,\n            category,\n            bugCount: data.records\n                .filter(r => r.workflowState === workflowState && r.categoryBits & (1 << bit))\n                .map(r => r.bugCount)\n                .reduce((l, r) => l + r, 0)\n        })));\n\n    // Sum up the categories (full height of each bar)\n    const bugCountByCategory = keysOf(categories).map(category => ({\n        category,\n        bugCount: bugCountByStateAndCategory\n            .filter(r => r.category === category)\n            .map(r => r.bugCount)\n            .reduce((l, r) => l + r, 0)\n    }));\n\n    // Sort by bugCount descending so tallest bar is first\n    bugCountByCategory.sort((x, y) => y.bugCount - x.bugCount);\n\n    // Omit empty categories\n    const orderedCategories = bugCountByCategory.filter(c => c.bugCount > 0).map(c => c.category);\n\n    return (\n        <TinyBIChartBox id={id} title=\"Types Of Error\">\n            <Bar \n                ref={chart}\n                options={{ \n                    scales: {\n                        xAxes: [ { stacked: true } ],\n                        yAxes: [ { stacked: true, ticks: { beginAtZero: true } } ]\n                    },\n                    ...clickHandler\n                }}\n                data={{\n                    labels: orderedCategories,\n                    datasets: distinctWorkflowStates.map((workflowState, colour) => ({\n                        label: workflowState,\n                        data: orderedCategories.map(category =>\n                            bugCountByStateAndCategory.find(r => r.workflowState === workflowState && \n                                                                 r.category === category)?.bugCount ?? 0),\n                        backgroundColor: dataColours[colour]\n                    }))\n                }}\n            />\n        </TinyBIChartBox>\n    )\n}\n","import React from \"react\";\nimport { TinyBITable, useQuery } from \"tinybi-react\";\nimport { TinyBIChartBox } from \"tinybi-react-utils\";\nimport { Bug, Workflow } from \"../demoSchema\";\nimport { VisualProps } from \"./VisualProps\";\n\nexport interface RecoverySummaryProps extends VisualProps {\n    fixedByCustomer: boolean;\n    title: string;\n}\n\nexport function RecoverySummary({ pageFilters, fixedByCustomer, title, fetch }: RecoverySummaryProps) {\n\n    const data = useQuery(fetch, {\n        select: {\n            state: Workflow.WorkflowState,\n            bugCount: Bug.Id.count(),\n            resolvedBugCount: Bug.Id.count([\n                Workflow.Resolved.equalTo(true)\n            ])\n        },\n        filters: [\n            Workflow.FixedByCustomer.equalTo(fixedByCustomer),\n            ...pageFilters.getFilters(\"\"),\n        ],\n        totals: true\n    });\n\n    return (\n        <TinyBIChartBox title={title}>\n            <TinyBITable\n                data={data}\n                columns={{\n                    State: (d) => d.values.state ?? \"Total\",\n                    Count: (d) => [`${d.values.bugCount}`, \"right\"],\n                    \"% of Count\": (d) => [`${d.percentage(\"resolvedBugCount\")}%`, \"right\"],\n                }} \n            />\n        </TinyBIChartBox>\n    );\n}\n","import React, { useRef } from \"react\";\nimport { QueryColumn, smartDates } from \"tinybi\";\nimport { useQuery } from \"tinybi-react\";\nimport { useDropDown, DropDown, TinyBIChartBox } from \"tinybi-react-utils\";\nimport { Bug, Workflow, DateReported } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { ChartDataSets, ChartOptions, ChartData } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { VisualProps } from \"./VisualProps\";\nimport { makeClickHandler } from \"tinybi-react-chartjs\";\n\nconst dateGroupings = [\n    { label: \"Month\", value: DateReported.FirstDayOfMonth },\n    { label: \"Quarter\", value: DateReported.FirstDayOfQuarter },\n    { label: \"Year\", value: DateReported.CalendarYearNumber }\n]\n\nexport function BugsOverTime({ pageFilters, fetch }: VisualProps) {\n\n    const id = \"BugsOverTime\";\n\n    const dateGrouping = useDropDown<QueryColumn<Date|number>>(dateGroupings);\n\n    const query = {\n        select: {\n            period: dateGrouping.selected,        \n            countAllCauses: Bug.Id.count(),\n            countHackers: Bug.Id.count([\n                Workflow.SourceOfError.equalTo(\"Hackers\")\n            ]),\n        },\n        filters: [\n            Workflow.Resolved.equalTo(true),\n            ...pageFilters.getFilters(id)\n        ],\n        orderBy: [dateGrouping.selected.ascending()],        \n    };\n\n    const result = useQuery(fetch, query);\n\n    const datedRecords = smartDates(result.records, r => r.period, (dateLabel, record) => ({\n        dateLabel,\n        countAllCauses: 0,\n        countHackers: 0,\n        ...record \n    }));\n\n    const ref = useRef<Bar>(null);\n\n    const clickHandler = makeClickHandler(id, ref, query.select!, pageFilters);\n    \n    const hackers: ChartDataSets = {\n        type: \"line\",\n        data: datedRecords.map(r => r.countHackers ?? 0),\n        label: \"Hackers\",\n        backgroundColor: \"transparent\",\n        lineTension: 0,\n        borderColor: dataColours[1],\n    };\n    \n    const allCauses: ChartDataSets = {\n        data: datedRecords.map(r => r.countAllCauses),\n        label: \"All Causes\",\n        backgroundColor: dataColours[0]\n    };\n    \n    const data: ChartData = {\n        labels: datedRecords.map(x => x.dateLabel),\n        datasets: [hackers, allCauses],\n    };\n\n    const options: ChartOptions = {\n        ...clickHandler,\n        scales: {\n            yAxes: [{ ticks: { beginAtZero: true } }]\n        }\n    };\n\n    return (\n        <TinyBIChartBox id={id} title=\"Bugs Over Time\">\n            <div className=\"chart-with-dropdown\">\n                <div className=\"content\">\n                    <Bar ref={ref} options={options} data={data} />\n                </div>            \n                <div className=\"dropdown\">\n                    <span>By </span><DropDown {...dateGrouping} />\n                </div>\n            </div>            \n        </TinyBIChartBox>\n    );\n}\n","import React from \"react\";\nimport { Layout, Column, Row } from \"tinybi-react-utils\";\nimport { VisualProps } from \"./VisualProps\";\nimport { ResolvedPerCustomer } from \"./ResolvedPerCustomer\";\nimport { SourceOfErrors } from \"./SourceOfErrors\";\nimport { TypesOfError } from \"./TypesOfError\";\nimport { RecoverySummary } from \"./RecoverySummary\";\nimport { BugsOverTime } from \"./BugsOverTime\";\n\nexport function BugReporting(props: VisualProps) {\n    return (\n        <Layout>\n            <Column>\n                <Row sizes={[1, 1, 2]}>\n                    <ResolvedPerCustomer {...props} />\n                    <SourceOfErrors {...props} />\n                    <TypesOfError {...props} />\n                </Row>\n                <Row>\n                    <BugsOverTime {...props} />\n                    <Column>\n                        <RecoverySummary {...props} title=\"Progress Summary\" fixedByCustomer={false} />\n                        <RecoverySummary {...props} title=\"Fixed By Customers\" fixedByCustomer={true} />\n                    </Column>\n                </Row>\n            </Column>\n        </Layout>\n    );\n}\n","import React, { useState } from \"react\";\nimport { DateReported } from \"./demoSchema\";\nimport { PageFilters } from \"tinybi-react\";\n\nfunction lastYear() {\n    const d = new Date();\n    d.setFullYear(d.getFullYear() - 5);\n    return d;\n}\n\nfunction toDateString(d: Date) {\n    return d.toISOString().substr(0, 10);\n}\n\nfunction useDateInput(init: Date) {\n    const [editing, setEditing] = useState(toDateString(init));\n    const [applied, setApplied] = useState(toDateString(init));\n\n    function apply() {\n        setApplied(editing);\n    }\n\n    function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        setEditing(event.target.value);\n    }\n\n    return {\n        editing,\n        applied,\n        dirty: editing !== applied,\n        onChange,\n        apply        \n    };\n}\n\nlet initCounter = 0;\n\nexport function useFilterPane(pageFilters: PageFilters) {\n    const [visible, setVisible] = useState(false);\n    const from = useDateInput(lastYear());\n    const to = useDateInput(new Date());    \n    const dates = [from, to];\n\n    function toggle() {\n        setVisible(!visible);\n    }\n\n    function apply() {\n        dates.forEach(d => d.apply());\n        pageFilters.setGlobal([\n            DateReported.Id.greaterThanOrEqualTo(new Date(from.editing)),\n            DateReported.Id.lessThanOrEqualTo(new Date(to.editing))\n        ]);\n    }\n\n    const [init] = useState(++initCounter);\n    if (init === initCounter) {\n        apply();\n    }\n\n    const title = `Entered date from ${from.applied} to ${to.applied}`;\n\n    const dirty = dates.some(d => d.dirty);\n\n    return { visible, toggle, from, to, dirty, title, apply };\n}\n\nexport interface FilterPaneProps {\n    filterPane: ReturnType<typeof useFilterPane>; \n}\n\nexport function FilterPane({ filterPane: { visible, from, to, apply, dirty } }: FilterPaneProps) {\n    return (\n        <div className={`filter-pane ${visible && \"visible\"}`}>\n            <div>From</div>\n            <input type=\"date\" value={from.editing} onChange={from.onChange}/>\n            <div>To</div>\n            <input type=\"date\" value={to.editing} onChange={to.onChange}/>\n            <div className={`button ${dirty && \"enabled\"}`} onClick={apply}>Update</div>                 \n        </div>\n    )\n}\n","import moment from \"moment\";\n\nasync function allocDb() {\n    const publicUrl = (window as any).sitePublicUrl;\n\n    const SQL = await initSqlJs({\n        locateFile(f) {\n            return `${publicUrl}/${f}`;\n        }\n    });\n\n    const db = new SQL.Database();\n    setupDb(db);\n    return db;\n}\n\nlet db: ReturnType<typeof allocDb> | undefined;\n\ntype Await<T> = T extends {\n    then(onfulfilled?: (value: infer U) => unknown): unknown;\n} ? U : T;\n\nexport type Database = NonNullable<Await<typeof db>>;\n\nexport function getDb(): Promise<Database> {\n    if (!db) {\n        db = allocDb();\n    }\n    return db;\n}\n\nfunction makeRandomDate() {\n    const d = new Date(2018, 0, 1);\n    d.setDate(d.getDate() + Math.floor(Math.random() * 800));\n    return d;\n}\n\nfunction formatDate(d: Date) {\n    return moment(d).format(\"YYYY-MM-DD\");\n}\n\nfunction startOfQuarter(d: Date) {\n    const m = Math.floor(d.getMonth() / 3) * 3;\n    return formatDate(new Date(d.getFullYear(), m, 1));\n}\n\nfunction startOfMonth(d: Date) {    \n    return formatDate(new Date(d.getFullYear(), d.getMonth(), 1));\n}\n\nfunction pick(count: number, base: number) {\n     return Math.min(count - 1, Math.floor(Math.random() * count)) + base;     \n}\n\nfunction setupDb(db: Database) {\n\n    const workflowStates = [\n        \"Ignored\",\n        \"Prioritised\",\n        \"Assigned\",\n        \"Fixed\",\n        \"AsDesigned\"\n    ];\n\n    const sourcesOfError = [\n        \"Design flaw\",\n        \"Hackers\",\n        \"Honest mistake\"\n    ];\n\n    const dates: Date[] = [];\n    for (let n = 0; n < 50; n++) {\n        dates.push(makeRandomDate());\n    }\n\n    const dateRows = dates.map(x => `\n        ('${formatDate(x)}', ${x.getFullYear()}, '${startOfQuarter(x)}', '${startOfMonth(x)}')`).join(\",\");\n\n    const workflows: string[] = [];\n\n    for (const workflowState of workflowStates) {\n        for (const sourceOfError of sourcesOfError) {\n            for (const resolved of [0, 1]) {\n                for (const fixedByCustomer of [0, 1]) {\n                    workflows.push(`\n                        (${workflows.length + 1}, ${resolved}, '${workflowState}', '${sourceOfError}', ${fixedByCustomer})`);\n                }\n            }\n        }\n    }\n\n    const workflowRows = workflows.join(\",\");\n\n    const categoryCombinations: string[] = [];\n\n    for (const a of [0, 1]) {\n        for (const b of [0, 1]) {\n            for (const c of [0, 1]) {\n                for (const d of [0, 1]) {\n                    for (const e of [0, 1]) {\n                        for (const f of [0, 1]) {\n                            categoryCombinations.push(`\n                                (${categoryCombinations.length}, ${a}, ${b}, ${c}, ${d}, ${e}, ${f})`);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    const categoryCombinationsRows = categoryCombinations.join(\",\");\n\n    const bugs: string[] = [];\n\n    for (var n = 0; n < 100; n++) {\n        const workflow = pick(workflows.length, 1);\n        const customer = pick(6, 1);\n        const reported = formatDate(dates[pick(dates.length, 0)]);\n        const resolved = formatDate(dates[pick(dates.length, 0)]);\n        const assigned = formatDate(dates[pick(dates.length, 0)]);\n        const catComb = pick(categoryCombinations.length, 1);\n        const coderAssigned = pick(6, 1);\n        const coderResolved = pick(6, 1);\n\n        bugs.push(`\n            (${n + 1}, ${workflow}, ${customer}, '${reported}', '${resolved}', '${assigned}', ${catComb}, ${coderAssigned}, ${coderResolved})`);\n    }\n\n    const bugRows = bugs.join(\",\");\n\n    const initSql = `\n        create table \\`Date\\` (\n            Id date,\n            CalendarYearNumber smallint,\n            FirstDayOfQuarter date,\n            FirstDayOfMonth date\n        );\n\n        insert into \\`Date\\` values ${dateRows};\n\n        create table \\`Workflow\\` (\n            Id int,\n            Resolved bit,\n            WorkflowState varchar(30),\n            SourceOfError varchar(30),\n            FixedByCustomer bit\n        );\n\n        insert into \\`Workflow\\` values ${workflowRows};\n\n        create table \\`Category\\` (\n            Id int,\n            Label varchar(30)\n        );\n\n        insert into \\`Category\\` values\n            (1, 'Crashed'),\n            (2, 'Data Loss'),\n            (3, 'Security Breach'),\n            (4, 'Off By One'),\n            (5, 'Slow'),\n            (6, 'StackOverflow');\n\n        create table \\`Coder\\` (\n            Id int,\n            FullName varchar(30)\n        );\n    \n        insert into \\`Coder\\` values\n                (1, 'Sam'),\n                (2, 'Alex'),\n                (3, 'Drew'),\n                (4, 'Taylor'),\n                (5, 'Parker'),\n                (6, 'Austin');\n\n        create table \\`Customer\\` (\n            Id int,\n            CustomerName varchar(30)\n        );\n    \n        insert into \\`Customer\\` values\n                (1, 'Pies LLC'),\n                (2, 'Buns, Inc.'),\n                (3, 'Hats-R-Us'),\n                (4, 'Silence'),\n                (5, 'Egypt'),\n                (6, 'Affordability');\n\n        create table \\`CategoryCombination\\` (\n            Id int,\n            StackOverflow bit,\n            Slow bit,\n            OffByOne bit,\n            SecurityBreach bit,\n            DataLoss bit,\n            Crashed bit\n        );\n\n        insert into \\`CategoryCombination\\` values ${categoryCombinationsRows};\n\n        create table \\`Bug\\` (\n            Id int,\n            WorkflowId int,\n            CustomerId int,\n            ReportedDate date,\n            ResolvedDate date,\n            AssignedDate date,\n            CategoryCombinationId int,\n            AssignedCoderId int,\n            ResolvedCoderId int\n        );\n\n        insert into \\`Bug\\` values ${bugRows};\n    `;\n\n    db.run(initSql);\n}\n","import { jsonDateParser } from \"json-date-parser\";\nimport { getDb } from \"./database\";\nimport { QueryResultJson, QuerySelectValue, QueryJson } from \"tinybi\";\n\nasync function querySql(sql: string) {\n    \n    const db = await getDb();\n\n    sql = sql.replace(/[[\\]]/g, \"\")\n             .replace(/offset\\s+([\\d]+)\\s+rows\\s+fetch\\s+next\\s+([\\d]+)\\s+rows\\s+only/g, \n                      \"limit $2 offset $1\")\n             .replace(/BugTracking\\./g, \"\");\n\n    const started = new Date();\n    const result = JSON.stringify(db.exec(sql));\n    const finished = new Date();\n    console.log(`SQL query took ${finished.getTime() - started.getTime()} ms`);\n    return result;\n}\n\n(window as any).querySql = querySql;\n\nconst blazorReady = new Promise(done => (window as any).notifyBlazorReady = done);\n\nexport async function localFetch(queryJson: QueryJson): Promise<QueryResultJson> {\n\n    await blazorReady;\n\n    const started = new Date();    \n    const json = await DotNet.invokeMethodAsync(\n        \"TinyBI.WasmHost\", \"Query\", JSON.stringify(queryJson)\n    ) as string;    \n    const finished = new Date();\n    console.log(`Blazor + SQL query took ${finished.getTime() - started.getTime()} ms`);\n\n    const parsed = JSON.parse(json, jsonDateParser);\n\n    if (parsed.stackTrace) {\n        console.error(parsed);\n        return { records: [] };\n    }\n\n    if (!parsed[0]) {\n        console.error(parsed);\n        return { records: [] };\n    }\n\n    const columns = parsed[0].columns;\n    const values = parsed[0].values as QuerySelectValue[][];\n    const firstValueIndex = columns.indexOf(\"Value0\");\n    const endOfSelects = firstValueIndex === -1 ? columns.length : firstValueIndex;\n\n    const result: QueryResultJson = {\n        records: values.map(x => ({\n            selected: x.slice(0, endOfSelects),\n            aggregated: x.slice(endOfSelects) as number[]\n        }))\n    };\n    \n    if (parsed[1]) {\n        result.totals = {\n            selected: [],\n            aggregated: parsed[1].values\n        };\n    }\n\n    return result;\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BugReporting } from \"./Reports/BugReporting\";\nimport { VisualProps } from \"./Reports/VisualProps\";\nimport { usePageFilters } from \"tinybi-react\";\nimport { useFilterPane, FilterPane } from \"./FilterPane\";\nimport Chart from \"chart.js\";\nimport { localFetch } from \"./localFetch\";\n\nChart.defaults.global.defaultFontFamily = \"Segoe UI, 'Helvetica', 'Arial', sans-serif\";\nif (Chart.defaults.global.legend && Chart.defaults.global.legend.labels) {\n    Chart.defaults.global.legend.labels.usePointStyle = true;\n}\n\nChart.defaults.global.maintainAspectRatio = false;\n\nconst reports = {\n    \"Bug Tracking\": (f: VisualProps) => <BugReporting {...f} />,    \n}\n\ntype ReportName = keyof typeof reports;\n\nconst reportNames = Object.keys(reports) as ReportName[];\n\nconst defaultReport: ReportName = \"Bug Tracking\";\n\nfunction App() {\n    const [reportName, setReportName] = useState(defaultReport);\n    const pageFilters = usePageFilters();\n    const filterPane = useFilterPane(pageFilters);\n\n    const report = reports[reportName];\n\n    return (\n        <div className=\"reports-site\">\n            <div className=\"list\">\n                {\n                    reportNames.map(n => (\n                        <div key={n}\n                            className={`item ${n === reportName && \"selected\"}`}\n                            onClick={() => setReportName(n)}>{n}</div>\n                    ))\n                }\n            </div>\n            <div className=\"content\">\n                <div className=\"title-bar\">\n                    <div className=\"title\">{filterPane.title}</div>\n                    <div className=\"filters-button\" onClick={filterPane.toggle}>Filters</div>\n                </div>\n                <div className=\"report-with-filters\">\n                    <div className=\"report-itself\" onClick={pageFilters.clearInteraction}>\n                        {report({ fetch: localFetch, pageFilters })}\n                    </div>\n                    <FilterPane filterPane={filterPane} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./DropDown\"));\n__export(require(\"./Layouts\"));\n__export(require(\"./TinyBIChartBox\"));\n__export(require(\"./TinyBIValueBox\"));\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nfunction TinyBIChartBox(_a) {\n    var id = _a.id, title = _a.title, children = _a.children;\n    return (react_1.default.createElement(\"div\", { className: \"chart-box\", id: id },\n        react_1.default.createElement(\"div\", { className: \"title\" }, title),\n        react_1.default.createElement(\"div\", { className: \"chart\" }, children)));\n}\nexports.TinyBIChartBox = TinyBIChartBox;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns the distinct (unique) values from an array. The comparison\n * method is very simplistic: all values are converted to strings\n * before comparison.\n * @param arr\n */\nfunction distinct(arr) {\n    var map = {};\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n        var item = arr_1[_i];\n        map[\"\" + item] = item;\n    }\n    return Object.values(map);\n}\nexports.distinct = distinct;\n/**\n * Returns the names of properties (i.e. the keys) in an object, statically\n * typed so each has the string literal type of one of the properties. This\n * is not always correct, because the type will include properties inherited\n * from the prototype, where as the values returned at runtime will never\n * include inherited properties. But it's a useful approximation in situations\n * where prototype inheritance can be ignored.\n *\n * @param obj The object to obtain keys from.\n */\nfunction keysOf(obj) {\n    return Object.keys(obj);\n}\nexports.keysOf = keysOf;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./TinyBITable\"));\n__export(require(\"./usePageFilters\"));\n__export(require(\"./useQuery\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar arrayHelpers_1 = require(\"./arrayHelpers\");\nvar QueryColumn_1 = require(\"./QueryColumn\");\n/**\n * Returns the names of properties in a query that refer to aggregated columns.\n * The result is an array of strings, but type-constrained to string literal types:\n *\n * ```ts\n * getAggregatePropsOnly({\n *    customer: Customer.Name,\n *    spend: Invoice.Amount.sum()\n * }) // [\"spend\"]\n * ```\n *\n * @param select the `select` object from a query\n */\nfunction getAggregatePropsOnly(select) {\n    var keys = arrayHelpers_1.keysOf(select).filter(function (x) { return !(select[x] instanceof QueryColumn_1.QueryColumn); });\n    return keys;\n}\nexports.getAggregatePropsOnly = getAggregatePropsOnly;\n/**\n * Returns the names of properties in a query that refer to plain columns. The\n * result is an array of strings, but type-constrained to string literal types:\n *\n * ```ts\n * getColumnPropsOnly({\n *    customer: Customer.Name,\n *    spend: Invoice.Amount.sum()\n * }) // [\"customer\"]\n * ```\n *\n * @param select the `select` object from a query\n */\nfunction getColumnPropsOnly(select) {\n    var keys = arrayHelpers_1.keysOf(select).filter(function (x) { return select[x] instanceof QueryColumn_1.QueryColumn; });\n    return keys;\n}\nexports.getColumnPropsOnly = getColumnPropsOnly;\n/**\n * Returns the plain column objects referred to in a query, ignoring\n * aggregated columns.\n * @param select the `select` object from a query\n */\nfunction getColumnsOnly(select) {\n    return arrayHelpers_1.keysOf(select)\n        .map(function (k) { return select[k]; })\n        .filter(function (x) { return x instanceof QueryColumn_1.QueryColumn; })\n        .map(function (x) { return x; });\n}\nexports.getColumnsOnly = getColumnsOnly;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A column from the schema, with a name and a data type. A whole schema of\n * such declared columns can be auto-generated using the CLI.\n */\nvar QueryColumn = /** @class */ (function () {\n    /**\n     * @param name The name, of the form `table.column`.\n     */\n    function QueryColumn(name) {\n        this.name = name;\n    }\n    QueryColumn.prototype.aggregation = function (aggregationType, filters) {\n        return {\n            column: this.name,\n            function: aggregationType,\n            filters: filters,\n        };\n    };\n    /**\n     * Aggregates the column by counting values.\n     * @param filters Optional filters to apply.\n     */\n    QueryColumn.prototype.count = function (filters) {\n        return this.aggregation(\"Count\", filters);\n    };\n    /**\n     * Aggregates the column by summing values.\n     * @param filters Optional filters to apply.\n     */\n    QueryColumn.prototype.sum = function (filters) {\n        return this.aggregation(\"Sum\", filters);\n    };\n    QueryColumn.prototype.filter = function (operator, value) {\n        return {\n            column: this.name,\n            operator: operator,\n            value: value,\n        };\n    };\n    /**\n     * Sorts by the column in ascending order.\n     */\n    QueryColumn.prototype.ascending = function () {\n        return { column: this.name, descending: false };\n    };\n    /**\n     * Sorts by the column in descending order.\n     */\n    QueryColumn.prototype.descending = function () {\n        return { column: this.name, descending: true };\n    };\n    /**\n     * Produces a filter that requires this column to be equal to some value.\n     */\n    QueryColumn.prototype.equalTo = function (value) {\n        return this.filter(\"=\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be not equal to some value.\n     */\n    QueryColumn.prototype.notEqualTo = function (value) {\n        return this.filter(\"<>\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be greater than to some\n     * value.\n     */\n    QueryColumn.prototype.greaterThan = function (value) {\n        return this.filter(\">\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be less than to some value.\n     */\n    QueryColumn.prototype.lessThan = function (value) {\n        return this.filter(\"<\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be greater than or equal to\n     * some value.\n     */\n    QueryColumn.prototype.greaterThanOrEqualTo = function (value) {\n        return this.filter(\">=\", value);\n    };\n    /**\n     * Produces a filter that requires this column to be less than or equal to\n     * some value.\n     */\n    QueryColumn.prototype.lessThanOrEqualTo = function (value) {\n        return this.filter(\"<=\", value);\n    };\n    return QueryColumn;\n}());\nexports.QueryColumn = QueryColumn;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar react_2 = __importDefault(require(\"react\"));\nfunction useDropDown(options) {\n    var _a = react_1.useState(options[0].label), selectedLabel = _a[0], setSelectedLabel = _a[1];\n    return {\n        options: options.map(function (x) { return x.label; }),\n        value: selectedLabel,\n        onChange: function (e) {\n            setSelectedLabel(e.target.value);\n        },\n        get selected() {\n            var _a, _b;\n            return (_b = (_a = options.find(function (x) { return x.label === selectedLabel; })) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : options[0].value;\n        }\n    };\n}\nexports.useDropDown = useDropDown;\nfunction DropDown(_a) {\n    var options = _a.options, value = _a.value, onChange = _a.onChange;\n    return (react_2.default.createElement(\"select\", { value: value, onChange: onChange }, options.map(function (x) { return react_2.default.createElement(\"option\", { key: x }, x); })));\n}\nexports.DropDown = DropDown;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nfunction LayoutElement(_a) {\n    var _b, _c;\n    var children = _a.children, type = _a.type, dimension = _a.dimension, sizes = _a.sizes, otherProps = __rest(_a, [\"children\", \"type\", \"dimension\", \"sizes\"]);\n    var nonNullSizes = sizes !== null && sizes !== void 0 ? sizes : [];\n    var totalSize = (_c = (_b = react_1.default.Children.map(children, (function (_, i) { var _a; return (_a = nonNullSizes[i]) !== null && _a !== void 0 ? _a : 1; }))) === null || _b === void 0 ? void 0 : _b.reduce(function (l, r) { return l + r; }, 0)) !== null && _c !== void 0 ? _c : 0;\n    var unit = totalSize ? 100 / totalSize : 0;\n    return (react_1.default.createElement(\"div\", __assign({}, otherProps, { style: { display: \"flex\", flexDirection: type, width: \"100%\", height: \"100%\" } }), react_1.default.Children.map(children, (function (child, i) {\n        var _a;\n        var _b;\n        return (react_1.default.createElement(\"div\", { className: \"layout-item\", style: (_a = {}, _a[dimension] = unit * ((_b = nonNullSizes[i]) !== null && _b !== void 0 ? _b : 1) + \"%\", _a) }, child));\n    }))));\n}\nexports.Row = function (props) { return react_1.default.createElement(LayoutElement, __assign({ type: \"row\", dimension: \"width\" }, props)); };\nexports.Column = function (props) { return react_1.default.createElement(LayoutElement, __assign({ type: \"column\", dimension: \"height\" }, props)); };\nfunction Layout(_a) {\n    var children = _a.children, otherProps = __rest(_a, [\"children\"]);\n    return react_1.default.createElement(\"div\", __assign({}, otherProps, { className: \"layout\" }), children);\n}\nexports.Layout = Layout;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar TinyBIChartBox_1 = require(\"./TinyBIChartBox\");\nfunction TinyBIValueBox(_a) {\n    var id = _a.id, value = _a.value, title = _a.title, label = _a.label;\n    return (react_1.default.createElement(TinyBIChartBox_1.TinyBIChartBox, { id: id, title: title },\n        react_1.default.createElement(\"div\", { className: \"value-box\" },\n            react_1.default.createElement(\"div\", { className: \"value\" }, value),\n            react_1.default.createElement(\"div\", { className: \"title\" }, label))));\n}\nexports.TinyBIValueBox = TinyBIValueBox;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar tinybi_1 = require(\"tinybi\");\nfunction renderCell(key, def) {\n    var value = typeof def === \"string\" ? def : def[0];\n    var align = typeof def === \"string\" ? \"left\" : def[1];\n    return (react_1.default.createElement(\"td\", { key: key, className: align }, value));\n}\nfunction TinyBITable(_a) {\n    var data = _a.data, columns = _a.columns;\n    return (react_1.default.createElement(\"table\", null,\n        react_1.default.createElement(\"thead\", null,\n            react_1.default.createElement(\"tr\", null, Object.keys(columns).map(function (column) { return (react_1.default.createElement(\"th\", { key: column }, column)); }))),\n        react_1.default.createElement(\"tbody\", null, data.records.map(function (record, i) {\n            var _a;\n            return (react_1.default.createElement(\"tr\", { key: (_a = JSON.stringify(record.selected)) !== null && _a !== void 0 ? _a : i }, Object.keys(columns).map(function (column) { return renderCell(column, columns[column](new tinybi_1.QueryValuesRow(record, data.totals))); })));\n        })),\n        data.totals && (react_1.default.createElement(\"tfoot\", null,\n            react_1.default.createElement(\"tr\", null, Object.keys(columns).map(function (column) { return renderCell(column, columns[column](new tinybi_1.QueryValuesTotal(data.totals))); }))))));\n}\nexports.TinyBITable = TinyBITable;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryModel_1 = require(\"./queryModel\");\n/**\n * Converts a statically-typed {@link Query} into the {@link QueryJson}\n * format, ready to be sent to your API.\n * @param query\n */\nfunction jsonifyQuery(query) {\n    var select = query.select, others = __rest(query, [\"select\"]);\n    return __assign(__assign({}, others), { select: queryModel_1.getColumnPropsOnly(select).map(function (key) { return select[key].name; }), aggregations: queryModel_1.getAggregatePropsOnly(select).map(function (key) { return select[key]; }) });\n}\nexports.jsonifyQuery = jsonifyQuery;\n/**\n * Converts the `QueryRecordJson` for a single record into a strongly-typed record\n * with named properties, using the {@link Query.select} from the query to perform\n * the necessary mapping.\n * @param select The {@link Query.select} property from the query.\n * @param record The record returned from your API.\n */\nfunction expandQueryRecord(select, record) {\n    var result = {};\n    var n = 0;\n    for (var _i = 0, _a = queryModel_1.getAggregatePropsOnly(select); _i < _a.length; _i++) {\n        var key = _a[_i];\n        result[key] = record.aggregated[n++];\n    }\n    n = 0;\n    for (var _b = 0, _c = queryModel_1.getColumnPropsOnly(select); _b < _c.length; _b++) {\n        var key = _c[_b];\n        result[key] = record.selected[n++];\n    }\n    return result;\n}\nexports.expandQueryRecord = expandQueryRecord;\n/**\n * Converts the `QueryRecordJson` from the `totals` record into a strongly-typed\n * record named properties for the aggregated values only, using the\n * {@link Query.select} from the query to perform the necessary mapping.\n *\n * @param select The {@link Query.select} property from the query.\n * @param record The {@link QueryResultJson.totals} record returned from your API.\n */\nfunction getAggregateValuesOnly(select, record) {\n    var result = {};\n    var n = 0;\n    for (var _i = 0, _a = queryModel_1.getAggregatePropsOnly(select); _i < _a.length; _i++) {\n        var key = _a[_i];\n        result[key] = record.aggregated[n++];\n    }\n    return result;\n}\nexports.getAggregateValuesOnly = getAggregateValuesOnly;\n/**\n * Converts the payload returned from the API into the statically-typed\n * form appropriate for the query.\n * @param select The {@link Query.select} property from the query.\n * @param result The response payload from the API call.\n */\nfunction expandQueryResult(select, result) {\n    return {\n        records: result.records.map(function (r) { return expandQueryRecord(select, r); }),\n        totals: result.totals && getAggregateValuesOnly(select, result.totals)\n    };\n}\nexports.expandQueryResult = expandQueryResult;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryValuesRow = /** @class */ (function () {\n    function QueryValuesRow(values, totals) {\n        this.values = values;\n        this.totals = totals;\n    }\n    QueryValuesRow.prototype.percentage = function (key) {\n        var _a;\n        if (!this.totals)\n            return 0;\n        var rawValue = this.values[key];\n        var total = (_a = this.totals[key]) !== null && _a !== void 0 ? _a : 0;\n        var percent = total === 0 ? 0 : (rawValue / total) * 100;\n        return Math.round(percent * 100) / 100;\n    };\n    return QueryValuesRow;\n}());\nexports.QueryValuesRow = QueryValuesRow;\nvar QueryValuesTotal = /** @class */ (function () {\n    function QueryValuesTotal(totals) {\n        this.values = totals;\n    }\n    QueryValuesTotal.prototype.percentage = function () {\n        return 100;\n    };\n    return QueryValuesTotal;\n}());\nexports.QueryValuesTotal = QueryValuesTotal;\n","\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar moment_1 = __importDefault(require(\"moment\"));\nfunction detectDateType(dates) {\n    if (!dates.every(function (x) { return x.date() === 1; })) {\n        return { format: \"ll\", unit: \"days\", incr: 1 };\n    }\n    if (!dates.every(function (x) { return x.month() % 3 === 0; })) {\n        return { format: \"MMM YYYY\", unit: \"months\", incr: 1 };\n    }\n    if (!dates.every(function (x) { return x.month() === 0; })) {\n        return { format: \"[Q]Q YYYY\", unit: \"months\", incr: 3 };\n    }\n    return { format: \"YYYY\", unit: \"years\", incr: 1 };\n}\nfunction smartDates(records, getDate, mapTo) {\n    records = __spreadArrays(records);\n    records.sort(function (x, y) { return moment_1.default(getDate(x)).diff(moment_1.default(getDate(y))); });\n    var _a = detectDateType(records.map(function (d) { return moment_1.default(getDate(d)); })), format = _a.format, unit = _a.unit, incr = _a.incr;\n    var results = [];\n    var latest = undefined;\n    for (var _i = 0, records_1 = records; _i < records_1.length; _i++) {\n        var record = records_1[_i];\n        var current = moment_1.default(getDate(record));\n        if (latest) {\n            for (;;) {\n                latest = latest.add(incr, unit);\n                if (latest >= current) {\n                    break;\n                }\n                results.push(mapTo(latest.format(format), undefined));\n            }\n        }\n        results.push(mapTo(current.format(format), record));\n        latest = current;\n    }\n    return results;\n}\nexports.smartDates = smartDates;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar clearedState = {\n    global: [],\n    interactions: [],\n    interactionKey: \"\",\n};\nfunction usePageFilters() {\n    var _a = react_1.useState(clearedState), state = _a[0], set = _a[1];\n    function setInteraction(interactionKey, interactions) {\n        set(__assign(__assign({}, state), { interactionKey: interactionKey, interactions: interactions }));\n    }\n    function setGlobal(global) {\n        set(__assign(__assign({}, state), { global: global }));\n    }\n    function clearInteraction() {\n        set(__assign(__assign({}, state), { interactionKey: \"\", interactions: [] }));\n    }\n    function clearGlobal() {\n        set(__assign(__assign({}, state), { global: [] }));\n    }\n    function clearAll() {\n        set(clearedState);\n    }\n    function getFilters(key) {\n        var result = state.global;\n        return key !== state.interactionKey ? result.concat(state.interactions) : result;\n    }\n    return __assign(__assign({}, state), { setInteraction: setInteraction, setGlobal: setGlobal, clearInteraction: clearInteraction, clearGlobal: clearGlobal, clearAll: clearAll, getFilters: getFilters });\n}\nexports.usePageFilters = usePageFilters;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar tinybi_1 = require(\"tinybi\");\nvar json_stable_stringify_1 = __importDefault(require(\"json-stable-stringify\"));\n/**\n * A custom React hook that evaluates to the result of a\n * [Query](../tinybi/interfaces/query.html), making it easy to perform a\n * query from within a component.\n *\n * The returned object has a strongly-typed `records` array, and optionally\n * a `totals` object.\n *\n * @param fetch The fetch function to use.\n * @param query The [Query](../tinybi/interfaces/query.html) specification.\n */\nfunction useQuery(fetch, query) {\n    var queryJson = tinybi_1.jsonifyQuery(query);\n    var _a = react_1.useState({ records: [] }), result = _a[0], setResult = _a[1];\n    react_1.useEffect(function () {\n        fetch(queryJson).then(setResult);\n    }, [json_stable_stringify_1.default(queryJson)]);\n    return tinybi_1.expandQueryResult(query.select, result);\n}\nexports.useQuery = useQuery;\n"],"sourceRoot":""}